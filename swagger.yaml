openapi: 3.0.0
info:
  title: Discord REST Api
  version: "10"
servers:
  - url: https://discord.com/api/v10
    description: The Discord v10 REST endpoint
paths:
  "/applications/{applicationId}/achievements":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/game-sdk/sdk-starter-guide#get-set-up)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Achievements
      summary: Get Achievements
      operationId: getAchievements
      parameters: []
      description: |-
        - [Get Achievements](https://discord.com/developers/docs/game-sdk/achievements#get-achievements)

            Returns all achievements for the given application. This endpoint has a rate limit of 5 requests per 5 seconds per application.
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Achievements
      summary: Create Achievement
      operationId: createAchievement
      parameters: []
      description: |-
        - [Create Achievement](https://discord.com/developers/docs/game-sdk/achievements#create-achievement)

            Creates a new achievement for your application. Applications can have a maximum of 1000 achievements. This endpoint has a rate limit of 5 requests per 5 seconds per application.
  "/applications/{applicationId}/achievements/{achievementId}":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/game-sdk/sdk-starter-guide#get-set-up)"
      - name: achievementId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[achievement.id](https://discord.com/developers/docs/game-sdk/achievements#data-models-achievement-struct)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Achievements
      summary: Get Achievement
      operationId: getAchievement
      parameters: []
      description: |-
        - [Get Achievement](https://discord.com/developers/docs/game-sdk/achievements#get-achievement)

            Returns the given achievement for the given application. This endpoint has a rate limit of 5 requests per 5 seconds per application.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Achievements
      summary: Update Achievement
      operationId: updateAchievement
      parameters: []
      description: |-
        - [Update Achievement](https://discord.com/developers/docs/game-sdk/achievements#update-achievement)

            Updates the achievement for **\_\_ALL USERS\_\_**. This is **NOT** to update a single user's achievement progress; this is to edit the UserAchievement itself. This endpoint has a rate limit of 5 requests per 5 seconds per application.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Achievements
      summary: Delete Achievement
      operationId: deleteAchievement
      parameters: []
      description: |-
        - [Delete Achievement](https://discord.com/developers/docs/game-sdk/achievements#delete-achievement)

            Deletes the given achievement from your application. This endpoint has a rate limit of 5 requests per 5 seconds per application.
  "/users/{userId}/applications/{applicationId}/achievements/{achievementId}":
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[user.id](https://discord.com/developers/docs/resources/user#user-object)"
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/game-sdk/sdk-starter-guide#get-set-up)"
      - name: achievementId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[achievement.id](https://discord.com/developers/docs/game-sdk/achievements#data-models-achievement-struct)"
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Achievements
      summary: Update User Achievement
      operationId: updateUserAchievement
      parameters: []
      description: |-
        - [Update User Achievement](https://discord.com/developers/docs/game-sdk/achievements#update-user-achievement)

            Updates the UserAchievement record for a given user. Use this endpoint to update `secure` achievement progress for users. This endpoint has a rate limit of 5 requests per 5 seconds per application.
  "/users/@me/applications/{applicationId}/achievements":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/game-sdk/sdk-starter-guide#get-set-up)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Achievements
      summary: Get User Achievements
      operationId: getUserAchievements
      parameters: []
      description: |-
        - [Get User Achievements](https://discord.com/developers/docs/game-sdk/achievements#get-user-achievements)

            Returns a list of achievements for the user whose token you're making the request with. This endpoint will **NOT** accept the Bearer token for your application generated via the [Client Credentials Grant](#DOCS_TOPICS_OAUTH2/client-credentials-grant). You will need the _user's_ bearer token, gotten via either the [Authorization Code OAuth2 Grant](#DOCS_TOPICS_OAUTH2/authorization-code-grant) or via the SDK with [GetOAuth2Token](#DOCS_GAME_SDK_APPLICATIONS/getoauth2token). This endpoint has a rate limit of 2 requests per 5 seconds per application per user.
          > info
          > This endpoint will _not_ return any achievements marked as `secret` that the user has not yet completed.
  "/applications/{applicationId}/commands":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/resources/application#application-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Get Global Application Commands
      operationId: getGlobalApplicationCommands
      parameters:
        - in: query
          name: with_localizations
          schema:
            type: boolean
          description: Whether to include full localization dictionaries (`name_localizations` and `description_localizations`) in the returned objects, instead of the `name_localized` and `description_localized` fields. Default `false`.
      description: |-
        - [Get Global Application Commands](https://discord.com/developers/docs/interactions/application-commands#get-global-application-commands)

            > warn
          > The objects returned by this endpoint may be augmented with [additional fields if localization is active](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/retrieving-localized-commands).
          Fetch all of the global commands for your application. Returns an array of [application command](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/application-command-object) objects.
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Create Global Application Command
      operationId: createGlobalApplicationCommand
      parameters: []
      description: |-
        - [Create Global Application Command](https://discord.com/developers/docs/interactions/application-commands#create-global-application-command)

            > danger
          > Creating a command with the same name as an existing command for your application will overwrite the old command.
          Create a new global command. Returns `201` and an [application command](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/application-command-object) object.
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Bulk Overwrite Global Application Commands
      operationId: bulkOverwriteGlobalApplicationCommands
      parameters: []
      description: |-
        - [Bulk Overwrite Global Application Commands](https://discord.com/developers/docs/interactions/application-commands#bulk-overwrite-global-application-commands)

            Takes a list of application commands, overwriting the existing global command list for this application. Returns `200` and a list of [application command](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/application-command-object) objects. Commands that do not already exist will count toward daily application command create limits.
          > danger
          > This will overwrite **all** types of application commands: slash commands, user commands, and message commands.
  "/applications/{applicationId}/commands/{commandId}":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/resources/application#application-object)"
      - name: commandId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[command.id](https://discord.com/developers/docs/interactions/application-commands#application-command-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Get Global Application Command
      operationId: getGlobalApplicationCommand
      parameters: []
      description: |-
        - [Get Global Application Command](https://discord.com/developers/docs/interactions/application-commands#get-global-application-command)

            Fetch a global command for your application. Returns an [application command](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/application-command-object) object.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Edit Global Application Command
      operationId: editGlobalApplicationCommand
      parameters: []
      description: |-
        - [Edit Global Application Command](https://discord.com/developers/docs/interactions/application-commands#edit-global-application-command)

            > info
          > All parameters for this endpoint are optional.
          Edit a global command. Returns `200` and an [application command](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/application-command-object) object. All fields are optional, but any fields provided will entirely overwrite the existing values of those fields.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Delete Global Application Command
      operationId: deleteGlobalApplicationCommand
      parameters: []
      description: |-
        - [Delete Global Application Command](https://discord.com/developers/docs/interactions/application-commands#delete-global-application-command)

            Deletes a global command. Returns `204 No Content` on success.
  "/applications/{applicationId}/guilds/{guildId}/commands":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/resources/application#application-object)"
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Get Guild Application Commands
      operationId: getGuildApplicationCommands
      parameters:
        - in: query
          name: with_localizations
          schema:
            type: boolean
          description: Whether to include full localization dictionaries (`name_localizations` and `description_localizations`) in the returned objects, instead of the `name_localized` and `description_localized` fields. Default `false`.
      description: |-
        - [Get Guild Application Commands](https://discord.com/developers/docs/interactions/application-commands#get-guild-application-commands)

            > warn
          > The objects returned by this endpoint may be augmented with [additional fields if localization is active](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/retrieving-localized-commands).
          Fetch all of the guild commands for your application for a specific guild. Returns an array of [application command](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/application-command-object) objects.
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Create Guild Application Command
      operationId: createGuildApplicationCommand
      parameters: []
      description: |-
        - [Create Guild Application Command](https://discord.com/developers/docs/interactions/application-commands#create-guild-application-command)

            > danger
          > Creating a command with the same name as an existing command for your application will overwrite the old command.
          Create a new guild command. New guild commands will be available in the guild immediately. Returns `201` and an [application command](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/application-command-object) object. If the command did not already exist, it will count toward daily application command create limits.
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Bulk Overwrite Guild Application Commands
      operationId: bulkOverwriteGuildApplicationCommands
      parameters: []
      description: |-
        - [Bulk Overwrite Guild Application Commands](https://discord.com/developers/docs/interactions/application-commands#bulk-overwrite-guild-application-commands)

            Takes a list of application commands, overwriting the existing command list for this application for the targeted guild. Returns `200` and a list of [application command](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/application-command-object) objects.
          > danger
          > This will overwrite **all** types of application commands: slash commands, user commands, and message commands.
  "/applications/{applicationId}/guilds/{guildId}/commands/{commandId}":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/resources/application#application-object)"
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
      - name: commandId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[command.id](https://discord.com/developers/docs/interactions/application-commands#application-command-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Get Guild Application Command
      operationId: getGuildApplicationCommand
      parameters: []
      description: |-
        - [Get Guild Application Command](https://discord.com/developers/docs/interactions/application-commands#get-guild-application-command)

            Fetch a guild command for your application. Returns an [application command](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/application-command-object) object.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Edit Guild Application Command
      operationId: editGuildApplicationCommand
      parameters: []
      description: |-
        - [Edit Guild Application Command](https://discord.com/developers/docs/interactions/application-commands#edit-guild-application-command)

            > info
          > All parameters for this endpoint are optional.
          Edit a guild command. Updates for guild commands will be available immediately. Returns `200` and an [application command](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/application-command-object) object. All fields are optional, but any fields provided will entirely overwrite the existing values of those fields.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Delete Guild Application Command
      operationId: deleteGuildApplicationCommand
      parameters: []
      description: |-
        - [Delete Guild Application Command](https://discord.com/developers/docs/interactions/application-commands#delete-guild-application-command)

            Delete a guild command. Returns `204 No Content` on success.
  "/applications/{applicationId}/guilds/{guildId}/commands/permissions":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/resources/application#application-object)"
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Get Guild Application Command Permissions
      operationId: getGuildApplicationCommandPermissions
      parameters: []
      description: |-
        - [Get Guild Application Command Permissions](https://discord.com/developers/docs/interactions/application-commands#get-guild-application-command-permissions)

            Fetches permissions for all commands for your application in a guild. Returns an array of [guild application command permissions](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/application-command-permissions-object-guild-application-command-permissions-structure) objects.
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Batch Edit Application Command Permissions
      operationId: batchEditApplicationCommandPermissions
      parameters: []
      description: |-
        - [Batch Edit Application Command Permissions](https://discord.com/developers/docs/interactions/application-commands#batch-edit-application-command-permissions)

            > danger
          > This endpoint has been disabled with [updates to command permissions (Permissions v2)](#DOCS_CHANGE_LOG/updated-command-permissions). Instead, you can [edit each application command permissions](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/edit-application-command-permissions) (though you should be careful to handle any potential [rate limits](#DOCS_TOPICS_RATE_LIMITS)).
  "/applications/{applicationId}/guilds/{guildId}/commands/{commandId}/permissions":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/resources/application#application-object)"
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
      - name: commandId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[command.id](https://discord.com/developers/docs/interactions/application-commands#application-command-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Get Application Command Permissions
      operationId: getApplicationCommandPermissions
      parameters: []
      description: |-
        - [Get Application Command Permissions](https://discord.com/developers/docs/interactions/application-commands#get-application-command-permissions)

            Fetches permissions for a specific command for your application in a guild. Returns a [guild application command permissions](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/application-command-permissions-object-guild-application-command-permissions-structure) object.
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Application Commands
      summary: Edit Application Command Permissions
      operationId: editApplicationCommandPermissions
      parameters: []
      description: |-
        - [Edit Application Command Permissions](https://discord.com/developers/docs/interactions/application-commands#edit-application-command-permissions)

            > warn
          > This endpoint will overwrite existing permissions for the command in that guild
          Edits command permissions for a specific command for your application in a guild and returns a [guild application command permissions](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/application-command-permissions-object-guild-application-command-permissions-structure) object. Fires an [Application Command Permissions Update](#DOCS_TOPICS_GATEWAY/application-command-permissions-update) Gateway event.
          You can add up to 100 permission overwrites for a command.
          > info
          > This endpoint requires authentication with a Bearer token that has permission to manage the guild and its roles. For more information, read above about [application command permissions](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/permissions).
          > warn
          > Deleting or renaming a command will permanently delete all permissions for the command
  "/guilds/{guildId}/audit-logs":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Audit Log
      summary: Get Guild Audit Log
      operationId: getGuildAuditLog
      parameters:
        - in: query
          name: user_id
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: Entries from a specific user ID
        - in: query
          name: action_type
          schema:
            $ref: "#/components/schemas/AuditLogEvents"
          description: Entries for a specific [audit log event](#DOCS_RESOURCES_AUDIT_LOG/audit-log-entry-object-audit-log-events)
        - in: query
          name: before
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: Entries that preceded a specific audit log entry ID
        - in: query
          name: limit
          schema:
            type: integer
          description: Maximum number of entries (between 1-100) to return, defaults to 50
      description: |-
        - [Get Guild Audit Log](https://discord.com/developers/docs/resources/audit-log#get-guild-audit-log)

            Returns an [audit log](#DOCS_RESOURCES_AUDIT_LOG/audit-log-object) object for the guild. Requires the [`VIEW_AUDIT_LOG`](#DOCS_TOPICS_PERMISSIONS/permissions-bitwise-permission-flags) permission.
  "/guilds/{guildId}/auto-moderation/rules":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Auto Moderation
      summary: List Auto Moderation Rules for Guild
      operationId: listAutoModerationRulesForGuild
      parameters: []
      description: |-
        - [List Auto Moderation Rules for Guild](https://discord.com/developers/docs/resources/auto-moderation#list-auto-moderation-rules-for-guild)

            Get a list of all rules currently configured for the guild. Returns a list of [auto moderation rule](#DOCS_RESOURCES_AUTO_MODERATION/auto-moderation-rule-object) objects for the given guild.
          > info
          > This endpoint requires the `MANAGE_GUILD` [permission](#DOCS_RESOURCES_AUTO_MODERATION/auto-moderation-permission-requirements).
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Auto Moderation
      summary: Create Auto Moderation Rule
      operationId: createAutoModerationRule
      parameters: []
      description: |-
        - [Create Auto Moderation Rule](https://discord.com/developers/docs/resources/auto-moderation#create-auto-moderation-rule)

            Create a new rule. Returns an [auto moderation rule](#DOCS_RESOURCES_AUTO_MODERATION/auto-moderation-rule-object) on success. Fires an [Auto Moderation Rule Create](#DOCS_TOPICS_GATEWAY/auto-moderation-rule-create) Gateway event.
          > info
          > This endpoint requires the `MANAGE_GUILD` [permission](#DOCS_RESOURCES_AUTO_MODERATION/auto-moderation-permission-requirements).
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/guilds/{guildId}/auto-moderation/rules/{autoModerationRuleId}":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
      - name: autoModerationRuleId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[auto_moderation_rule.id](https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Auto Moderation
      summary: Get Auto Moderation Rule
      operationId: getAutoModerationRule
      parameters: []
      description: |-
        - [Get Auto Moderation Rule](https://discord.com/developers/docs/resources/auto-moderation#get-auto-moderation-rule)

            Get a single rule. Returns an [auto moderation rule](#DOCS_RESOURCES_AUTO_MODERATION/auto-moderation-rule-object) object.
          > info
          > This endpoint requires the `MANAGE_GUILD` [permission](#DOCS_RESOURCES_AUTO_MODERATION/auto-moderation-permission-requirements).
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Auto Moderation
      summary: Modify Auto Moderation Rule
      operationId: modifyAutoModerationRule
      parameters: []
      description: |-
        - [Modify Auto Moderation Rule](https://discord.com/developers/docs/resources/auto-moderation#modify-auto-moderation-rule)

            Modify an existing rule. Returns an [auto moderation rule](#DOCS_RESOURCES_AUTO_MODERATION/auto-moderation-rule-object) on success. Fires an [Auto Moderation Rule Update](#DOCS_TOPICS_GATEWAY/auto-moderation-rule-update) Gateway event.
          > info
          > Requires `MANAGE_GUILD` [permissions](#DOCS_RESOURCES_AUTO_MODERATION/auto-moderation-permission-requirements).
          > info
          > All parameters for this endpoint are optional.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Auto Moderation
      summary: Delete Auto Moderation Rule
      operationId: deleteAutoModerationRule
      parameters: []
      description: |-
        - [Delete Auto Moderation Rule](https://discord.com/developers/docs/resources/auto-moderation#delete-auto-moderation-rule)

            Delete a rule. Returns a `204` on success. Fires an [Auto Moderation Rule Delete](#DOCS_TOPICS_GATEWAY/auto-moderation-rule-delete) Gateway event.
          > info
          > This endpoint requires the `MANAGE_GUILD` [permission](#DOCS_RESOURCES_AUTO_MODERATION/auto-moderation-permission-requirements).
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/channels/{channelId}":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Get Channel
      operationId: getChannel
      parameters: []
      description: |-
        - [Get Channel](https://discord.com/developers/docs/resources/channel#get-channel)

            Get a channel by ID. Returns a [channel](#DOCS_RESOURCES_CHANNEL/channel-object) object.  If the channel is a thread, a [thread member](#DOCS_RESOURCES_CHANNEL/thread-member-object) object is included in the returned result.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Modify Channel
      operationId: modifyChannel
      parameters: []
      description: |-
        - [Modify Channel](https://discord.com/developers/docs/resources/channel#modify-channel)

            Update a channel's settings. Returns a [channel](#DOCS_RESOURCES_CHANNEL/channel-object) on success, and a 400 BAD REQUEST on invalid parameters. All JSON parameters are optional.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Delete/Close Channel
      operationId: deleteCloseChannel
      parameters: []
      description: |-
        - [Delete/Close Channel](https://discord.com/developers/docs/resources/channel#delete)

            Delete a channel, or close a private message. Requires the `MANAGE_CHANNELS` permission for the guild, or `MANAGE_THREADS` if the channel is a thread. Deleting a category does not delete its child channels; they will have their `parent_id` removed and a [Channel Update](#DOCS_TOPICS_GATEWAY/channel-update) Gateway event will fire for each of them. Returns a [channel](#DOCS_RESOURCES_CHANNEL/channel-object) object on success. Fires a [Channel Delete](#DOCS_TOPICS_GATEWAY/channel-delete) Gateway event (or [Thread Delete](#DOCS_TOPICS_GATEWAY/thread-delete) if the channel was a thread).
          > warn
          > Deleting a guild channel cannot be undone. Use this with caution, as it is impossible to undo this action when performed on a guild channel. In contrast, when used with a private message, it is possible to undo the action by opening a private message with the recipient again.
          > info
          > For Community guilds, the Rules or Guidelines channel and the Community Updates channel cannot be deleted.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/channels/{channelId}/messages":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Get Channel Messages
      operationId: getChannelMessages
      parameters:
        - in: query
          name: around
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: |-
            Get messages around this message ID
            default: absent
        - in: query
          name: before
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: |-
            Get messages before this message ID
            default: absent
        - in: query
          name: after
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: |-
            Get messages after this message ID
            default: absent
        - in: query
          name: limit
          schema:
            type: integer
          description: |-
            Max number of messages to return (1-100)
            default: 50
      description: |-
        - [Get Channel Messages](https://discord.com/developers/docs/resources/channel#get-channel-messages)

            Returns the messages for a channel. If operating on a guild channel, this endpoint requires the `VIEW_CHANNEL` permission to be present on the current user. If the current user is missing the `READ_MESSAGE_HISTORY` permission in the channel then this will return no messages (since they cannot read the message history). Returns an array of [message](#DOCS_RESOURCES_CHANNEL/message-object) objects on success.
          > info
          > The `before`, `after`, and `around` parameters are mutually exclusive, only one may be passed at a time.
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Create Message
      operationId: createMessage
      parameters: []
      description: |-
        - [Create Message](https://discord.com/developers/docs/resources/channel#create-message)

            > warn
          > Discord may strip certain characters from message content, like invalid unicode characters or characters which cause unexpected message formatting. If you are passing user-generated strings into message content, consider sanitizing the data to prevent unexpected behavior and utilizing `allowed_mentions` to prevent unexpected mentions.
          Post a message to a guild text or DM channel. Returns a [message](#DOCS_RESOURCES_CHANNEL/message-object) object. Fires a [Message Create](#DOCS_TOPICS_GATEWAY/message-create) Gateway event. See [message formatting](#DOCS_REFERENCE/message-formatting) for more information on how to properly format messages.
          To create a message as a reply to another message, apps can include a [`message_reference`](#DOCS_RESOURCES_CHANNEL/message-reference-object-message-reference-structure) with a `message_id`. The `channel_id` and `guild_id` in the `message_reference` are optional, but will be validated if provided.
          Files must be attached using a `multipart/form-data` body as described in [Uploading Files](#DOCS_REFERENCE/uploading-files).
  "/channels/{channelId}/messages/{messageId}":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
      - name: messageId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[message.id](https://discord.com/developers/docs/resources/channel#message-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Get Channel Message
      operationId: getChannelMessage
      parameters: []
      description: |-
        - [Get Channel Message](https://discord.com/developers/docs/resources/channel#get-channel-message)

            Returns a specific message in the channel. If operating on a guild channel, this endpoint requires the `READ_MESSAGE_HISTORY` permission to be present on the current user. Returns a [message](#DOCS_RESOURCES_CHANNEL/message-object) object on success.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Edit Message
      operationId: editMessage
      parameters: []
      description: |-
        - [Edit Message](https://discord.com/developers/docs/resources/channel#edit-message)

            Edit a previously sent message. The fields `content`, `embeds`, and `flags` can be edited by the original message author. Other users can only edit `flags` and only if they have the `MANAGE_MESSAGES` permission in the corresponding channel. When specifying flags, ensure to include all previously set flags/bits in addition to ones that you are modifying. Only `flags` documented in the table below may be modified by users (unsupported flag changes are currently ignored without error).
          When the `content` field is edited, the `mentions` array in the message object will be reconstructed from scratch based on the new content. The `allowed_mentions` field of the edit request controls how this happens. If there is no explicit `allowed_mentions` in the edit request, the content will be parsed with _default_ allowances, that is, without regard to whether or not an `allowed_mentions` was present in the request that originally created the message.
          Returns a [message](#DOCS_RESOURCES_CHANNEL/message-object) object. Fires a [Message Update](#DOCS_TOPICS_GATEWAY/message-update) Gateway event.
          Refer to [Uploading Files](#DOCS_REFERENCE/uploading-files) for details on attachments and `multipart/form-data` requests.
          Any provided files will be **appended** to the message. To remove or replace files you will have to supply the `attachments` field which specifies the files to retain on the message after edit.
          > warn
          > Starting with API v10, the `attachments` array must contain all attachments that should be present after edit, including **retained and new** attachments provided in the request body.
          > info
          > All parameters to this endpoint are optional and nullable.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Delete Message
      operationId: deleteMessage
      parameters: []
      description: |-
        - [Delete Message](https://discord.com/developers/docs/resources/channel#delete-message)

            Delete a message. If operating on a guild channel and trying to delete a message that was not sent by the current user, this endpoint requires the `MANAGE_MESSAGES` permission. Returns a 204 empty response on success. Fires a [Message Delete](#DOCS_TOPICS_GATEWAY/message-delete) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/channels/{channelId}/messages/{messageId}/crosspost":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
      - name: messageId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[message.id](https://discord.com/developers/docs/resources/channel#message-object)"
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Crosspost Message
      operationId: crosspostMessage
      parameters: []
      description: |-
        - [Crosspost Message](https://discord.com/developers/docs/resources/channel#crosspost-message)

            Crosspost a message in an Announcement Channel to following channels. This endpoint requires the `SEND_MESSAGES` permission, if the current user sent the message, or additionally the `MANAGE_MESSAGES` permission, for all other messages, to be present for the current user.
          Returns a [message](#DOCS_RESOURCES_CHANNEL/message-object) object.
  "/channels/{channelId}/messages/{messageId}/reactions/{emoji}/@me":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
      - name: messageId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[message.id](https://discord.com/developers/docs/resources/channel#message-object)"
      - name: emoji
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Emoji"
        description: "[emoji](https://discord.com/developers/docs/resources/emoji#emoji-object)"
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Create Reaction
      operationId: createReaction
      parameters: []
      description: |-
        - [Create Reaction](https://discord.com/developers/docs/resources/channel#create-reaction)

            Create a reaction for the message. This endpoint requires the `READ_MESSAGE_HISTORY` permission to be present on the current user. Additionally, if nobody else has reacted to the message using this emoji, this endpoint requires the `ADD_REACTIONS` permission to be present on the current user. Returns a 204 empty response on success. Fires a [Message Reaction Add](#DOCS_TOPICS_GATEWAY/message-reaction-add) Gateway event.
          The `emoji` must be [URL Encoded](https://en.wikipedia.org/wiki/Percent-encoding) or the request will fail with `10014: Unknown Emoji`. To use custom emoji, you must encode it in the format `name:id` with the emoji name and emoji id.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Delete Own Reaction
      operationId: deleteOwnReaction
      parameters: []
      description: |-
        - [Delete Own Reaction](https://discord.com/developers/docs/resources/channel#delete-own-reaction)

            Delete a reaction the current user has made for the message. Returns a 204 empty response on success. Fires a [Message Reaction Remove](#DOCS_TOPICS_GATEWAY/message-reaction-remove) Gateway event.
          The `emoji` must be [URL Encoded](https://en.wikipedia.org/wiki/Percent-encoding) or the request will fail with `10014: Unknown Emoji`. To use custom emoji, you must encode it in the format `name:id` with the emoji name and emoji id.
  "/channels/{channelId}/messages/{messageId}/reactions/{emoji}/{userId}":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
      - name: messageId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[message.id](https://discord.com/developers/docs/resources/channel#message-object)"
      - name: emoji
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Emoji"
        description: "[emoji](https://discord.com/developers/docs/resources/emoji#emoji-object)"
      - name: userId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[user.id](https://discord.com/developers/docs/resources/user#user-object)"
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Delete User Reaction
      operationId: deleteUserReaction
      parameters: []
      description: |-
        - [Delete User Reaction](https://discord.com/developers/docs/resources/channel#delete-user-reaction)

            Deletes another user's reaction. This endpoint requires the `MANAGE_MESSAGES` permission to be present on the current user. Returns a 204 empty response on success. Fires a [Message Reaction Remove](#DOCS_TOPICS_GATEWAY/message-reaction-remove) Gateway event.
          The `emoji` must be [URL Encoded](https://en.wikipedia.org/wiki/Percent-encoding) or the request will fail with `10014: Unknown Emoji`. To use custom emoji, you must encode it in the format `name:id` with the emoji name and emoji id.
  "/channels/{channelId}/messages/{messageId}/reactions/{emoji}":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
      - name: messageId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[message.id](https://discord.com/developers/docs/resources/channel#message-object)"
      - name: emoji
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Emoji"
        description: "[emoji](https://discord.com/developers/docs/resources/emoji#emoji-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Get Reactions
      operationId: getReactions
      parameters:
        - in: query
          name: after
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: |-
            Get users after this user ID
            default: absent
        - in: query
          name: limit
          schema:
            type: integer
          description: |-
            Max number of users to return (1-100)
            default: 25
      description: |-
        - [Get Reactions](https://discord.com/developers/docs/resources/channel#get-reactions)

            Get a list of users that reacted with this emoji. Returns an array of [user](#DOCS_RESOURCES_USER/user-object) objects on success.
          The `emoji` must be [URL Encoded](https://en.wikipedia.org/wiki/Percent-encoding) or the request will fail with `10014: Unknown Emoji`. To use custom emoji, you must encode it in the format `name:id` with the emoji name and emoji id.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Delete All Reactions for Emoji
      operationId: deleteAllReactionsForEmoji
      parameters: []
      description: |-
        - [Delete All Reactions for Emoji](https://discord.com/developers/docs/resources/channel#delete-all-reactions-for-emoji)

            Deletes all the reactions for a given emoji on a message. This endpoint requires the `MANAGE_MESSAGES` permission to be present on the current user. Fires a [Message Reaction Remove Emoji](#DOCS_TOPICS_GATEWAY/message-reaction-remove-emoji) Gateway event.
          The `emoji` must be [URL Encoded](https://en.wikipedia.org/wiki/Percent-encoding) or the request will fail with `10014: Unknown Emoji`. To use custom emoji, you must encode it in the format `name:id` with the emoji name and emoji id.
  "/channels/{channelId}/messages/{messageId}/reactions":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
      - name: messageId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[message.id](https://discord.com/developers/docs/resources/channel#message-object)"
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Delete All Reactions
      operationId: deleteAllReactions
      parameters: []
      description: |-
        - [Delete All Reactions](https://discord.com/developers/docs/resources/channel#delete-all-reactions)

            Deletes all reactions on a message. This endpoint requires the `MANAGE_MESSAGES` permission to be present on the current user. Fires a [Message Reaction Remove All](#DOCS_TOPICS_GATEWAY/message-reaction-remove-all) Gateway event.
  "/channels/{channelId}/messages/bulk-delete":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Bulk Delete Messages
      operationId: bulkDeleteMessages
      parameters: []
      description: |-
        - [Bulk Delete Messages](https://discord.com/developers/docs/resources/channel#bulk-delete-messages)

            Delete multiple messages in a single request. This endpoint can only be used on guild channels and requires the `MANAGE_MESSAGES` permission. Returns a 204 empty response on success. Fires a [Message Delete Bulk](#DOCS_TOPICS_GATEWAY/message-delete-bulk) Gateway event.
          Any message IDs given that do not exist or are invalid will count towards the minimum and maximum message count (currently 2 and 100 respectively).
          > warn
          > This endpoint will not delete messages older than 2 weeks, and will fail with a 400 BAD REQUEST if any message provided is older than that or if any duplicate message IDs are provided.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/channels/{channelId}/permissions/{overwriteId}":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
      - name: overwriteId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[overwrite.id](https://discord.com/developers/docs/resources/channel#overwrite-object)"
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Edit Channel Permissions
      operationId: editChannelPermissions
      parameters: []
      description: |-
        - [Edit Channel Permissions](https://discord.com/developers/docs/resources/channel#edit-channel-permissions)

            Edit the channel permission overwrites for a user or role in a channel. Only usable for guild channels. Requires the `MANAGE_ROLES` permission. Only permissions your bot has in the guild or parent channel (if applicable) can be allowed/denied (unless your bot has a `MANAGE_ROLES` overwrite in the channel). Returns a 204 empty response on success. Fires a [Channel Update](#DOCS_TOPICS_GATEWAY/channel-update) Gateway event. For more information about permissions, see [permissions](#DOCS_TOPICS_PERMISSIONS/permissions).
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Delete Channel Permission
      operationId: deleteChannelPermission
      parameters: []
      description: |-
        - [Delete Channel Permission](https://discord.com/developers/docs/resources/channel#delete-channel-permission)

            Delete a channel permission overwrite for a user or role in a channel. Only usable for guild channels. Requires the `MANAGE_ROLES` permission. Returns a 204 empty response on success. Fires a [Channel Update](#DOCS_TOPICS_GATEWAY/channel-update) Gateway event. For more information about permissions, see [permissions](#DOCS_TOPICS_PERMISSIONS/permissions)
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/channels/{channelId}/invites":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Get Channel Invites
      operationId: getChannelInvites
      parameters: []
      description: |-
        - [Get Channel Invites](https://discord.com/developers/docs/resources/channel#get-channel-invites)

            Returns a list of [invite](#DOCS_RESOURCES_INVITE/invite-object) objects (with [invite metadata](#DOCS_RESOURCES_INVITE/invite-metadata-object)) for the channel. Only usable for guild channels. Requires the `MANAGE_CHANNELS` permission.
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Create Channel Invite
      operationId: createChannelInvite
      parameters: []
      description: |-
        - [Create Channel Invite](https://discord.com/developers/docs/resources/channel#create-channel-invite)

            Create a new [invite](#DOCS_RESOURCES_INVITE/invite-object) object for the channel. Only usable for guild channels. Requires the `CREATE_INSTANT_INVITE` permission. All JSON parameters for this route are optional, however the request body is not. If you are not sending any fields, you still have to send an empty JSON object (`{}`). Returns an [invite](#DOCS_RESOURCES_INVITE/invite-object) object. Fires an [Invite Create](#DOCS_TOPICS_GATEWAY/invite-create) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/channels/{channelId}/followers":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Follow Announcement Channel
      operationId: followAnnouncementChannel
      parameters: []
      description: |-
        - [Follow Announcement Channel](https://discord.com/developers/docs/resources/channel#follow-announcement-channel)

            Follow an Announcement Channel to send messages to a target channel. Requires the `MANAGE_WEBHOOKS` permission in the target channel. Returns a [followed channel](#DOCS_RESOURCES_CHANNEL/followed-channel-object) object. Fires a [Webhooks Update](#DOCS_TOPICS_GATEWAY/webhooks-update) Gateway event for the target channel.
  "/channels/{channelId}/typing":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Trigger Typing Indicator
      operationId: triggerTypingIndicator
      parameters: []
      description: |-
        - [Trigger Typing Indicator](https://discord.com/developers/docs/resources/channel#trigger-typing-indicator)

            Post a typing indicator for the specified channel. Generally bots should **not** implement this route. However, if a bot is responding to a command and expects the computation to take a few seconds, this endpoint may be called to let the user know that the bot is processing their message. Returns a 204 empty response on success. Fires a [Typing Start](#DOCS_TOPICS_GATEWAY/typing-start) Gateway event.
  "/channels/{channelId}/pins":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Get Pinned Messages
      operationId: getPinnedMessages
      parameters: []
      description: |-
        - [Get Pinned Messages](https://discord.com/developers/docs/resources/channel#get-pinned-messages)

            Returns all pinned messages in the channel as an array of [message](#DOCS_RESOURCES_CHANNEL/message-object) objects.
  "/channels/{channelId}/pins/{messageId}":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
      - name: messageId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[message.id](https://discord.com/developers/docs/resources/channel#message-object)"
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Pin Message
      operationId: pinMessage
      parameters: []
      description: |-
        - [Pin Message](https://discord.com/developers/docs/resources/channel#pin-message)

            Pin a message in a channel. Requires the `MANAGE_MESSAGES` permission. Returns a 204 empty response on success. Fires a [Channel Pins Update](#DOCS_TOPICS_GATEWAY/channel-pins-update) Gateway event.
          > warn
          > The max pinned messages is 50.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Unpin Message
      operationId: unpinMessage
      parameters: []
      description: |-
        - [Unpin Message](https://discord.com/developers/docs/resources/channel#unpin-message)

            Unpin a message in a channel. Requires the `MANAGE_MESSAGES` permission. Returns a 204 empty response on success. Fires a [Channel Pins Update](#DOCS_TOPICS_GATEWAY/channel-pins-update) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/channels/{channelId}/recipients/{userId}":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
      - name: userId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[user.id](https://discord.com/developers/docs/resources/user#user-object)"
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Group DM Add Recipient
      operationId: groupDMAddRecipient
      parameters: []
      description: |-
        - [Group DM Add Recipient](https://discord.com/developers/docs/resources/channel#group-dm-add-recipient)

            Adds a recipient to a Group DM using their access token.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Group DM Remove Recipient
      operationId: groupDMRemoveRecipient
      parameters: []
      description: |-
        - [Group DM Remove Recipient](https://discord.com/developers/docs/resources/channel#group-dm-remove-recipient)

            Removes a recipient from a Group DM.
  "/channels/{channelId}/messages/{messageId}/threads":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
      - name: messageId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[message.id](https://discord.com/developers/docs/resources/channel#message-object)"
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Start Thread from Message
      operationId: startThreadFromMessage
      parameters: []
      description: |-
        - [Start Thread from Message](https://discord.com/developers/docs/resources/channel#start-thread-from-message)

            Creates a new thread from an existing message. Returns a [channel](#DOCS_RESOURCES_CHANNEL/channel-object) on success, and a 400 BAD REQUEST on invalid parameters. Fires a [Thread Create](#DOCS_TOPICS_GATEWAY/thread-create) Gateway event.
          When called on a `GUILD_TEXT` channel, creates a `PUBLIC_THREAD`. When called on a `GUILD_ANNOUNCEMENT` channel, creates a `ANNOUNCEMENT_THREAD`. Does not work on a [`GUILD_FORUM`](#DOCS_RESOURCES_CHANNEL/start-thread-in-forum-channel) channel. The id of the created thread will be the same as the id of the source message, and as such a message can only have a single thread created from it.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/channels/{channelId}/threads":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Start Thread without Message or Start Thread in Forum Channel
      operationId: startThreadWithoutMessageOrstartThreadInForumChannel
      parameters: []
      description: |-
        - [Start Thread without Message](https://discord.com/developers/docs/resources/channel#start-thread-without-message)

            Creates a new thread that is not connected to an existing message. Returns a [channel](#DOCS_RESOURCES_CHANNEL/channel-object) on success, and a 400 BAD REQUEST on invalid parameters. Fires a [Thread Create](#DOCS_TOPICS_GATEWAY/thread-create) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
          > info
          > Creating a private thread requires the server to be boosted. The [guild features](#DOCS_RESOURCES_GUILD/guild-object-guild-features) will indicate if that is possible for the guild.
        - [Start Thread in Forum Channel](https://discord.com/developers/docs/resources/channel#start-thread-in-forum-channel)

            Creates a new thread in a forum channel, and sends a message within the created thread. Returns a [channel](#DOCS_RESOURCES_CHANNEL/channel-object), with a nested [message](#DOCS_RESOURCES_CHANNEL/message-object) object, on success, and a 400 BAD REQUEST on invalid parameters. Fires a [Thread Create](#DOCS_TOPICS_GATEWAY/thread-create) and [Message Create](#DOCS_TOPICS_GATEWAY/message-create) Gateway event.
          - The type of the created thread is `PUBLIC_THREAD`.
          - See [message formatting](#DOCS_REFERENCE/message-formatting) for more information on how to properly format messages.
          - The current user must have the `SEND_MESSAGES` permission (`CREATE_PUBLIC_THREADS` is ignored).
          - The maximum request size when sending a message is **8MiB**.
          - For the embed object, you can set every field except `type` (it will be `rich` regardless of if you try to set it), `provider`, `video`, and any `height`, `width`, or `proxy_url` values for images.
          - Examples for file uploads are available in [Uploading Files](#DOCS_REFERENCE/uploading-files).
          - Files must be attached using a `multipart/form-data` body as described in [Uploading Files](#DOCS_REFERENCE/uploading-files).
          - Note that when sending a message, you must provide a value for at **least one of** `content`, `embeds`, or `files[n]`.
          > warn
          > Discord may strip certain characters from message content, like invalid unicode characters or characters which cause unexpected message formatting. If you are passing user-generated strings into message content, consider sanitizing the data to prevent unexpected behavior and utilizing `allowed_mentions` to prevent unexpected mentions.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/channels/{channelId}/thread-members/@me":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Join Thread
      operationId: joinThread
      parameters: []
      description: |-
        - [Join Thread](https://discord.com/developers/docs/resources/channel#join-thread)

            Adds the current user to a thread. Also requires the thread is not archived. Returns a 204 empty response on success. Fires a [Thread Members Update](#DOCS_TOPICS_GATEWAY/thread-members-update) Gateway event.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Leave Thread
      operationId: leaveThread
      parameters: []
      description: |-
        - [Leave Thread](https://discord.com/developers/docs/resources/channel#leave-thread)

            Removes the current user from a thread. Also requires the thread is not archived. Returns a 204 empty response on success. Fires a [Thread Members Update](#DOCS_TOPICS_GATEWAY/thread-members-update) Gateway event.
  "/channels/{channelId}/thread-members/{userId}":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
      - name: userId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[user.id](https://discord.com/developers/docs/resources/user#user-object)"
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Add Thread Member
      operationId: addThreadMember
      parameters: []
      description: |-
        - [Add Thread Member](https://discord.com/developers/docs/resources/channel#add-thread-member)

            Adds another member to a thread. Requires the ability to send messages in the thread. Also requires the thread is not archived. Returns a 204 empty response if the member is successfully added or was already a member of the thread. Fires a [Thread Members Update](#DOCS_TOPICS_GATEWAY/thread-members-update) Gateway event.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Remove Thread Member
      operationId: removeThreadMember
      parameters: []
      description: |-
        - [Remove Thread Member](https://discord.com/developers/docs/resources/channel#remove-thread-member)

            Removes another member from a thread. Requires the `MANAGE_THREADS` permission, or the creator of the thread if it is a `GUILD_PRIVATE_THREAD`. Also requires the thread is not archived. Returns a 204 empty response on success. Fires a [Thread Members Update](#DOCS_TOPICS_GATEWAY/thread-members-update) Gateway event.
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: Get Thread Member
      operationId: getThreadMember
      parameters: []
      description: |-
        - [Get Thread Member](https://discord.com/developers/docs/resources/channel#get-thread-member)

            Returns a [thread member](#DOCS_RESOURCES_CHANNEL/thread-member-object) object for the specified user if they are a member of the thread, returns a 404 response otherwise.
  "/channels/{channelId}/thread-members":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: List Thread Members
      operationId: listThreadMembers
      parameters: []
      description: |-
        - [List Thread Members](https://discord.com/developers/docs/resources/channel#list-thread-members)

            Returns array of [thread members](#DOCS_RESOURCES_CHANNEL/thread-member-object) objects that are members of the thread.
          > warn
          > This endpoint is restricted according to whether the `GUILD_MEMBERS` [Privileged Intent](#DOCS_TOPICS_GATEWAY/privileged-intents) is enabled for your application.
  "/channels/{channelId}/threads/archived/public":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: List Public Archived Threads
      operationId: listPublicArchivedThreads
      parameters:
        - in: query
          name: before
          schema:
            $ref: "#/components/schemas/ISO8601DateTime"
          description: returns threads before this timestamp
        - in: query
          name: limit
          schema:
            type: integer
          description: optional maximum number of threads to return
      description: |-
        - [List Public Archived Threads](https://discord.com/developers/docs/resources/channel#list-public-archived-threads)

            Returns archived threads in the channel that are public. When called on a `GUILD_TEXT` channel, returns threads of [type](#DOCS_RESOURCES_CHANNEL/channel-object-channel-types) `PUBLIC_THREAD`. When called on a `GUILD_ANNOUNCEMENT` channel returns threads of [type](#DOCS_RESOURCES_CHANNEL/channel-object-channel-types) `ANNOUNCEMENT_THREAD`. Threads are ordered by `archive_timestamp`, in descending order. Requires the `READ_MESSAGE_HISTORY` permission.
  "/channels/{channelId}/threads/archived/private":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: List Private Archived Threads
      operationId: listPrivateArchivedThreads
      parameters:
        - in: query
          name: before
          schema:
            $ref: "#/components/schemas/ISO8601DateTime"
          description: returns threads before this timestamp
        - in: query
          name: limit
          schema:
            type: integer
          description: optional maximum number of threads to return
      description: |-
        - [List Private Archived Threads](https://discord.com/developers/docs/resources/channel#list-private-archived-threads)

            Returns archived threads in the channel that are of [type](#DOCS_RESOURCES_CHANNEL/channel-object-channel-types) `GUILD_PRIVATE_THREAD`. Threads are ordered by `archive_timestamp`, in descending order. Requires both the `READ_MESSAGE_HISTORY` and `MANAGE_THREADS` permissions.
  "/channels/{channelId}/users/@me/threads/archived/private":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Channel
      summary: List Joined Private Archived Threads
      operationId: listJoinedPrivateArchivedThreads
      parameters:
        - in: query
          name: before
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: returns threads before this id
        - in: query
          name: limit
          schema:
            type: integer
          description: optional maximum number of threads to return
      description: |-
        - [List Joined Private Archived Threads](https://discord.com/developers/docs/resources/channel#list-joined-private-archived-threads)

            Returns archived threads in the channel that are of [type](#DOCS_RESOURCES_CHANNEL/channel-object-channel-types) `GUILD_PRIVATE_THREAD`, and the user has joined. Threads are ordered by their `id`, in descending order. Requires the `READ_MESSAGE_HISTORY` permission.
  "/guilds/{guildId}/emojis":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Emoji
      summary: List Guild Emojis
      operationId: listGuildEmojis
      parameters: []
      description: |-
        - [List Guild Emojis](https://discord.com/developers/docs/resources/emoji#list-guild-emojis)

            Returns a list of [emoji](#DOCS_RESOURCES_EMOJI/emoji-object) objects for the given guild.
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Emoji
      summary: Create Guild Emoji
      operationId: createGuildEmoji
      parameters: []
      description: |-
        - [Create Guild Emoji](https://discord.com/developers/docs/resources/emoji#create-guild-emoji)

            Create a new emoji for the guild. Requires the `MANAGE_EMOJIS_AND_STICKERS` permission. Returns the new [emoji](#DOCS_RESOURCES_EMOJI/emoji-object) object on success. Fires a [Guild Emojis Update](#DOCS_TOPICS_GATEWAY/guild-emojis-update) Gateway event.
          > warn
          > Emojis and animated emojis have a maximum file size of 256kb. Attempting to upload an emoji larger than this limit will fail and return 400 Bad Request and an error message, but not a [JSON status code](#DOCS_TOPICS_OPCODES_AND_STATUS_CODES/json).
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/guilds/{guildId}/emojis/{emojiId}":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
      - name: emojiId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[emoji.id](https://discord.com/developers/docs/resources/emoji#emoji-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Emoji
      summary: Get Guild Emoji
      operationId: getGuildEmoji
      parameters: []
      description: |-
        - [Get Guild Emoji](https://discord.com/developers/docs/resources/emoji#get-guild-emoji)

            Returns an [emoji](#DOCS_RESOURCES_EMOJI/emoji-object) object for the given guild and emoji IDs.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Emoji
      summary: Modify Guild Emoji
      operationId: modifyGuildEmoji
      parameters: []
      description: |-
        - [Modify Guild Emoji](https://discord.com/developers/docs/resources/emoji#modify-guild-emoji)

            Modify the given emoji. Requires the `MANAGE_EMOJIS_AND_STICKERS` permission. Returns the updated [emoji](#DOCS_RESOURCES_EMOJI/emoji-object) object on success. Fires a [Guild Emojis Update](#DOCS_TOPICS_GATEWAY/guild-emojis-update) Gateway event.
          > info
          > All parameters to this endpoint are optional.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Emoji
      summary: Delete Guild Emoji
      operationId: deleteGuildEmoji
      parameters: []
      description: |-
        - [Delete Guild Emoji](https://discord.com/developers/docs/resources/emoji#delete-guild-emoji)

            Delete the given emoji. Requires the `MANAGE_EMOJIS_AND_STICKERS` permission. Returns `204 No Content` on success. Fires a [Guild Emojis Update](#DOCS_TOPICS_GATEWAY/guild-emojis-update) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  /gateway:
    parameters: []
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Gateway
      summary: Get Gateway
      operationId: getGateway
      parameters: []
      description: |-
        - [Get Gateway](https://discord.com/developers/docs/topics/gateway#get-gateway)

            > info
          > This endpoint does not require authentication.
          Returns an object with a single valid WSS URL, which the client can use for [Connecting](#DOCS_TOPICS_GATEWAY/connecting). Clients **should** cache this value and only call this endpoint to retrieve a new URL if they are unable to properly establish a connection using the cached version of the URL.
  /gateway/bot:
    parameters: []
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Gateway
      summary: Get Gateway Bot
      operationId: getGatewayBot
      parameters: []
      description: |-
        - [Get Gateway Bot](https://discord.com/developers/docs/topics/gateway#get-gateway-bot)

            > warn
          > This endpoint requires authentication using a valid bot token.
          Returns an object based on the information in [Get Gateway](#DOCS_TOPICS_GATEWAY/get-gateway), plus additional metadata that can help during the operation of large or [sharded](#DOCS_TOPICS_GATEWAY/sharding) bots. Unlike the [Get Gateway](#DOCS_TOPICS_GATEWAY/get-gateway), this route should not be cached for extended periods of time as the value is not guaranteed to be the same per-call, and changes as the bot joins/leaves guilds.
  /guilds:
    parameters: []
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Create Guild
      operationId: createGuild
      parameters: []
      description: |-
        - [Create Guild](https://discord.com/developers/docs/resources/guild#create-guild)

            Create a new guild. Returns a [guild](#DOCS_RESOURCES_GUILD/guild-object) object on success. Fires a [Guild Create](#DOCS_TOPICS_GATEWAY/guild-create) Gateway event.
          > warn
          > This endpoint can be used only by bots in less than 10 guilds.
  "/guilds/{guildId}":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild
      operationId: getGuild
      parameters:
        - in: query
          name: with_counts
          schema:
            type: boolean
          description: |-
            when `true`, will return approximate member and presence counts for the guild
            default: false
      description: |-
        - [Get Guild](https://discord.com/developers/docs/resources/guild#get-guild)

            Returns the [guild](#DOCS_RESOURCES_GUILD/guild-object) object for the given id. If `with_counts` is set to `true`, this endpoint will also return `approximate_member_count` and `approximate_presence_count` for the guild.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Modify Guild
      operationId: modifyGuild
      parameters: []
      description: |-
        - [Modify Guild](https://discord.com/developers/docs/resources/guild#modify-guild)

            Modify a guild's settings. Requires the `MANAGE_GUILD` permission. Returns the updated [guild](#DOCS_RESOURCES_GUILD/guild-object) object on success. Fires a [Guild Update](#DOCS_TOPICS_GATEWAY/guild-update) Gateway event.
          > info
          > All parameters to this endpoint are optional
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
          > warn
          > Attempting to add or remove the `COMMUNITY` [guild feature](#DOCS_RESOURCES_GUILD/guild-object-guild-features) requires the `ADMINISTRATOR` permission.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Delete Guild
      operationId: deleteGuild
      parameters: []
      description: |-
        - [Delete Guild](https://discord.com/developers/docs/resources/guild#delete-guild)

            Delete a guild permanently. User must be owner. Returns `204 No Content` on success. Fires a [Guild Delete](#DOCS_TOPICS_GATEWAY/guild-delete) Gateway event.
  "/guilds/{guildId}/preview":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild Preview
      operationId: getGuildPreview
      parameters: []
      description: |-
        - [Get Guild Preview](https://discord.com/developers/docs/resources/guild#get-guild-preview)

            Returns the [guild preview](#DOCS_RESOURCES_GUILD/guild-preview-object) object for the given id. If the user is not in the guild, then the guild must be lurkable.
  "/guilds/{guildId}/channels":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild Channels
      operationId: getGuildChannels
      parameters: []
      description: |-
        - [Get Guild Channels](https://discord.com/developers/docs/resources/guild#get-guild-channels)

            Returns a list of guild [channel](#DOCS_RESOURCES_CHANNEL/channel-object) objects. Does not include threads.
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Create Guild Channel
      operationId: createGuildChannel
      parameters: []
      description: |-
        - [Create Guild Channel](https://discord.com/developers/docs/resources/guild#create-guild-channel)

            Create a new [channel](#DOCS_RESOURCES_CHANNEL/channel-object) object for the guild. Requires the `MANAGE_CHANNELS` permission. If setting permission overwrites, only permissions your bot has in the guild can be allowed/denied. Setting `MANAGE_ROLES` permission in channels is only possible for guild administrators. Returns the new [channel](#DOCS_RESOURCES_CHANNEL/channel-object) object on success. Fires a [Channel Create](#DOCS_TOPICS_GATEWAY/channel-create) Gateway event.
          > info
          > All parameters to this endpoint are optional and nullable excluding `name`
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Modify Guild Channel Positions
      operationId: modifyGuildChannelPositions
      parameters: []
      description: |-
        - [Modify Guild Channel Positions](https://discord.com/developers/docs/resources/guild#modify-guild-channel-positions)

            Modify the positions of a set of [channel](#DOCS_RESOURCES_CHANNEL/channel-object) objects for the guild. Requires `MANAGE_CHANNELS` permission. Returns a 204 empty response on success. Fires multiple [Channel Update](#DOCS_TOPICS_GATEWAY/channel-update) Gateway events.
          > info
          > Only channels to be modified are required.
          This endpoint takes a JSON array of parameters in the following format:
  "/guilds/{guildId}/threads/active":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: List Active Guild Threads
      operationId: listActiveGuildThreads
      parameters: []
      description: |-
        - [List Active Guild Threads](https://discord.com/developers/docs/resources/guild#list-active-guild-threads)

            Returns all active threads in the guild, including public and private threads. Threads are ordered by their `id`, in descending order.
  "/guilds/{guildId}/members/{userId}":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
      - name: userId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[user.id](https://discord.com/developers/docs/resources/user#user-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild Member
      operationId: getGuildMember
      parameters: []
      description: |-
        - [Get Guild Member](https://discord.com/developers/docs/resources/guild#get-guild-member)

            Returns a [guild member](#DOCS_RESOURCES_GUILD/guild-member-object) object for the specified user.
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Add Guild Member
      operationId: addGuildMember
      parameters: []
      description: |-
        - [Add Guild Member](https://discord.com/developers/docs/resources/guild#add-guild-member)

            Adds a user to the guild, provided you have a valid oauth2 access token for the user with the `guilds.join` scope. Returns a 201 Created with the [guild member](#DOCS_RESOURCES_GUILD/guild-member-object) as the body, or 204 No Content if the user is already a member of the guild. Fires a [Guild Member Add](#DOCS_TOPICS_GATEWAY/guild-member-add) Gateway event.
          For guilds with [Membership Screening](#DOCS_RESOURCES_GUILD/membership-screening-object) enabled, this endpoint will default to adding new members as `pending` in the [guild member object](#DOCS_RESOURCES_GUILD/guild-member-object). Members that are `pending` will have to complete membership screening before they become full members that can talk.
          > info
          > All parameters to this endpoint except for `access_token` are optional.
          > info
          > The Authorization header must be a Bot token (belonging to the same application used for authorization), and the bot must be a member of the guild with `CREATE_INSTANT_INVITE` permission.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Modify Guild Member
      operationId: modifyGuildMember
      parameters: []
      description: |-
        - [Modify Guild Member](https://discord.com/developers/docs/resources/guild#modify-guild-member)

            Modify attributes of a [guild member](#DOCS_RESOURCES_GUILD/guild-member-object). Returns a 200 OK with the [guild member](#DOCS_RESOURCES_GUILD/guild-member-object) as the body. Fires a [Guild Member Update](#DOCS_TOPICS_GATEWAY/guild-member-update) Gateway event. If the `channel_id` is set to null, this will force the target user to be disconnected from voice.
          > info
          > All parameters to this endpoint are optional and nullable. When moving members to channels, the API user _must_ have permissions to both connect to the channel and have the `MOVE_MEMBERS` permission.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Remove Guild Member
      operationId: removeGuildMember
      parameters: []
      description: |-
        - [Remove Guild Member](https://discord.com/developers/docs/resources/guild#remove-guild-member)

            Remove a member from a guild. Requires `KICK_MEMBERS` permission. Returns a 204 empty response on success. Fires a [Guild Member Remove](#DOCS_TOPICS_GATEWAY/guild-member-remove) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/guilds/{guildId}/members":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: List Guild Members
      operationId: listGuildMembers
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: |-
            max number of members to return (1-1000)
            default: 1
          required: true
        - in: query
          name: after
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: |-
            the highest user id in the previous page
            default: 0
          required: true
      description: |-
        - [List Guild Members](https://discord.com/developers/docs/resources/guild#list-guild-members)

            Returns a list of [guild member](#DOCS_RESOURCES_GUILD/guild-member-object) objects that are members of the guild.
          > warn
          > This endpoint is restricted according to whether the `GUILD_MEMBERS` [Privileged Intent](#DOCS_TOPICS_GATEWAY/privileged-intents) is enabled for your application.
          > info
          > All parameters to this endpoint are optional
  "/guilds/{guildId}/members/search":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Search Guild Members
      operationId: searchGuildMembers
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: |-
            Query string to match username(s) and nickname(s) against.
            default:
          required: true
        - in: query
          name: limit
          schema:
            type: integer
          description: |-
            max number of members to return (1-1000)
            default: 1
          required: true
      description: |-
        - [Search Guild Members](https://discord.com/developers/docs/resources/guild#search-guild-members)

            Returns a list of [guild member](#DOCS_RESOURCES_GUILD/guild-member-object) objects whose username or nickname starts with a provided string.
          > info
          > All parameters to this endpoint except for `query` are optional
  "/guilds/{guildId}/members/@me":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Modify Current Member
      operationId: modifyCurrentMember
      parameters: []
      description: |-
        - [Modify Current Member](https://discord.com/developers/docs/resources/guild#modify-current-member)

            Modifies the current member in a guild. Returns a 200 with the updated member object on success. Fires a [Guild Member Update](#DOCS_TOPICS_GATEWAY/guild-member-update) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/guilds/{guildId}/members/@me/nick":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Modify Current User Nick
      operationId: modifyCurrentUserNick
      parameters: []
      description: |-
        - [Modify Current User Nick](https://discord.com/developers/docs/resources/guild#modify-current-user-nick)

            > danger
          > Deprecated in favor of [Modify Current Member](#DOCS_RESOURCES_GUILD/modify-current-member).
          Modifies the nickname of the current user in a guild. Returns a 200 with the nickname on success. Fires a [Guild Member Update](#DOCS_TOPICS_GATEWAY/guild-member-update) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/guilds/{guildId}/members/{userId}/roles/{roleId}":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
      - name: userId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[user.id](https://discord.com/developers/docs/resources/user#user-object)"
      - name: roleId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[role.id](https://discord.com/developers/docs/topics/permissions#role-object)"
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Add Guild Member Role
      operationId: addGuildMemberRole
      parameters: []
      description: |-
        - [Add Guild Member Role](https://discord.com/developers/docs/resources/guild#add-guild-member-role)

            Adds a role to a [guild member](#DOCS_RESOURCES_GUILD/guild-member-object). Requires the `MANAGE_ROLES` permission. Returns a 204 empty response on success. Fires a [Guild Member Update](#DOCS_TOPICS_GATEWAY/guild-member-update) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Remove Guild Member Role
      operationId: removeGuildMemberRole
      parameters: []
      description: |-
        - [Remove Guild Member Role](https://discord.com/developers/docs/resources/guild#remove-guild-member-role)

            Removes a role from a [guild member](#DOCS_RESOURCES_GUILD/guild-member-object). Requires the `MANAGE_ROLES` permission. Returns a 204 empty response on success. Fires a [Guild Member Update](#DOCS_TOPICS_GATEWAY/guild-member-update) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/guilds/{guildId}/bans":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild Bans
      operationId: getGuildBans
      parameters:
        - in: query
          name: limit
          schema:
            type: number
          description: |-
            number of users to return (up to maximum 1000)
            default: 1000
        - in: query
          name: before
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: |-
            consider only users before given user id
            default: null
        - in: query
          name: after
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: |-
            consider only users after given user id
            default: null
      description: |-
        - [Get Guild Bans](https://discord.com/developers/docs/resources/guild#get-guild-bans)

            Returns a list of [ban](#DOCS_RESOURCES_GUILD/ban-object) objects for the users banned from this guild. Requires the `BAN_MEMBERS` permission.
  "/guilds/{guildId}/bans/{userId}":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
      - name: userId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[user.id](https://discord.com/developers/docs/resources/user#user-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild Ban
      operationId: getGuildBan
      parameters: []
      description: |-
        - [Get Guild Ban](https://discord.com/developers/docs/resources/guild#get-guild-ban)

            Returns a [ban](#DOCS_RESOURCES_GUILD/ban-object) object for the given user or a 404 not found if the ban cannot be found. Requires the `BAN_MEMBERS` permission.
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Create Guild Ban
      operationId: createGuildBan
      parameters: []
      description: |-
        - [Create Guild Ban](https://discord.com/developers/docs/resources/guild#create-guild-ban)

            Create a guild ban, and optionally delete previous messages sent by the banned user. Requires the `BAN_MEMBERS` permission. Returns a 204 empty response on success. Fires a [Guild Ban Add](#DOCS_TOPICS_GATEWAY/guild-ban-add) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Remove Guild Ban
      operationId: removeGuildBan
      parameters: []
      description: |-
        - [Remove Guild Ban](https://discord.com/developers/docs/resources/guild#remove-guild-ban)

            Remove the ban for a user. Requires the `BAN_MEMBERS` permissions. Returns a 204 empty response on success. Fires a [Guild Ban Remove](#DOCS_TOPICS_GATEWAY/guild-ban-remove) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/guilds/{guildId}/roles":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild Roles
      operationId: getGuildRoles
      parameters: []
      description: |-
        - [Get Guild Roles](https://discord.com/developers/docs/resources/guild#get-guild-roles)

            Returns a list of [role](#DOCS_TOPICS_PERMISSIONS/role-object) objects for the guild.
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Create Guild Role
      operationId: createGuildRole
      parameters: []
      description: |-
        - [Create Guild Role](https://discord.com/developers/docs/resources/guild#create-guild-role)

            Create a new [role](#DOCS_TOPICS_PERMISSIONS/role-object) for the guild. Requires the `MANAGE_ROLES` permission. Returns the new [role](#DOCS_TOPICS_PERMISSIONS/role-object) object on success. Fires a [Guild Role Create](#DOCS_TOPICS_GATEWAY/guild-role-create) Gateway event. All JSON params are optional.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Modify Guild Role Positions
      operationId: modifyGuildRolePositions
      parameters: []
      description: |-
        - [Modify Guild Role Positions](https://discord.com/developers/docs/resources/guild#modify-guild-role-positions)

            Modify the positions of a set of [role](#DOCS_TOPICS_PERMISSIONS/role-object) objects for the guild. Requires the `MANAGE_ROLES` permission. Returns a list of all of the guild's [role](#DOCS_TOPICS_PERMISSIONS/role-object) objects on success. Fires multiple [Guild Role Update](#DOCS_TOPICS_GATEWAY/guild-role-update) Gateway events.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
          This endpoint takes a JSON array of parameters in the following format:
  "/guilds/{guildId}/roles/{roleId}":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
      - name: roleId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[role.id](https://discord.com/developers/docs/topics/permissions#role-object)"
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Modify Guild Role
      operationId: modifyGuildRole
      parameters: []
      description: |-
        - [Modify Guild Role](https://discord.com/developers/docs/resources/guild#modify-guild-role)

            Modify a guild role. Requires the `MANAGE_ROLES` permission. Returns the updated [role](#DOCS_TOPICS_PERMISSIONS/role-object) on success. Fires a [Guild Role Update](#DOCS_TOPICS_GATEWAY/guild-role-update) Gateway event.
          > info
          > All parameters to this endpoint are optional and nullable.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Delete Guild Role
      operationId: deleteGuildRole
      parameters: []
      description: |-
        - [Delete Guild Role](https://discord.com/developers/docs/resources/guild#delete-guild-role)

            Delete a guild role. Requires the `MANAGE_ROLES` permission. Returns a 204 empty response on success. Fires a [Guild Role Delete](#DOCS_TOPICS_GATEWAY/guild-role-delete) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/guilds/{guildId}/mfa":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Modify Guild MFA Level
      operationId: modifyGuildMFALevel
      parameters: []
      description: |-
        - [Modify Guild MFA Level](https://discord.com/developers/docs/resources/guild#modify-guild-mfa-level)

            Modify a guild's MFA level. Requires guild ownership. Returns the updated [level](#DOCS_RESOURCES_GUILD/guild-object-mfa-level) on success. Fires a [Guild Update](#DOCS_TOPICS_GATEWAY/guild-update) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/guilds/{guildId}/prune":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild Prune Count
      operationId: getGuildPruneCount
      parameters:
        - in: query
          name: days
          schema:
            type: integer
          description: |-
            number of days to count prune for (1-30)
            default: 7
          required: true
        - in: query
          name: include_roles
          schema:
            type: string
          description: |-
            comma-delimited array of snowflakes

            role(s) to include
            default: none
          required: true
      description: |-
        - [Get Guild Prune Count](https://discord.com/developers/docs/resources/guild#get-guild-prune-count)

            Returns an object with one `pruned` key indicating the number of members that would be removed in a prune operation. Requires the `KICK_MEMBERS` permission.
          By default, prune will not remove users with roles. You can optionally include specific roles in your prune by providing the `include_roles` parameter. Any inactive user that has a subset of the provided role(s) will be counted in the prune and users with additional roles will not.
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Begin Guild Prune
      operationId: beginGuildPrune
      parameters: []
      description: |-
        - [Begin Guild Prune](https://discord.com/developers/docs/resources/guild#begin-guild-prune)

            Begin a prune operation. Requires the `KICK_MEMBERS` permission. Returns an object with one `pruned` key indicating the number of members that were removed in the prune operation. For large guilds it's recommended to set the `compute_prune_count` option to `false`, forcing `pruned` to `null`. Fires multiple [Guild Member Remove](#DOCS_TOPICS_GATEWAY/guild-member-remove) Gateway events.
          By default, prune will not remove users with roles. You can optionally include specific roles in your prune by providing the `include_roles` parameter. Any inactive user that has a subset of the provided role(s) will be included in the prune and users with additional roles will not.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/guilds/{guildId}/regions":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild Voice Regions
      operationId: getGuildVoiceRegions
      parameters: []
      description: |-
        - [Get Guild Voice Regions](https://discord.com/developers/docs/resources/guild#get-guild-voice-regions)

            Returns a list of [voice region](#DOCS_RESOURCES_VOICE/voice-region-object) objects for the guild. Unlike the similar `/voice` route, this returns VIP servers when the guild is VIP-enabled.
  "/guilds/{guildId}/invites":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild Invites
      operationId: getGuildInvites
      parameters: []
      description: |-
        - [Get Guild Invites](https://discord.com/developers/docs/resources/guild#get-guild-invites)

            Returns a list of [invite](#DOCS_RESOURCES_INVITE/invite-object) objects (with [invite metadata](#DOCS_RESOURCES_INVITE/invite-metadata-object)) for the guild. Requires the `MANAGE_GUILD` permission.
  "/guilds/{guildId}/integrations":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild Integrations
      operationId: getGuildIntegrations
      parameters: []
      description: |-
        - [Get Guild Integrations](https://discord.com/developers/docs/resources/guild#get-guild-integrations)

            Returns a list of [integration](#DOCS_RESOURCES_GUILD/integration-object) objects for the guild. Requires the `MANAGE_GUILD` permission.
  "/guilds/{guildId}/integrations/{integrationId}":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
      - name: integrationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[integration.id](https://discord.com/developers/docs/resources/guild#integration-object)"
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Delete Guild Integration
      operationId: deleteGuildIntegration
      parameters: []
      description: |-
        - [Delete Guild Integration](https://discord.com/developers/docs/resources/guild#delete-guild-integration)

            Delete the attached [integration](#DOCS_RESOURCES_GUILD/integration-object) object for the guild. Deletes any associated webhooks and kicks the associated bot if there is one. Requires the `MANAGE_GUILD` permission. Returns a 204 empty response on success. Fires [Guild Integrations Update](#DOCS_TOPICS_GATEWAY/guild-integrations-update) and [Integration Delete](#DOCS_TOPICS_GATEWAY/integration-delete) Gateway events.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/guilds/{guildId}/widget":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild Widget Settings
      operationId: getGuildWidgetSettings
      parameters: []
      description: |-
        - [Get Guild Widget Settings](https://discord.com/developers/docs/resources/guild#get-guild-widget-settings)

            Returns a [guild widget settings](#DOCS_RESOURCES_GUILD/guild-widget-settings-object) object. Requires the `MANAGE_GUILD` permission.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Modify Guild Widget
      operationId: modifyGuildWidget
      parameters: []
      description: |-
        - [Modify Guild Widget](https://discord.com/developers/docs/resources/guild#modify-guild-widget)

            Modify a [guild widget settings](#DOCS_RESOURCES_GUILD/guild-widget-settings-object) object for the guild. All attributes may be passed in with JSON and modified. Requires the `MANAGE_GUILD` permission. Returns the updated [guild widget](#DOCS_RESOURCES_GUILD/guild-widget-settings-object) object.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/guilds/{guildId}/widget.json":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild Widget
      operationId: getGuildWidget
      parameters: []
      description: |-
        - [Get Guild Widget](https://discord.com/developers/docs/resources/guild#get-guild-widget)

            Returns the [widget](#DOCS_RESOURCES_GUILD/guild-widget-object) for the guild.
  "/guilds/{guildId}/vanity-url":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild Vanity URL
      operationId: getGuildVanityURL
      parameters: []
      description: |-
        - [Get Guild Vanity URL](https://discord.com/developers/docs/resources/guild#get-guild-vanity-url)

            Returns a partial [invite](#DOCS_RESOURCES_INVITE/invite-object) object for guilds with that feature enabled. Requires the `MANAGE_GUILD` permission. `code` will be null if a vanity url for the guild is not set.
  "/guilds/{guildId}/widget.png":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild Widget Image
      operationId: getGuildWidgetImage
      parameters:
        - in: query
          name: style
          schema:
            type: string
          description: |-
            style of the widget image returned (see below)
            default: shield
          required: true
      description: |-
        - [Get Guild Widget Image](https://discord.com/developers/docs/resources/guild#get-guild-widget-image)

            Returns a PNG image widget for the guild. Requires no permissions or authentication.
          > info
          > All parameters to this endpoint are optional.
  "/guilds/{guildId}/welcome-screen":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Get Guild Welcome Screen
      operationId: getGuildWelcomeScreen
      parameters: []
      description: |-
        - [Get Guild Welcome Screen](https://discord.com/developers/docs/resources/guild#get-guild-welcome-screen)

            Returns the [Welcome Screen](#DOCS_RESOURCES_GUILD/welcome-screen-object) object for the guild. If the welcome screen is not enabled, the `MANAGE_GUILD` permission is required.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Modify Guild Welcome Screen
      operationId: modifyGuildWelcomeScreen
      parameters: []
      description: |-
        - [Modify Guild Welcome Screen](https://discord.com/developers/docs/resources/guild#modify-guild-welcome-screen)

            Modify the guild's [Welcome Screen](#DOCS_RESOURCES_GUILD/welcome-screen-object). Requires the `MANAGE_GUILD` permission. Returns the updated [Welcome Screen](#DOCS_RESOURCES_GUILD/welcome-screen-object) object.
          > info
          > All parameters to this endpoint are optional and nullable
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/guilds/{guildId}/voice-states/@me":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Modify Current User Voice State
      operationId: modifyCurrentUserVoiceState
      parameters: []
      description: |-
        - [Modify Current User Voice State](https://discord.com/developers/docs/resources/guild#modify-current-user-voice-state)

            Updates the current user's voice state. Returns `204 No Content` on success. Fires a [Voice State Update](#DOCS_TOPICS_GATEWAY/voice-state-update) Gateway event.
  "/guilds/{guildId}/voice-states/{userId}":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
      - name: userId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[user.id](https://discord.com/developers/docs/resources/user#user-object)"
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild
      summary: Modify User Voice State
      operationId: modifyUserVoiceState
      parameters: []
      description: |-
        - [Modify User Voice State](https://discord.com/developers/docs/resources/guild#modify-user-voice-state)

            Updates another user's voice state. Fires a [Voice State Update](#DOCS_TOPICS_GATEWAY/voice-state-update) Gateway event.
  "/guilds/{guildId}/scheduled-events":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild Scheduled Event
      summary: List Scheduled Events for Guild
      operationId: listScheduledEventsForGuild
      parameters:
        - in: query
          name: with_user_count
          schema:
            type: boolean
          description: include number of users subscribed to each event
      description: |-
        - [List Scheduled Events for Guild](https://discord.com/developers/docs/resources/guild-scheduled-event#list-scheduled-events-for-guild)

            Returns a list of [guild scheduled event](#DOCS_RESOURCES_GUILD_SCHEDULED_EVENT/guild-scheduled-event-object) objects for the given guild.
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild Scheduled Event
      summary: Create Guild Scheduled Event
      operationId: createGuildScheduledEvent
      parameters: []
      description: |-
        - [Create Guild Scheduled Event](https://discord.com/developers/docs/resources/guild-scheduled-event#create-guild-scheduled-event)

            Create a guild scheduled event in the guild. Returns a [guild scheduled event](#DOCS_RESOURCES_GUILD_SCHEDULED_EVENT/guild-scheduled-event-object) object on success. Fires a [Guild Scheduled Event Create](#DOCS_TOPICS_GATEWAY/guild-scheduled-event-create) Gateway event.
          > info
          > A guild can have a maximum of 100 events with `SCHEDULED` or `ACTIVE` status at any time.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/guilds/{guildId}/scheduled-events/{guildScheduledEventId}":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
      - name: guildScheduledEventId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild_scheduled_event.id](https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild Scheduled Event
      summary: Get Guild Scheduled Event
      operationId: getGuildScheduledEvent
      parameters:
        - in: query
          name: with_user_count
          schema:
            type: boolean
          description: include number of users subscribed to this event
      description: |-
        - [Get Guild Scheduled Event](https://discord.com/developers/docs/resources/guild-scheduled-event#get-guild-scheduled-event)

            Get a guild scheduled event. Returns a [guild scheduled event](#DOCS_RESOURCES_GUILD_SCHEDULED_EVENT/guild-scheduled-event-object) object on success.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild Scheduled Event
      summary: Modify Guild Scheduled Event
      operationId: modifyGuildScheduledEvent
      parameters: []
      description: |-
        - [Modify Guild Scheduled Event](https://discord.com/developers/docs/resources/guild-scheduled-event#modify-guild-scheduled-event)

            Modify a guild scheduled event. Returns the modified [guild scheduled event](#DOCS_RESOURCES_GUILD_SCHEDULED_EVENT/guild-scheduled-event-object) object on success. Fires a [Guild Scheduled Event Update](#DOCS_TOPICS_GATEWAY/guild-scheduled-event-update) Gateway event.
          > info
          > To start or end an event, use this endpoint to modify the event's [status](#DOCS_RESOURCES_GUILD_SCHEDULED_EVENT/guild-scheduled-event-object-guild-scheduled-event-status) field.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
          > info
          > This endpoint silently discards `entity_metadata` for non-`EXTERNAL` events.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild Scheduled Event
      summary: Delete Guild Scheduled Event
      operationId: deleteGuildScheduledEvent
      parameters: []
      description: |-
        - [Delete Guild Scheduled Event](https://discord.com/developers/docs/resources/guild-scheduled-event#delete-guild-scheduled-event)

            Delete a guild scheduled event. Returns a `204` on success. Fires a [Guild Scheduled Event Delete](#DOCS_TOPICS_GATEWAY/guild-scheduled-event-delete) Gateway event.
  "/guilds/{guildId}/scheduled-events/{guildScheduledEventId}/users":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
      - name: guildScheduledEventId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild_scheduled_event.id](https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild Scheduled Event
      summary: Get Guild Scheduled Event Users
      operationId: getGuildScheduledEventUsers
      parameters:
        - in: query
          name: limit
          schema:
            type: number
          description: |-
            number of users to return (up to maximum 100)
            default: 100
        - in: query
          name: with_member
          schema:
            type: boolean
          description: |-
            include guild member data if it exists
            default: false
        - in: query
          name: before
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: |-
            consider only users before given user id
            default: null
        - in: query
          name: after
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: |-
            consider only users after given user id
            default: null
      description: |-
        - [Get Guild Scheduled Event Users](https://discord.com/developers/docs/resources/guild-scheduled-event#get-guild-scheduled-event-users)

            Get a list of guild scheduled event users subscribed to a guild scheduled event. Returns a list of [guild scheduled event user](#DOCS_RESOURCES_GUILD_SCHEDULED_EVENT/guild-scheduled-event-user-object) objects on success. Guild member data, if it exists, is included if the `with_member` query parameter is set.
  "/guilds/templates/{templateCode}":
    parameters:
      - name: templateCode
        in: path
        required: true
        schema:
          type: string
          description: the template code (unique ID)
        description: "[template.code](https://discord.com/developers/docs/resources/guild-template#guild-template-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild Template
      summary: Get Guild Template
      operationId: getGuildTemplate
      parameters: []
      description: |-
        - [Get Guild Template](https://discord.com/developers/docs/resources/guild-template#get-guild-template)

            Returns a [guild template](#DOCS_RESOURCES_GUILD_TEMPLATE/guild-template-object) object for the given code.
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild Template
      summary: Create Guild from Guild Template
      operationId: createGuildFromGuildTemplate
      parameters: []
      description: |-
        - [Create Guild from Guild Template](https://discord.com/developers/docs/resources/guild-template#create-guild-from-guild-template)

            Create a new guild based on a template. Returns a [guild](#DOCS_RESOURCES_GUILD/guild-object) object on success. Fires a [Guild Create](#DOCS_TOPICS_GATEWAY/guild-create) Gateway event.
          > warn
          > This endpoint can be used only by bots in less than 10 guilds.
  "/guilds/{guildId}/templates":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild Template
      summary: Get Guild Templates
      operationId: getGuildTemplates
      parameters: []
      description: |-
        - [Get Guild Templates](https://discord.com/developers/docs/resources/guild-template#get-guild-templates)

            Returns an array of [guild template](#DOCS_RESOURCES_GUILD_TEMPLATE/guild-template-object) objects. Requires the `MANAGE_GUILD` permission.
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild Template
      summary: Create Guild Template
      operationId: createGuildTemplate
      parameters: []
      description: |-
        - [Create Guild Template](https://discord.com/developers/docs/resources/guild-template#create-guild-template)

            Creates a template for the guild. Requires the `MANAGE_GUILD` permission. Returns the created [guild template](#DOCS_RESOURCES_GUILD_TEMPLATE/guild-template-object) object on success.
  "/guilds/{guildId}/templates/{templateCode}":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
      - name: templateCode
        in: path
        required: true
        schema:
          type: string
          description: the template code (unique ID)
        description: "[template.code](https://discord.com/developers/docs/resources/guild-template#guild-template-object)"
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild Template
      summary: Sync Guild Template
      operationId: syncGuildTemplate
      parameters: []
      description: |-
        - [Sync Guild Template](https://discord.com/developers/docs/resources/guild-template#sync-guild-template)

            Syncs the template to the guild's current state. Requires the `MANAGE_GUILD` permission. Returns the [guild template](#DOCS_RESOURCES_GUILD_TEMPLATE/guild-template-object) object on success.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild Template
      summary: Modify Guild Template
      operationId: modifyGuildTemplate
      parameters: []
      description: |-
        - [Modify Guild Template](https://discord.com/developers/docs/resources/guild-template#modify-guild-template)

            Modifies the template's metadata. Requires the `MANAGE_GUILD` permission. Returns the [guild template](#DOCS_RESOURCES_GUILD_TEMPLATE/guild-template-object) object on success.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Guild Template
      summary: Delete Guild Template
      operationId: deleteGuildTemplate
      parameters: []
      description: |-
        - [Delete Guild Template](https://discord.com/developers/docs/resources/guild-template#delete-guild-template)

            Deletes the template. Requires the `MANAGE_GUILD` permission. Returns the deleted [guild template](#DOCS_RESOURCES_GUILD_TEMPLATE/guild-template-object) object on success.
  "/invites/{inviteCode}":
    parameters:
      - name: inviteCode
        in: path
        required: true
        schema:
          type: string
          description: the invite code (unique ID)
        description: "[invite.code](https://discord.com/developers/docs/resources/invite#invite-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Invite
      summary: Get Invite
      operationId: getInvite
      parameters:
        - in: query
          name: with_counts
          schema:
            type: boolean
          description: whether the invite should contain approximate member counts
        - in: query
          name: with_expiration
          schema:
            type: boolean
          description: whether the invite should contain the expiration date
        - in: query
          name: guild_scheduled_event_id
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: the guild scheduled event to include with the invite
      description: |-
        - [Get Invite](https://discord.com/developers/docs/resources/invite#get-invite)

            Returns an [invite](#DOCS_RESOURCES_INVITE/invite-object) object for the given code.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Invite
      summary: Delete Invite
      operationId: deleteInvite
      parameters: []
      description: |-
        - [Delete Invite](https://discord.com/developers/docs/resources/invite#delete-invite)

            Delete an invite. Requires the `MANAGE_CHANNELS` permission on the channel this invite belongs to, or `MANAGE_GUILD` to remove any invite across the guild. Returns an [invite](#DOCS_RESOURCES_INVITE/invite-object) object on success. Fires an [Invite Delete](#DOCS_TOPICS_GATEWAY/invite-delete) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  /lobbies:
    parameters: []
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Lobbies
      summary: Create Lobby
      operationId: createLobby
      parameters: []
      description: |-
        - [Create Lobby](https://discord.com/developers/docs/game-sdk/lobbies#create-lobby)

            Creates a new lobby. Returns an object similar to the SDK `Lobby` struct, documented below.
          To get a list of valid regions, call the [List Voice Regions](https://discord.com/developers/docs/resources/voice#list-voice-regions) endpoint.
  "/lobbies/{lobbyId}":
    parameters:
      - name: lobbyId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[lobby.id](https://discord.com/developers/docs/game-sdk/lobbies#data-models-lobby-struct)"
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Lobbies
      summary: Update Lobby
      operationId: updateLobby
      parameters: []
      description: |-
        - [Update Lobby](https://discord.com/developers/docs/game-sdk/lobbies#update-lobby)

            Updates a lobby.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Lobbies
      summary: Delete Lobby
      operationId: deleteLobby
      parameters: []
      description: |-
        - [Delete Lobby](https://discord.com/developers/docs/game-sdk/lobbies#delete-lobby)

            Deletes a lobby.
  "/lobbies/{lobbyId}/members/{userId}":
    parameters:
      - name: lobbyId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[lobby.id](https://discord.com/developers/docs/game-sdk/lobbies#data-models-lobby-struct)"
      - name: userId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[user.id](https://discord.com/developers/docs/resources/user#user-object)"
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Lobbies
      summary: Update Lobby Member
      operationId: updateLobbyMember
      parameters: []
      description: |-
        - [Update Lobby Member](https://discord.com/developers/docs/game-sdk/lobbies#update-lobby-member)

            Updates the metadata for a lobby member.
  /lobbies/search:
    parameters: []
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Lobbies
      summary: Create Lobby Search
      operationId: createLobbySearch
      parameters: []
      description: |-
        - [Create Lobby Search](https://discord.com/developers/docs/game-sdk/lobbies#create-lobby-search)

            Creates a lobby search for matchmaking around given criteria.
  "/lobbies/{lobbyId}/send":
    parameters:
      - name: lobbyId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[lobby.id](https://discord.com/developers/docs/game-sdk/lobbies#data-models-lobby-struct)"
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Lobbies
      summary: Send Lobby Data
      operationId: sendLobbyData
      parameters: []
      description: |-
        - [Send Lobby Data](https://discord.com/developers/docs/game-sdk/lobbies#send-lobby-data)

            Sends a message to the lobby, fanning it out to other lobby members.
          This endpoints accepts a UTF8 string. If your message is already a string, you're good to go! If you want to send binary, you can send it to this endpoint as a base64 encoded data uri.
  /oauth2/applications/@me:
    parameters: []
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - OAuth2
      summary: Get Current Bot Application Information
      operationId: getCurrentBotApplicationInformation
      parameters: []
      description: |-
        - [Get Current Bot Application Information](https://discord.com/developers/docs/topics/oauth2#get-current-bot-application-information)

            Returns the bot's [application](#DOCS_RESOURCES_APPLICATION/application-object) object.
  /oauth2/@me:
    parameters: []
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - OAuth2
      summary: Get Current Authorization Information
      operationId: getCurrentAuthorizationInformation
      parameters: []
      description: |-
        - [Get Current Authorization Information](https://discord.com/developers/docs/topics/oauth2#get-current-authorization-information)

            Returns info about the current authorization. Requires authentication with a bearer token.
  "/interactions/{interactionId}/{interactionToken}/callback":
    parameters:
      - name: interactionId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[interaction.id](https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object)"
      - name: interactionToken
        in: path
        required: true
        schema:
          type: string
          description: Continuation token for responding to the interaction
        description: "[interaction.token](https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object)"
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Receiving and Responding
      summary: Create Interaction Response
      operationId: createInteractionResponse
      parameters: []
      description: |-
        - [Create Interaction Response](https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response)

            Create a response to an Interaction from the gateway. Body is an [interaction response](#DOCS_INTERACTIONS_RECEIVING_AND_RESPONDING/interaction-response-object). Returns `204 No Content`.
          This endpoint also supports file attachments similar to the webhook endpoints. Refer to [Uploading Files](#DOCS_REFERENCE/uploading-files) for details on uploading files and `multipart/form-data` requests.
  "/webhooks/{applicationId}/{interactionToken}/messages/@original":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/resources/application#application-object)"
      - name: interactionToken
        in: path
        required: true
        schema:
          type: string
          description: Continuation token for responding to the interaction
        description: "[interaction.token](https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Receiving and Responding
      summary: Get Original Interaction Response
      operationId: getOriginalInteractionResponse
      parameters: []
      description: |-
        - [Get Original Interaction Response](https://discord.com/developers/docs/interactions/receiving-and-responding#get-original-interaction-response)

            Returns the initial Interaction response. Functions the same as [Get Webhook Message](#DOCS_RESOURCES_WEBHOOK/get-webhook-message).
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Receiving and Responding
      summary: Edit Original Interaction Response
      operationId: editOriginalInteractionResponse
      parameters: []
      description: |-
        - [Edit Original Interaction Response](https://discord.com/developers/docs/interactions/receiving-and-responding#edit-original-interaction-response)

            Edits the initial Interaction response. Functions the same as [Edit Webhook Message](#DOCS_RESOURCES_WEBHOOK/edit-webhook-message).
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Receiving and Responding
      summary: Delete Original Interaction Response
      operationId: deleteOriginalInteractionResponse
      parameters: []
      description: |-
        - [Delete Original Interaction Response](https://discord.com/developers/docs/interactions/receiving-and-responding#delete-original-interaction-response)

            Deletes the initial Interaction response. Returns `204 No Content` on success. Does not support ephemeral followups.
  "/webhooks/{applicationId}/{interactionToken}":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/resources/application#application-object)"
      - name: interactionToken
        in: path
        required: true
        schema:
          type: string
          description: Continuation token for responding to the interaction
        description: "[interaction.token](https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object)"
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Receiving and Responding
      summary: Create Followup Message
      operationId: createFollowupMessage
      parameters: []
      description: |-
        - [Create Followup Message](https://discord.com/developers/docs/interactions/receiving-and-responding#create-followup-message)

            Create a followup message for an Interaction. Functions the same as [Execute Webhook](#DOCS_RESOURCES_WEBHOOK/execute-webhook), but `wait` is always true. The `thread_id`, `avatar_url`, and `username` parameters are not supported when using this endpoint for interaction followups.
          `flags` can be set to `64` to mark the message as ephemeral, except when it is the first followup message to a deferred Interactions Response. In that case, the `flags` field will be ignored, and the ephemerality of the message will be determined by the `flags` value in your original ACK.
  "/webhooks/{applicationId}/{interactionToken}/messages/{messageId}":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/resources/application#application-object)"
      - name: interactionToken
        in: path
        required: true
        schema:
          type: string
          description: Continuation token for responding to the interaction
        description: "[interaction.token](https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object)"
      - name: messageId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[message.id](https://discord.com/developers/docs/resources/channel#message-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Receiving and Responding
      summary: Get Followup Message
      operationId: getFollowupMessage
      parameters: []
      description: |-
        - [Get Followup Message](https://discord.com/developers/docs/interactions/receiving-and-responding#get-followup-message)

            Returns a followup message for an Interaction. Functions the same as [Get Webhook Message](#DOCS_RESOURCES_WEBHOOK/get-webhook-message).
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Receiving and Responding
      summary: Edit Followup Message
      operationId: editFollowupMessage
      parameters: []
      description: |-
        - [Edit Followup Message](https://discord.com/developers/docs/interactions/receiving-and-responding#edit-followup-message)

            Edits a followup message for an Interaction. Functions the same as [Edit Webhook Message](#DOCS_RESOURCES_WEBHOOK/edit-webhook-message).
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Receiving and Responding
      summary: Delete Followup Message
      operationId: deleteFollowupMessage
      parameters: []
      description: |-
        - [Delete Followup Message](https://discord.com/developers/docs/interactions/receiving-and-responding#delete-followup-message)

            Deletes a followup message for an Interaction. Returns `204 No Content` on success. Does not support ephemeral followups.
  /stage-instances:
    parameters: []
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Stage Instance
      summary: Create Stage Instance
      operationId: createStageInstance
      parameters: []
      description: |-
        - [Create Stage Instance](https://discord.com/developers/docs/resources/stage-instance#create-stage-instance)

            Creates a new Stage instance associated to a Stage channel. Returns that [Stage instance](#DOCS_RESOURCES_STAGE_INSTANCE/stage-instance-object-stage-instance-structure). Fires a [Stage Instance Create](#DOCS_TOPICS_GATEWAY/stage-instance-create) Gateway event.
          Requires the user to be a moderator of the Stage channel.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/stage-instances/{channelId}":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Stage Instance
      summary: Get Stage Instance
      operationId: getStageInstance
      parameters: []
      description: |-
        - [Get Stage Instance](https://discord.com/developers/docs/resources/stage-instance#get-stage-instance)

            Gets the stage instance associated with the Stage channel, if it exists.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Stage Instance
      summary: Modify Stage Instance
      operationId: modifyStageInstance
      parameters: []
      description: |-
        - [Modify Stage Instance](https://discord.com/developers/docs/resources/stage-instance#modify-stage-instance)

            Updates fields of an existing Stage instance. Returns the updated [Stage instance](#DOCS_RESOURCES_STAGE_INSTANCE/stage-instance-object-stage-instance-structure). Fires a [Stage Instance Update](#DOCS_TOPICS_GATEWAY/stage-instance-update) Gateway event.
          Requires the user to be a moderator of the Stage channel.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Stage Instance
      summary: Delete Stage Instance
      operationId: deleteStageInstance
      parameters: []
      description: |-
        - [Delete Stage Instance](https://discord.com/developers/docs/resources/stage-instance#delete-stage-instance)

            Deletes the Stage instance. Returns `204 No Content`. Fires a [Stage Instance Delete](#DOCS_TOPICS_GATEWAY/stage-instance-delete) Gateway event.
          Requires the user to be a moderator of the Stage channel.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/stickers/{stickerId}":
    parameters:
      - name: stickerId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[sticker.id](https://discord.com/developers/docs/resources/sticker#sticker-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Sticker
      summary: Get Sticker
      operationId: getSticker
      parameters: []
      description: |-
        - [Get Sticker](https://discord.com/developers/docs/resources/sticker#get-sticker)

            Returns a [sticker](#DOCS_RESOURCES_STICKER/sticker-object) object for the given sticker ID.
  /sticker-packs:
    parameters: []
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Sticker
      summary: List Nitro Sticker Packs
      operationId: listNitroStickerPacks
      parameters: []
      description: |-
        - [List Nitro Sticker Packs](https://discord.com/developers/docs/resources/sticker#list-nitro-sticker-packs)

            Returns the list of sticker packs available to Nitro subscribers.
  "/guilds/{guildId}/stickers":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Sticker
      summary: List Guild Stickers
      operationId: listGuildStickers
      parameters: []
      description: |-
        - [List Guild Stickers](https://discord.com/developers/docs/resources/sticker#list-guild-stickers)

            Returns an array of [sticker](#DOCS_RESOURCES_STICKER/sticker-object) objects for the given guild. Includes `user` fields if the bot has the `MANAGE_EMOJIS_AND_STICKERS` permission.
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Sticker
      summary: Create Guild Sticker
      operationId: createGuildSticker
      parameters: []
      description: |-
        - [Create Guild Sticker](https://discord.com/developers/docs/resources/sticker#create-guild-sticker)

            Create a new sticker for the guild. Send a `multipart/form-data` body. Requires the `MANAGE_EMOJIS_AND_STICKERS` permission. Returns the new [sticker](#DOCS_RESOURCES_STICKER/sticker-object) object on success. Fires a [Guild Stickers Update](#DOCS_TOPICS_GATEWAY/guild-stickers-update) Gateway event.
          Every guilds has five free sticker slots by default, and each Boost level will grant access to more slots.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
          > warn
          > Lottie stickers can only be uploaded on guilds that have either the `VERIFIED` and/or the `PARTNERED` [guild feature](#DOCS_RESOURCES_GUILD/guild-object-guild-features).
  "/guilds/{guildId}/stickers/{stickerId}":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
      - name: stickerId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[sticker.id](https://discord.com/developers/docs/resources/sticker#sticker-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Sticker
      summary: Get Guild Sticker
      operationId: getGuildSticker
      parameters: []
      description: |-
        - [Get Guild Sticker](https://discord.com/developers/docs/resources/sticker#get-guild-sticker)

            Returns a [sticker](#DOCS_RESOURCES_STICKER/sticker-object) object for the given guild and sticker IDs. Includes the `user` field if the bot has the `MANAGE_EMOJIS_AND_STICKERS` permission.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Sticker
      summary: Modify Guild Sticker
      operationId: modifyGuildSticker
      parameters: []
      description: |-
        - [Modify Guild Sticker](https://discord.com/developers/docs/resources/sticker#modify-guild-sticker)

            Modify the given sticker. Requires the `MANAGE_EMOJIS_AND_STICKERS` permission. Returns the updated [sticker](#DOCS_RESOURCES_STICKER/sticker-object) object on success. Fires a [Guild Stickers Update](#DOCS_TOPICS_GATEWAY/guild-stickers-update) Gateway event.
          > info
          > All parameters to this endpoint are optional.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Sticker
      summary: Delete Guild Sticker
      operationId: deleteGuildSticker
      parameters: []
      description: |-
        - [Delete Guild Sticker](https://discord.com/developers/docs/resources/sticker#delete-guild-sticker)

            Delete the given sticker. Requires the `MANAGE_EMOJIS_AND_STICKERS` permission. Returns `204 No Content` on success. Fires a [Guild Stickers Update](#DOCS_TOPICS_GATEWAY/guild-stickers-update) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/applications/{applicationId}/entitlements":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/game-sdk/sdk-starter-guide#get-set-up)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Store
      summary: Get Entitlements
      operationId: getEntitlements
      parameters: []
      description: |-
        - [Get Entitlements](https://discord.com/developers/docs/game-sdk/store#get-entitlements)

            Gets entitlements for a given user. You can use this on your game backend to check entitlements of an arbitrary user, or perhaps in an administrative panel for your support team.
  "/applications/{applicationId}/entitlements/{entitlementId}":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/game-sdk/sdk-starter-guide#get-set-up)"
      - name: entitlementId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[entitlement.id](https://discord.com/developers/docs/game-sdk/store#data-models-entitlement-struct)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Store
      summary: Get Entitlement
      operationId: getEntitlement
      parameters: []
      description: |-
        - [Get Entitlement](https://discord.com/developers/docs/game-sdk/store#get-entitlement)

            Fetch an entitlement by its ID. This may be useful in confirming that a user has a given entitlement that another call or the SDK says they do.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Store
      summary: Delete Test Entitlement
      operationId: deleteTestEntitlement
      parameters: []
      description: |-
        - [Delete Test Entitlement](https://discord.com/developers/docs/game-sdk/store#delete-test-entitlement)

            Deletes a test entitlement for an application. You can only delete entitlements that were "purchased" in developer test mode; these are entitlements of `type == TestModePurchase`. You cannot use this route to delete arbitrary entitlements that users actually purchased.
  "/applications/{applicationId}/skus":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/game-sdk/sdk-starter-guide#get-set-up)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Store
      summary: Get SKUs
      operationId: getSKUs
      parameters: []
      description: |-
        - [Get SKUs](https://discord.com/developers/docs/game-sdk/store#get-skus)

            Get all SKUs for an application.
  "/applications/{applicationId}/entitlements/{entitlementId}/consume":
    parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[application.id](https://discord.com/developers/docs/game-sdk/sdk-starter-guide#get-set-up)"
      - name: entitlementId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[entitlement.id](https://discord.com/developers/docs/game-sdk/store#data-models-entitlement-struct)"
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Store
      summary: Consume SKU
      operationId: consumeSKU
      parameters: []
      description: |-
        - [Consume SKU](https://discord.com/developers/docs/game-sdk/store#consume-sku)

            Marks a given entitlement for the user as consumed, meaning it will no longer be returned in an entitlements check. **Ensure the user was granted whatever items the entitlement was for before consuming it!**
  "/store/skus/{skuId}/discounts/{userId}":
    parameters:
      - name: skuId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[sku.id](https://discord.com/developers/docs/game-sdk/store#data-models-sku-struct)"
      - name: userId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[user.id](https://discord.com/developers/docs/resources/user#user-object)"
    put:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Store
      summary: Create Purchase Discount
      operationId: createPurchaseDiscount
      parameters: []
      description: |-
        - [Create Purchase Discount](https://discord.com/developers/docs/game-sdk/store#create-purchase-discount)

            Creates a discount for the given user on their next purchase of the given SKU. You should call this endpoint from your backend server just before calling [StartPurchase](#DOCS_GAME_SDK_STORE/startpurchase) for the SKU you wish to discount. The user will then see a discounted price for that SKU at time of payment. The discount is automatically consumed after successful purchase or if the TTL expires.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Store
      summary: Delete Purchase Discount
      operationId: deletePurchaseDiscount
      parameters: []
      description: |-
        - [Delete Purchase Discount](https://discord.com/developers/docs/game-sdk/store#delete-purchase-discount)

            Deletes the currently active discount on the given SKU for the given user. You **do not need** to call this after a user has made a discounted purchase; successful discounted purchases will automatically remove the discount for that user for subsequent purchases.
  /users/@me:
    parameters: []
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - User
      summary: Get Current User
      operationId: getCurrentUser
      parameters: []
      description: |-
        - [Get Current User](https://discord.com/developers/docs/resources/user#get-current-user)

            Returns the [user](#DOCS_RESOURCES_USER/user-object) object of the requester's account. For OAuth2, this requires the `identify` scope, which will return the object _without_ an email, and optionally the `email` scope, which returns the object _with_ an email.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - User
      summary: Modify Current User
      operationId: modifyCurrentUser
      parameters: []
      description: |-
        - [Modify Current User](https://discord.com/developers/docs/resources/user#modify-current-user)

            Modify the requester's user account settings. Returns a [user](#DOCS_RESOURCES_USER/user-object) object on success. Fires a [User Update](#DOCS_TOPICS_GATEWAY/user-update) Gateway event.
          > info
          > All parameters to this endpoint are optional.
  "/users/{userId}":
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[user.id](https://discord.com/developers/docs/resources/user#user-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - User
      summary: Get User
      operationId: getUser
      parameters: []
      description: |-
        - [Get User](https://discord.com/developers/docs/resources/user#get-user)

            Returns a [user](#DOCS_RESOURCES_USER/user-object) object for a given user ID.
  /users/@me/guilds:
    parameters: []
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - User
      summary: Get Current User Guilds
      operationId: getCurrentUserGuilds
      parameters:
        - in: query
          name: before
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: |-
            get guilds before this guild ID
            default: absent
          required: true
        - in: query
          name: after
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: |-
            get guilds after this guild ID
            default: absent
          required: true
        - in: query
          name: limit
          schema:
            type: integer
          description: |-
            max number of guilds to return (1-200)
            default: 200
          required: true
      description: |-
        - [Get Current User Guilds](https://discord.com/developers/docs/resources/user#get-current-user-guilds)

            Returns a list of partial [guild](#DOCS_RESOURCES_GUILD/guild-object) objects the current user is a member of. Requires the `guilds` OAuth2 scope.
  "/users/@me/guilds/{guildId}/member":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - User
      summary: Get Current User Guild Member
      operationId: getCurrentUserGuildMember
      parameters: []
      description: |-
        - [Get Current User Guild Member](https://discord.com/developers/docs/resources/user#get-current-user-guild-member)

            Returns a [guild member](#DOCS_RESOURCES_GUILD/guild-member-object) object for the current user. Requires the `guilds.members.read` OAuth2 scope.
  "/users/@me/guilds/{guildId}":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - User
      summary: Leave Guild
      operationId: leaveGuild
      parameters: []
      description: |-
        - [Leave Guild](https://discord.com/developers/docs/resources/user#leave-guild)

            Leave a guild. Returns a 204 empty response on success.
  /users/@me/channels:
    parameters: []
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - User
      summary: Create DM or Create Group DM
      operationId: createDMOrcreateGroupDM
      parameters: []
      description: |-
        - [Create DM](https://discord.com/developers/docs/resources/user#create-dm)

            Create a new DM channel with a user. Returns a [DM channel](#DOCS_RESOURCES_CHANNEL/channel-object) object.
          > warn
          > You should not use this endpoint to DM everyone in a server about something. DMs should generally be initiated by a user action. If you open a significant amount of DMs too quickly, your bot may be rate limited or blocked from opening new ones.
        - [Create Group DM](https://discord.com/developers/docs/resources/user#create-group-dm)

            Create a new group DM channel with multiple users. Returns a [DM channel](#DOCS_RESOURCES_CHANNEL/channel-object) object. This endpoint was intended to be used with the now-deprecated GameBridge SDK. DMs created with this endpoint will not be shown in the Discord client
          > warn
          > This endpoint is limited to 10 active group DMs.
  /users/@me/connections:
    parameters: []
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - User
      summary: Get User Connections
      operationId: getUserConnections
      parameters: []
      description: |-
        - [Get User Connections](https://discord.com/developers/docs/resources/user#get-user-connections)

            Returns a list of [connection](#DOCS_RESOURCES_USER/connection-object) objects. Requires the `connections` OAuth2 scope.
  /voice/regions:
    parameters: []
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Voice
      summary: List Voice Regions
      operationId: listVoiceRegions
      parameters: []
      description: |-
        - [List Voice Regions](https://discord.com/developers/docs/resources/voice#list-voice-regions)

            Returns an array of [voice region](#DOCS_RESOURCES_VOICE/voice-region-object) objects that can be used when setting a voice or stage channel's [`rtc_region`](#DOCS_RESOURCES_CHANNEL/channel-object-channel-structure).
  "/channels/{channelId}/webhooks":
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[channel.id](https://discord.com/developers/docs/resources/channel#channel-object)"
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Webhook
      summary: Create Webhook
      operationId: createWebhook
      parameters: []
      description: |-
        - [Create Webhook](https://discord.com/developers/docs/resources/webhook#create-webhook)

            Creates a new webhook and returns a [webhook](#DOCS_RESOURCES_WEBHOOK/webhook-object) object on success. Requires the `MANAGE_WEBHOOKS` permission. Fires a [Webhooks Update](#DOCS_TOPICS_GATEWAY/webhooks-update) Gateway event.
          An error will be returned if a webhook name (`name`) is not valid. A webhook name is valid if:
          - It does not contain the substring '**clyde**' (case-insensitive)
          - It follows the nickname guidelines in the [Usernames and Nicknames](#DOCS_RESOURCES_USER/usernames-and-nicknames) documentation, with an exception that webhook names can be up to 80 characters
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Webhook
      summary: Get Channel Webhooks
      operationId: getChannelWebhooks
      parameters: []
      description: |-
        - [Get Channel Webhooks](https://discord.com/developers/docs/resources/webhook#get-channel-webhooks)

            Returns a list of channel [webhook](#DOCS_RESOURCES_WEBHOOK/webhook-object) objects. Requires the `MANAGE_WEBHOOKS` permission.
  "/guilds/{guildId}/webhooks":
    parameters:
      - name: guildId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[guild.id](https://discord.com/developers/docs/resources/guild#guild-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Webhook
      summary: Get Guild Webhooks
      operationId: getGuildWebhooks
      parameters: []
      description: |-
        - [Get Guild Webhooks](https://discord.com/developers/docs/resources/webhook#get-guild-webhooks)

            Returns a list of guild [webhook](#DOCS_RESOURCES_WEBHOOK/webhook-object) objects. Requires the `MANAGE_WEBHOOKS` permission.
  "/webhooks/{webhookId}":
    parameters:
      - name: webhookId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[webhook.id](https://discord.com/developers/docs/resources/webhook#webhook-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Webhook
      summary: Get Webhook
      operationId: getWebhook
      parameters: []
      description: |-
        - [Get Webhook](https://discord.com/developers/docs/resources/webhook#get-webhook)

            Returns the new [webhook](#DOCS_RESOURCES_WEBHOOK/webhook-object) object for the given id.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Webhook
      summary: Modify Webhook
      operationId: modifyWebhook
      parameters: []
      description: |-
        - [Modify Webhook](https://discord.com/developers/docs/resources/webhook#modify-webhook)

            Modify a webhook. Requires the `MANAGE_WEBHOOKS` permission. Returns the updated [webhook](#DOCS_RESOURCES_WEBHOOK/webhook-object) object on success. Fires a [Webhooks Update](#DOCS_TOPICS_GATEWAY/webhooks-update) Gateway event.
          > info
          > All parameters to this endpoint are optional
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Webhook
      summary: Delete Webhook
      operationId: deleteWebhook
      parameters: []
      description: |-
        - [Delete Webhook](https://discord.com/developers/docs/resources/webhook#delete-webhook)

            Delete a webhook permanently. Requires the `MANAGE_WEBHOOKS` permission. Returns a `204 No Content` response on success. Fires a [Webhooks Update](#DOCS_TOPICS_GATEWAY/webhooks-update) Gateway event.
          > info
          > This endpoint supports the `X-Audit-Log-Reason` header.
  "/webhooks/{webhookId}/{webhookToken}":
    parameters:
      - name: webhookId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[webhook.id](https://discord.com/developers/docs/resources/webhook#webhook-object)"
      - name: webhookToken
        in: path
        required: true
        schema:
          type: string
          description: the secure token of the webhook (returned for Incoming Webhooks)
        description: "[webhook.token](https://discord.com/developers/docs/resources/webhook#webhook-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Webhook
      summary: Get Webhook with Token
      operationId: getWebhookWithToken
      parameters: []
      description: |-
        - [Get Webhook with Token](https://discord.com/developers/docs/resources/webhook#get-webhook-with-token)

            Same as above, except this call does not require authentication and returns no user in the webhook object.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Webhook
      summary: Modify Webhook with Token
      operationId: modifyWebhookWithToken
      parameters: []
      description: |-
        - [Modify Webhook with Token](https://discord.com/developers/docs/resources/webhook#modify-webhook-with-token)

            Same as above, except this call does not require authentication, does not accept a `channel_id` parameter in the body, and does not return a user in the webhook object.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Webhook
      summary: Delete Webhook with Token
      operationId: deleteWebhookWithToken
      parameters: []
      description: |-
        - [Delete Webhook with Token](https://discord.com/developers/docs/resources/webhook#delete-webhook-with-token)

            Same as above, except this call does not require authentication.
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Webhook
      summary: Execute Webhook
      operationId: executeWebhook
      parameters:
        - in: query
          name: wait
          schema:
            type: boolean
          description: waits for server confirmation of message send before response, and returns the created message body (defaults to `false`; when `false` a message that is not saved does not return an error)
        - in: query
          name: thread_id
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: Send a message to the specified thread within a webhook's channel. The thread will automatically be unarchived.
      description: |-
        - [Execute Webhook](https://discord.com/developers/docs/resources/webhook#execute-webhook)

            Refer to [Uploading Files](#DOCS_REFERENCE/uploading-files) for details on attachments and `multipart/form-data` requests. Returns a message or `204 No Content` depending on the `wait` query parameter.
          > info
          > Note that when sending a message, you must provide a value for at **least one of** `content`, `embeds`, `components`, or `file`.
          > info
          > If the webhook channel is a forum channel, you must provide either `thread_id` in the query string params, or `thread_name` in the JSON/form params. If `thread_id` is provided, the message will send in that thread. If `thread_name` is provided, a thread with that name will be created in the forum channel.
  "/webhooks/{webhookId}/{webhookToken}/slack":
    parameters:
      - name: webhookId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[webhook.id](https://discord.com/developers/docs/resources/webhook#webhook-object)"
      - name: webhookToken
        in: path
        required: true
        schema:
          type: string
          description: the secure token of the webhook (returned for Incoming Webhooks)
        description: "[webhook.token](https://discord.com/developers/docs/resources/webhook#webhook-object)"
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Webhook
      summary: Execute Slack-Compatible Webhook
      operationId: executeSlackCompatibleWebhook
      parameters:
        - in: query
          name: thread_id
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: id of the thread to send the message in
        - in: query
          name: wait
          schema:
            type: boolean
          description: waits for server confirmation of message send before response (defaults to `true`; when `false` a message that is not saved does not return an error)
      description: |-
        - [Execute Slack-Compatible Webhook](https://discord.com/developers/docs/resources/webhook#execute-slack-compatible-webhook)

            Refer to [Slack's documentation](https://api.slack.com/incoming-webhooks) for more information. We do not support Slack's `channel`, `icon_emoji`, `mrkdwn`, or `mrkdwn_in` properties.
  "/webhooks/{webhookId}/{webhookToken}/github":
    parameters:
      - name: webhookId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[webhook.id](https://discord.com/developers/docs/resources/webhook#webhook-object)"
      - name: webhookToken
        in: path
        required: true
        schema:
          type: string
          description: the secure token of the webhook (returned for Incoming Webhooks)
        description: "[webhook.token](https://discord.com/developers/docs/resources/webhook#webhook-object)"
    post:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Webhook
      summary: Execute GitHub-Compatible Webhook
      operationId: executeGitHubCompatibleWebhook
      parameters:
        - in: query
          name: thread_id
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: id of the thread to send the message in
        - in: query
          name: wait
          schema:
            type: boolean
          description: waits for server confirmation of message send before response (defaults to `true`; when `false` a message that is not saved does not return an error)
      description: |-
        - [Execute GitHub-Compatible Webhook](https://discord.com/developers/docs/resources/webhook#execute-github-compatible-webhook)

            Add a new webhook to your GitHub repo (in the repo's settings), and use this endpoint as the "Payload URL." You can choose what events your Discord channel receives by choosing the "Let me select individual events" option and selecting individual events for the new webhook you're configuring.
  "/webhooks/{webhookId}/{webhookToken}/messages/{messageId}":
    parameters:
      - name: webhookId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[webhook.id](https://discord.com/developers/docs/resources/webhook#webhook-object)"
      - name: webhookToken
        in: path
        required: true
        schema:
          type: string
          description: the secure token of the webhook (returned for Incoming Webhooks)
        description: "[webhook.token](https://discord.com/developers/docs/resources/webhook#webhook-object)"
      - name: messageId
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Snowflake"
        description: "[message.id](https://discord.com/developers/docs/resources/channel#message-object)"
    get:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Webhook
      summary: Get Webhook Message
      operationId: getWebhookMessage
      parameters:
        - in: query
          name: thread_id
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: id of the thread the message is in
      description: |-
        - [Get Webhook Message](https://discord.com/developers/docs/resources/webhook#get-webhook-message)

            Returns a previously-sent webhook message from the same token. Returns a [message](#DOCS_RESOURCES_CHANNEL/message-object) object on success.
    patch:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Webhook
      summary: Edit Webhook Message
      operationId: editWebhookMessage
      parameters:
        - in: query
          name: thread_id
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: id of the thread the message is in
      description: |-
        - [Edit Webhook Message](https://discord.com/developers/docs/resources/webhook#edit-webhook-message)

            Edits a previously-sent webhook message from the same token. Returns a [message](#DOCS_RESOURCES_CHANNEL/message-object) object on success.
          When the `content` field is edited, the `mentions` array in the message object will be reconstructed from scratch based on the new content. The `allowed_mentions` field of the edit request controls how this happens. If there is no explicit `allowed_mentions` in the edit request, the content will be parsed with _default_ allowances, that is, without regard to whether or not an `allowed_mentions` was present in the request that originally created the message.
          Refer to [Uploading Files](#DOCS_REFERENCE/uploading-files) for details on attachments and `multipart/form-data` requests.
          Any provided files will be **appended** to the message. To remove or replace files you will have to supply the `attachments` field which specifies the files to retain on the message after edit.
          > warn
          > Starting with API v10, the `attachments` array must contain all attachments that should be present after edit, including **retained and new** attachments provided in the request body.
          > info
          > All parameters to this endpoint are optional and nullable.
    delete:
      responses:
        "401":
          $ref: "#/components/responses/DiscordUnauthorizedError"
        "403":
          $ref: "#/components/responses/DiscordForbiddenError"
        "404":
          $ref: "#/components/responses/DiscordNotFoundError"
        "429":
          $ref: "#/components/responses/DiscordRatelimitError"
        "500":
          $ref: "#/components/responses/DiscordApiError"
        "502":
          $ref: "#/components/responses/DiscordGatewayUnavailableError"
      tags:
        - Webhook
      summary: Delete Webhook Message
      operationId: deleteWebhookMessage
      parameters:
        - in: query
          name: thread_id
          schema:
            $ref: "#/components/schemas/Snowflake"
          description: id of the thread the message is in
      description: |-
        - [Delete Webhook Message](https://discord.com/developers/docs/resources/webhook#delete-webhook-message)

            Deletes a message that was created by the webhook. Returns a `204 No Content` response on success.
security:
  - BotToken: []
    BearerToken: []
components:
  securitySchemes:
    BotToken:
      type: apiKey
      in: header
      name: Authorization
    BearerToken:
      type: http
      scheme: Bearer
  requestBodies: {}
  parameters: {}
  responses:
    DiscordUnauthorizedError:
      description: The Authorization header was missing or invalid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DiscordApiError"
    DiscordForbiddenError:
      description: The Authorization token you passed did not have permission to the resource
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DiscordApiError"
      headers:
        X-RateLimit-Limit:
          schema:
            type: number
        X-RateLimit-Remaining:
          schema:
            type: number
        X-RateLimit-Reset:
          schema:
            type: number
        X-RateLimit-Reset-After:
          schema:
            type: number
        X-RateLimit-Bucket:
          schema:
            type: string
    DiscordNotFoundError:
      description: The resource at the location specified doesn't exist
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DiscordApiError"
      headers:
        X-RateLimit-Limit:
          schema:
            type: number
        X-RateLimit-Remaining:
          schema:
            type: number
        X-RateLimit-Reset:
          schema:
            type: number
        X-RateLimit-Reset-After:
          schema:
            type: number
        X-RateLimit-Bucket:
          schema:
            type: string
    DiscordRatelimitError:
      description: You are being rate limited
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DiscordRatelimitError"
      headers:
        X-RateLimit-Limit:
          schema:
            type: number
        X-RateLimit-Remaining:
          schema:
            type: number
        X-RateLimit-Reset:
          schema:
            type: number
        X-RateLimit-Reset-After:
          schema:
            type: number
        X-RateLimit-Bucket:
          schema:
            type: string
        X-RateLimit-Global:
          schema:
            type: boolean
        X-RateLimit-Scope:
          schema:
            type: string
            enum:
              - user
              - global
              - shared
    DiscordGatewayUnavailableError:
      description: The discord gateway is unavailable, try again in a bit
    DiscordApiError:
      description: Generic discord error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DiscordApiError"
      headers:
        X-RateLimit-Limit:
          schema:
            type: number
        X-RateLimit-Remaining:
          schema:
            type: number
        X-RateLimit-Reset:
          schema:
            type: number
        X-RateLimit-Reset-After:
          schema:
            type: number
        X-RateLimit-Bucket:
          schema:
            type: string
  schemas:
    JSONErrorCodes:
      type: integer
      enum:
        - 0
        - 10001
        - 10002
        - 10003
        - 10004
        - 10005
        - 10006
        - 10007
        - 10008
        - 10009
        - 10010
        - 10011
        - 10012
        - 10013
        - 10014
        - 10015
        - 10016
        - 10020
        - 10026
        - 10027
        - 10028
        - 10029
        - 10030
        - 10031
        - 10032
        - 10033
        - 10036
        - 10038
        - 10049
        - 10050
        - 10057
        - 10059
        - 10060
        - 10062
        - 10063
        - 10065
        - 10066
        - 10067
        - 10068
        - 10069
        - 10070
        - 10071
        - 10087
        - 20001
        - 20002
        - 20009
        - 20012
        - 20016
        - 20018
        - 20022
        - 20024
        - 20028
        - 20029
        - 20031
        - 20035
        - 30001
        - 30002
        - 30003
        - 30004
        - 30005
        - 30007
        - 30008
        - 30010
        - 30013
        - 30015
        - 30016
        - 30018
        - 30019
        - 30030
        - 30031
        - 30032
        - 30033
        - 30034
        - 30035
        - 30037
        - 30038
        - 30039
        - 30040
        - 30042
        - 30046
        - 30047
        - 30048
        - 30052
        - 40001
        - 40002
        - 40003
        - 40004
        - 40005
        - 40006
        - 40007
        - 40012
        - 40032
        - 40033
        - 40041
        - 40043
        - 40058
        - 40060
        - 40061
        - 40066
        - 40067
        - 50001
        - 50002
        - 50003
        - 50004
        - 50005
        - 50006
        - 50007
        - 50008
        - 50009
        - 50010
        - 50011
        - 50012
        - 50013
        - 50014
        - 50015
        - 50016
        - 50017
        - 50019
        - 50020
        - 50021
        - 50024
        - 50025
        - 50026
        - 50027
        - 50028
        - 50033
        - 50034
        - 50035
        - 50036
        - 50041
        - 50045
        - 50046
        - 50054
        - 50055
        - 50068
        - 50070
        - 50074
        - 50080
        - 50081
        - 50083
        - 50084
        - 50085
        - 50086
        - 50095
        - 50097
        - 50101
        - 50109
        - 50132
        - 50138
        - 50146
        - 50600
        - 60003
        - 80004
        - 90001
        - 110001
        - 130000
        - 150006
        - 160002
        - 160004
        - 160005
        - 160006
        - 160007
        - 170001
        - 170002
        - 170003
        - 170004
        - 170005
        - 170006
        - 170007
        - 180000
        - 180002
        - 200000
        - 200001
        - 220001
        - 220002
        - 220003
        - 220004
        - 240000
      x-enumNames:
        - General error (such as a malformed request body, amongst other things)
        - Unknown account
        - Unknown application
        - Unknown channel
        - Unknown guild
        - Unknown integration
        - Unknown invite
        - Unknown member
        - Unknown message
        - Unknown permission overwrite
        - Unknown provider
        - Unknown role
        - Unknown token
        - Unknown user
        - Unknown emoji
        - Unknown webhook
        - Unknown webhook service
        - Unknown session
        - Unknown ban
        - Unknown SKU
        - Unknown Store Listing
        - Unknown entitlement
        - Unknown build
        - Unknown lobby
        - Unknown branch
        - Unknown store directory layout
        - Unknown redistributable
        - Unknown gift code
        - Unknown stream
        - Unknown premium server subscribe cooldown
        - Unknown guild template
        - Unknown discoverable server category
        - Unknown sticker
        - Unknown interaction
        - Unknown application command
        - Unknown voice state
        - Unknown application command permissions
        - Unknown Stage Instance
        - Unknown Guild Member Verification Form
        - Unknown Guild Welcome Screen
        - Unknown Guild Scheduled Event
        - Unknown Guild Scheduled Event User
        - Unknown Tag
        - Bots cannot use this endpoint
        - Only bots can use this endpoint
        - Explicit content cannot be sent to the desired recipient(s)
        - You are not authorized to perform this action on this application
        - This action cannot be performed due to slowmode rate limit
        - Only the owner of this account can perform this action
        - This message cannot be edited due to announcement rate limits
        - Under minimum age
        - The channel you are writing has hit the write rate limit
        - The write action you are performing on the server has hit the write rate limit
        - Your Stage topic, server name, server description, or channel names contain words that are not allowed
        - Guild premium subscription level too low
        - Maximum number of guilds reached (100)
        - Maximum number of friends reached (1000)
        - Maximum number of pins reached for the channel (50)
        - Maximum number of recipients reached (10)
        - Maximum number of guild roles reached (250)
        - Maximum number of webhooks reached (10)
        - Maximum number of emojis reached
        - Maximum number of reactions reached (20)
        - Maximum number of guild channels reached (500)
        - Maximum number of attachments in a message reached (10)
        - Maximum number of invites reached (1000)
        - Maximum number of animated emojis reached
        - Maximum number of server members reached
        - Maximum number of server categories has been reached (5)
        - Guild already has a template
        - Maximum number of application commands reached
        - Max number of thread participants has been reached (1000)
        - Max number of daily application command creates has been reached (200)
        - Maximum number of bans for non-guild members have been exceeded
        - Maximum number of bans fetches has been reached
        - Maximum number of uncompleted guild scheduled events reached (100)
        - Maximum number of stickers reached
        - Maximum number of prune requests has been reached. Try again later
        - Maximum number of guild widget settings updates has been reached. Try again later
        - Maximum number of edits to messages older than 1 hour reached. Try again later
        - Maximum number of pinned threads in a forum channel has been reached
        - Maximum number of tags in a forum channel has been reached
        - Bitrate is too high for channel of this type
        - Unauthorized. Provide a valid token and try again
        - You need to verify your account in order to perform this action
        - You are opening direct messages too fast
        - Send messages has been temporarily disabled
        - Request entity too large. Try sending something smaller in size
        - This feature has been temporarily disabled server-side
        - The user is banned from this guild
        - Connection has been revoked
        - Target user is not connected to voice
        - This message has already been crossposted
        - An application command with that name already exists
        - Application interaction failed to send
        - Cannot send a message in a forum channel
        - Interaction has already been acknowledged
        - Tag names must be unique
        - There are no tags available that can be set by non-moderators
        - A tag is required to create a forum post in this channel
        - Missing access
        - Invalid account type
        - Cannot execute action on a DM channel
        - Guild widget disabled
        - Cannot edit a message authored by another user
        - Cannot send an empty message
        - Cannot send messages to this user
        - Cannot send messages in a non-text channel
        - Channel verification level is too high for you to gain access
        - OAuth2 application does not have a bot
        - OAuth2 application limit reached
        - Invalid OAuth2 state
        - You lack permissions to perform that action
        - Invalid authentication token provided
        - Note was too long
        - Provided too few or too many messages to delete. Must provide at least 2 and fewer than 100 messages to delete
        - Invalid MFA Level
        - A message can only be pinned to the channel it was sent in
        - Invite code was either invalid or taken
        - Cannot execute action on a system message
        - Cannot execute action on this channel type
        - Invalid OAuth2 access token provided
        - Missing required OAuth2 scope
        - Invalid webhook token provided
        - Invalid role
        - Invalid Recipient(s)
        - A message provided was too old to bulk delete
        - Invalid form body (returned for both `application/json` and `multipart/form-data` bodies), or invalid `Content-Type` provided
        - An invite was accepted to a guild the application's bot is not in
        - Invalid API version provided
        - File uploaded exceeds the maximum size
        - Invalid file uploaded
        - Cannot self-redeem this gift
        - Invalid Guild
        - Invalid message type
        - Payment source required to redeem gift
        - Cannot delete a channel required for Community guilds
        - Cannot edit stickers within a message
        - Invalid sticker sent
        - Tried to perform an operation on an archived thread, such as editing a message or adding a user to the thread
        - Invalid thread notification settings
        - "`before` value is earlier than the thread creation date"
        - Community server channels must be text channels
        - This server is not available in your location
        - This server needs monetization enabled in order to perform this action
        - This server needs more boosts to perform this action
        - The request body contains invalid JSON.
        - Ownership cannot be transferred to a bot user
        - "Failed to resize asset below the maximum size: 262144"
        - Uploaded file not found.
        - You do not have permission to send this sticker.
        - Two factor is required for this operation
        - No users with DiscordTag exist
        - Reaction was blocked
        - Application not yet available. Try again later
        - API resource is currently overloaded. Try again a little later
        - The Stage is already open
        - Cannot reply without permission to read message history
        - A thread has already been created for this message
        - Thread is locked
        - Maximum number of active threads reached
        - Maximum number of active announcement threads reached
        - Invalid JSON for uploaded Lottie file
        - Uploaded Lotties cannot contain rasterized images such as PNG or JPEG
        - Sticker maximum framerate exceeded
        - Sticker frame count exceeds maximum of 1000 frames
        - Lottie animation maximum dimensions exceeded
        - Sticker frame rate is either too small or too large
        - Sticker animation duration exceeds maximum of 5 seconds
        - Cannot update a finished event
        - Failed to create stage needed for stage event
        - Message was blocked by automatic moderation
        - Title was blocked by automatic moderation
        - Webhooks posted to forum channels must have a thread_name or thread_id
        - Webhooks posted to forum channels cannot have both a thread_name and thread_id
        - Webhooks can only create threads in forum channels
        - Webhook services cannot be used in forum channels
        - Message blocked by harmful links filter
      x-enum-varnames:
        - General error (such as a malformed request body, amongst other things)
        - Unknown account
        - Unknown application
        - Unknown channel
        - Unknown guild
        - Unknown integration
        - Unknown invite
        - Unknown member
        - Unknown message
        - Unknown permission overwrite
        - Unknown provider
        - Unknown role
        - Unknown token
        - Unknown user
        - Unknown emoji
        - Unknown webhook
        - Unknown webhook service
        - Unknown session
        - Unknown ban
        - Unknown SKU
        - Unknown Store Listing
        - Unknown entitlement
        - Unknown build
        - Unknown lobby
        - Unknown branch
        - Unknown store directory layout
        - Unknown redistributable
        - Unknown gift code
        - Unknown stream
        - Unknown premium server subscribe cooldown
        - Unknown guild template
        - Unknown discoverable server category
        - Unknown sticker
        - Unknown interaction
        - Unknown application command
        - Unknown voice state
        - Unknown application command permissions
        - Unknown Stage Instance
        - Unknown Guild Member Verification Form
        - Unknown Guild Welcome Screen
        - Unknown Guild Scheduled Event
        - Unknown Guild Scheduled Event User
        - Unknown Tag
        - Bots cannot use this endpoint
        - Only bots can use this endpoint
        - Explicit content cannot be sent to the desired recipient(s)
        - You are not authorized to perform this action on this application
        - This action cannot be performed due to slowmode rate limit
        - Only the owner of this account can perform this action
        - This message cannot be edited due to announcement rate limits
        - Under minimum age
        - The channel you are writing has hit the write rate limit
        - The write action you are performing on the server has hit the write rate limit
        - Your Stage topic, server name, server description, or channel names contain words that are not allowed
        - Guild premium subscription level too low
        - Maximum number of guilds reached (100)
        - Maximum number of friends reached (1000)
        - Maximum number of pins reached for the channel (50)
        - Maximum number of recipients reached (10)
        - Maximum number of guild roles reached (250)
        - Maximum number of webhooks reached (10)
        - Maximum number of emojis reached
        - Maximum number of reactions reached (20)
        - Maximum number of guild channels reached (500)
        - Maximum number of attachments in a message reached (10)
        - Maximum number of invites reached (1000)
        - Maximum number of animated emojis reached
        - Maximum number of server members reached
        - Maximum number of server categories has been reached (5)
        - Guild already has a template
        - Maximum number of application commands reached
        - Max number of thread participants has been reached (1000)
        - Max number of daily application command creates has been reached (200)
        - Maximum number of bans for non-guild members have been exceeded
        - Maximum number of bans fetches has been reached
        - Maximum number of uncompleted guild scheduled events reached (100)
        - Maximum number of stickers reached
        - Maximum number of prune requests has been reached. Try again later
        - Maximum number of guild widget settings updates has been reached. Try again later
        - Maximum number of edits to messages older than 1 hour reached. Try again later
        - Maximum number of pinned threads in a forum channel has been reached
        - Maximum number of tags in a forum channel has been reached
        - Bitrate is too high for channel of this type
        - Unauthorized. Provide a valid token and try again
        - You need to verify your account in order to perform this action
        - You are opening direct messages too fast
        - Send messages has been temporarily disabled
        - Request entity too large. Try sending something smaller in size
        - This feature has been temporarily disabled server-side
        - The user is banned from this guild
        - Connection has been revoked
        - Target user is not connected to voice
        - This message has already been crossposted
        - An application command with that name already exists
        - Application interaction failed to send
        - Cannot send a message in a forum channel
        - Interaction has already been acknowledged
        - Tag names must be unique
        - There are no tags available that can be set by non-moderators
        - A tag is required to create a forum post in this channel
        - Missing access
        - Invalid account type
        - Cannot execute action on a DM channel
        - Guild widget disabled
        - Cannot edit a message authored by another user
        - Cannot send an empty message
        - Cannot send messages to this user
        - Cannot send messages in a non-text channel
        - Channel verification level is too high for you to gain access
        - OAuth2 application does not have a bot
        - OAuth2 application limit reached
        - Invalid OAuth2 state
        - You lack permissions to perform that action
        - Invalid authentication token provided
        - Note was too long
        - Provided too few or too many messages to delete. Must provide at least 2 and fewer than 100 messages to delete
        - Invalid MFA Level
        - A message can only be pinned to the channel it was sent in
        - Invite code was either invalid or taken
        - Cannot execute action on a system message
        - Cannot execute action on this channel type
        - Invalid OAuth2 access token provided
        - Missing required OAuth2 scope
        - Invalid webhook token provided
        - Invalid role
        - Invalid Recipient(s)
        - A message provided was too old to bulk delete
        - Invalid form body (returned for both `application/json` and `multipart/form-data` bodies), or invalid `Content-Type` provided
        - An invite was accepted to a guild the application's bot is not in
        - Invalid API version provided
        - File uploaded exceeds the maximum size
        - Invalid file uploaded
        - Cannot self-redeem this gift
        - Invalid Guild
        - Invalid message type
        - Payment source required to redeem gift
        - Cannot delete a channel required for Community guilds
        - Cannot edit stickers within a message
        - Invalid sticker sent
        - Tried to perform an operation on an archived thread, such as editing a message or adding a user to the thread
        - Invalid thread notification settings
        - "`before` value is earlier than the thread creation date"
        - Community server channels must be text channels
        - This server is not available in your location
        - This server needs monetization enabled in order to perform this action
        - This server needs more boosts to perform this action
        - The request body contains invalid JSON.
        - Ownership cannot be transferred to a bot user
        - "Failed to resize asset below the maximum size: 262144"
        - Uploaded file not found.
        - You do not have permission to send this sticker.
        - Two factor is required for this operation
        - No users with DiscordTag exist
        - Reaction was blocked
        - Application not yet available. Try again later
        - API resource is currently overloaded. Try again a little later
        - The Stage is already open
        - Cannot reply without permission to read message history
        - A thread has already been created for this message
        - Thread is locked
        - Maximum number of active threads reached
        - Maximum number of active announcement threads reached
        - Invalid JSON for uploaded Lottie file
        - Uploaded Lotties cannot contain rasterized images such as PNG or JPEG
        - Sticker maximum framerate exceeded
        - Sticker frame count exceeds maximum of 1000 frames
        - Lottie animation maximum dimensions exceeded
        - Sticker frame rate is either too small or too large
        - Sticker animation duration exceeds maximum of 5 seconds
        - Cannot update a finished event
        - Failed to create stage needed for stage event
        - Message was blocked by automatic moderation
        - Title was blocked by automatic moderation
        - Webhooks posted to forum channels must have a thread_name or thread_id
        - Webhooks posted to forum channels cannot have both a thread_name and thread_id
        - Webhooks can only create threads in forum channels
        - Webhook services cannot be used in forum channels
        - Message blocked by harmful links filter
      x-ms-enum:
        - General error (such as a malformed request body, amongst other things)
        - Unknown account
        - Unknown application
        - Unknown channel
        - Unknown guild
        - Unknown integration
        - Unknown invite
        - Unknown member
        - Unknown message
        - Unknown permission overwrite
        - Unknown provider
        - Unknown role
        - Unknown token
        - Unknown user
        - Unknown emoji
        - Unknown webhook
        - Unknown webhook service
        - Unknown session
        - Unknown ban
        - Unknown SKU
        - Unknown Store Listing
        - Unknown entitlement
        - Unknown build
        - Unknown lobby
        - Unknown branch
        - Unknown store directory layout
        - Unknown redistributable
        - Unknown gift code
        - Unknown stream
        - Unknown premium server subscribe cooldown
        - Unknown guild template
        - Unknown discoverable server category
        - Unknown sticker
        - Unknown interaction
        - Unknown application command
        - Unknown voice state
        - Unknown application command permissions
        - Unknown Stage Instance
        - Unknown Guild Member Verification Form
        - Unknown Guild Welcome Screen
        - Unknown Guild Scheduled Event
        - Unknown Guild Scheduled Event User
        - Unknown Tag
        - Bots cannot use this endpoint
        - Only bots can use this endpoint
        - Explicit content cannot be sent to the desired recipient(s)
        - You are not authorized to perform this action on this application
        - This action cannot be performed due to slowmode rate limit
        - Only the owner of this account can perform this action
        - This message cannot be edited due to announcement rate limits
        - Under minimum age
        - The channel you are writing has hit the write rate limit
        - The write action you are performing on the server has hit the write rate limit
        - Your Stage topic, server name, server description, or channel names contain words that are not allowed
        - Guild premium subscription level too low
        - Maximum number of guilds reached (100)
        - Maximum number of friends reached (1000)
        - Maximum number of pins reached for the channel (50)
        - Maximum number of recipients reached (10)
        - Maximum number of guild roles reached (250)
        - Maximum number of webhooks reached (10)
        - Maximum number of emojis reached
        - Maximum number of reactions reached (20)
        - Maximum number of guild channels reached (500)
        - Maximum number of attachments in a message reached (10)
        - Maximum number of invites reached (1000)
        - Maximum number of animated emojis reached
        - Maximum number of server members reached
        - Maximum number of server categories has been reached (5)
        - Guild already has a template
        - Maximum number of application commands reached
        - Max number of thread participants has been reached (1000)
        - Max number of daily application command creates has been reached (200)
        - Maximum number of bans for non-guild members have been exceeded
        - Maximum number of bans fetches has been reached
        - Maximum number of uncompleted guild scheduled events reached (100)
        - Maximum number of stickers reached
        - Maximum number of prune requests has been reached. Try again later
        - Maximum number of guild widget settings updates has been reached. Try again later
        - Maximum number of edits to messages older than 1 hour reached. Try again later
        - Maximum number of pinned threads in a forum channel has been reached
        - Maximum number of tags in a forum channel has been reached
        - Bitrate is too high for channel of this type
        - Unauthorized. Provide a valid token and try again
        - You need to verify your account in order to perform this action
        - You are opening direct messages too fast
        - Send messages has been temporarily disabled
        - Request entity too large. Try sending something smaller in size
        - This feature has been temporarily disabled server-side
        - The user is banned from this guild
        - Connection has been revoked
        - Target user is not connected to voice
        - This message has already been crossposted
        - An application command with that name already exists
        - Application interaction failed to send
        - Cannot send a message in a forum channel
        - Interaction has already been acknowledged
        - Tag names must be unique
        - There are no tags available that can be set by non-moderators
        - A tag is required to create a forum post in this channel
        - Missing access
        - Invalid account type
        - Cannot execute action on a DM channel
        - Guild widget disabled
        - Cannot edit a message authored by another user
        - Cannot send an empty message
        - Cannot send messages to this user
        - Cannot send messages in a non-text channel
        - Channel verification level is too high for you to gain access
        - OAuth2 application does not have a bot
        - OAuth2 application limit reached
        - Invalid OAuth2 state
        - You lack permissions to perform that action
        - Invalid authentication token provided
        - Note was too long
        - Provided too few or too many messages to delete. Must provide at least 2 and fewer than 100 messages to delete
        - Invalid MFA Level
        - A message can only be pinned to the channel it was sent in
        - Invite code was either invalid or taken
        - Cannot execute action on a system message
        - Cannot execute action on this channel type
        - Invalid OAuth2 access token provided
        - Missing required OAuth2 scope
        - Invalid webhook token provided
        - Invalid role
        - Invalid Recipient(s)
        - A message provided was too old to bulk delete
        - Invalid form body (returned for both `application/json` and `multipart/form-data` bodies), or invalid `Content-Type` provided
        - An invite was accepted to a guild the application's bot is not in
        - Invalid API version provided
        - File uploaded exceeds the maximum size
        - Invalid file uploaded
        - Cannot self-redeem this gift
        - Invalid Guild
        - Invalid message type
        - Payment source required to redeem gift
        - Cannot delete a channel required for Community guilds
        - Cannot edit stickers within a message
        - Invalid sticker sent
        - Tried to perform an operation on an archived thread, such as editing a message or adding a user to the thread
        - Invalid thread notification settings
        - "`before` value is earlier than the thread creation date"
        - Community server channels must be text channels
        - This server is not available in your location
        - This server needs monetization enabled in order to perform this action
        - This server needs more boosts to perform this action
        - The request body contains invalid JSON.
        - Ownership cannot be transferred to a bot user
        - "Failed to resize asset below the maximum size: 262144"
        - Uploaded file not found.
        - You do not have permission to send this sticker.
        - Two factor is required for this operation
        - No users with DiscordTag exist
        - Reaction was blocked
        - Application not yet available. Try again later
        - API resource is currently overloaded. Try again a little later
        - The Stage is already open
        - Cannot reply without permission to read message history
        - A thread has already been created for this message
        - Thread is locked
        - Maximum number of active threads reached
        - Maximum number of active announcement threads reached
        - Invalid JSON for uploaded Lottie file
        - Uploaded Lotties cannot contain rasterized images such as PNG or JPEG
        - Sticker maximum framerate exceeded
        - Sticker frame count exceeds maximum of 1000 frames
        - Lottie animation maximum dimensions exceeded
        - Sticker frame rate is either too small or too large
        - Sticker animation duration exceeds maximum of 5 seconds
        - Cannot update a finished event
        - Failed to create stage needed for stage event
        - Message was blocked by automatic moderation
        - Title was blocked by automatic moderation
        - Webhooks posted to forum channels must have a thread_name or thread_id
        - Webhooks posted to forum channels cannot have both a thread_name and thread_id
        - Webhooks can only create threads in forum channels
        - Webhook services cannot be used in forum channels
        - Message blocked by harmful links filter
      description: |-
        - Generalerrorsuchasamalformedrequestbodyamongstotherthings (`0`)
        - Unknownaccount (`10001`)
        - Unknownapplication (`10002`)
        - Unknownchannel (`10003`)
        - Unknownguild (`10004`)
        - Unknownintegration (`10005`)
        - Unknowninvite (`10006`)
        - Unknownmember (`10007`)
        - Unknownmessage (`10008`)
        - Unknownpermissionoverwrite (`10009`)
        - Unknownprovider (`10010`)
        - Unknownrole (`10011`)
        - Unknowntoken (`10012`)
        - Unknownuser (`10013`)
        - Unknownemoji (`10014`)
        - Unknownwebhook (`10015`)
        - Unknownwebhookservice (`10016`)
        - Unknownsession (`10020`)
        - Unknownban (`10026`)
        - UnknownSKU (`10027`)
        - UnknownStoreListing (`10028`)
        - Unknownentitlement (`10029`)
        - Unknownbuild (`10030`)
        - Unknownlobby (`10031`)
        - Unknownbranch (`10032`)
        - Unknownstoredirectorylayout (`10033`)
        - Unknownredistributable (`10036`)
        - Unknowngiftcode (`10038`)
        - Unknownstream (`10049`)
        - Unknownpremiumserversubscribecooldown (`10050`)
        - Unknownguildtemplate (`10057`)
        - Unknowndiscoverableservercategory (`10059`)
        - Unknownsticker (`10060`)
        - Unknowninteraction (`10062`)
        - Unknownapplicationcommand (`10063`)
        - Unknownvoicestate (`10065`)
        - Unknownapplicationcommandpermissions (`10066`)
        - UnknownStageInstance (`10067`)
        - UnknownGuildMemberVerificationForm (`10068`)
        - UnknownGuildWelcomeScreen (`10069`)
        - UnknownGuildScheduledEvent (`10070`)
        - UnknownGuildScheduledEventUser (`10071`)
        - UnknownTag (`10087`)
        - Botscannotusethisendpoint (`20001`)
        - Onlybotscanusethisendpoint (`20002`)
        - Explicitcontentcannotbesenttothedesiredrecipients (`20009`)
        - Youarenotauthorizedtoperformthisactiononthisapplication (`20012`)
        - Thisactioncannotbeperformedduetoslowmoderatelimit (`20016`)
        - Onlytheownerofthisaccountcanperformthisaction (`20018`)
        - Thismessagecannotbeeditedduetoannouncementratelimits (`20022`)
        - Underminimumage (`20024`)
        - Thechannelyouarewritinghashitthewriteratelimit (`20028`)
        - Thewriteactionyouareperformingontheserverhashitthewriteratelimit (`20029`)
        - YourStagetopicservernameserverdescriptionorchannelnamescontainwordsthatarenotallowed (`20031`)
        - Guildpremiumsubscriptionleveltoolow (`20035`)
        - Maximumnumberofguildsreached100 (`30001`)
        - Maximumnumberoffriendsreached1000 (`30002`)
        - Maximumnumberofpinsreachedforthechannel50 (`30003`)
        - Maximumnumberofrecipientsreached10 (`30004`)
        - Maximumnumberofguildrolesreached250 (`30005`)
        - Maximumnumberofwebhooksreached10 (`30007`)
        - Maximumnumberofemojisreached (`30008`)
        - Maximumnumberofreactionsreached20 (`30010`)
        - Maximumnumberofguildchannelsreached500 (`30013`)
        - Maximumnumberofattachmentsinamessagereached10 (`30015`)
        - Maximumnumberofinvitesreached1000 (`30016`)
        - Maximumnumberofanimatedemojisreached (`30018`)
        - Maximumnumberofservermembersreached (`30019`)
        - Maximumnumberofservercategorieshasbeenreached5 (`30030`)
        - Guildalreadyhasatemplate (`30031`)
        - Maximumnumberofapplicationcommandsreached (`30032`)
        - Maxnumberofthreadparticipantshasbeenreached1000 (`30033`)
        - Maxnumberofdailyapplicationcommandcreateshasbeenreached200 (`30034`)
        - Maximumnumberofbansfornon_guildmembershavebeenexceeded (`30035`)
        - Maximumnumberofbansfetcheshasbeenreached (`30037`)
        - Maximumnumberofuncompletedguildscheduledeventsreached100 (`30038`)
        - Maximumnumberofstickersreached (`30039`)
        - MaximumnumberofprunerequestshasbeenreachedTryagainlater (`30040`)
        - MaximumnumberofguildwidgetsettingsupdateshasbeenreachedTryagainlater (`30042`)
        - Maximumnumberofeditstomessagesolderthan1hourreachedTryagainlater (`30046`)
        - Maximumnumberofpinnedthreadsinaforumchannelhasbeenreached (`30047`)
        - Maximumnumberoftagsinaforumchannelhasbeenreached (`30048`)
        - Bitrateistoohighforchannelofthistype (`30052`)
        - UnauthorizedProvideavalidtokenandtryagain (`40001`)
        - Youneedtoverifyyouraccountinordertoperformthisaction (`40002`)
        - Youareopeningdirectmessagestoofast (`40003`)
        - Sendmessageshasbeentemporarilydisabled (`40004`)
        - RequestentitytoolargeTrysendingsomethingsmallerinsize (`40005`)
        - Thisfeaturehasbeentemporarilydisabledserver_side (`40006`)
        - Theuserisbannedfromthisguild (`40007`)
        - Connectionhasbeenrevoked (`40012`)
        - Targetuserisnotconnectedtovoice (`40032`)
        - Thismessagehasalreadybeencrossposted (`40033`)
        - Anapplicationcommandwiththatnamealreadyexists (`40041`)
        - Applicationinteractionfailedtosend (`40043`)
        - Cannotsendamessageinaforumchannel (`40058`)
        - Interactionhasalreadybeenacknowledged (`40060`)
        - Tagnamesmustbeunique (`40061`)
        - Therearenotagsavailablethatcanbesetbynon_moderators (`40066`)
        - Atagisrequiredtocreateaforumpostinthischannel (`40067`)
        - Missingaccess (`50001`)
        - Invalidaccounttype (`50002`)
        - CannotexecuteactiononaDMchannel (`50003`)
        - Guildwidgetdisabled (`50004`)
        - Cannoteditamessageauthoredbyanotheruser (`50005`)
        - Cannotsendanemptymessage (`50006`)
        - Cannotsendmessagestothisuser (`50007`)
        - Cannotsendmessagesinanon_textchannel (`50008`)
        - Channelverificationlevelistoohighforyoutogainaccess (`50009`)
        - OAuth2applicationdoesnothaveabot (`50010`)
        - OAuth2applicationlimitreached (`50011`)
        - InvalidOAuth2state (`50012`)
        - Youlackpermissionstoperformthataction (`50013`)
        - Invalidauthenticationtokenprovided (`50014`)
        - Notewastoolong (`50015`)
        - ProvidedtoofewortoomanymessagestodeleteMustprovideatleast2andfewerthan100messagestodelete (`50016`)
        - InvalidMFALevel (`50017`)
        - Amessagecanonlybepinnedtothechannelitwassentin (`50019`)
        - Invitecodewaseitherinvalidortaken (`50020`)
        - Cannotexecuteactiononasystemmessage (`50021`)
        - Cannotexecuteactiononthischanneltype (`50024`)
        - InvalidOAuth2accesstokenprovided (`50025`)
        - MissingrequiredOAuth2scope (`50026`)
        - Invalidwebhooktokenprovided (`50027`)
        - Invalidrole (`50028`)
        - InvalidRecipients (`50033`)
        - Amessageprovidedwastoooldtobulkdelete (`50034`)
        - Invalidformbodyreturnedforbothapplicationjsonandmultipartform_databodiesorinvalidContent_Typeprovided (`50035`)
        - Aninvitewasacceptedtoaguildtheapplicationsbotisnotin (`50036`)
        - InvalidAPIversionprovided (`50041`)
        - Fileuploadedexceedsthemaximumsize (`50045`)
        - Invalidfileuploaded (`50046`)
        - Cannotself_redeemthisgift (`50054`)
        - InvalidGuild (`50055`)
        - Invalidmessagetype (`50068`)
        - Paymentsourcerequiredtoredeemgift (`50070`)
        - CannotdeleteachannelrequiredforCommunityguilds (`50074`)
        - Cannoteditstickerswithinamessage (`50080`)
        - Invalidstickersent (`50081`)
        - Triedtoperformanoperationonanarchivedthreadsuchaseditingamessageoraddingausertothethread (`50083`)
        - Invalidthreadnotificationsettings (`50084`)
        - beforevalueisearlierthanthethreadcreationdate (`50085`)
        - Communityserverchannelsmustbetextchannels (`50086`)
        - Thisserverisnotavailableinyourlocation (`50095`)
        - Thisserverneedsmonetizationenabledinordertoperformthisaction (`50097`)
        - Thisserverneedsmorebooststoperformthisaction (`50101`)
        - TherequestbodycontainsinvalidJSON (`50109`)
        - Ownershipcannotbetransferredtoabotuser (`50132`)
        - Failedtoresizeassetbelowthemaximumsize262144 (`50138`)
        - Uploadedfilenotfound (`50146`)
        - Youdonothavepermissiontosendthissticker (`50600`)
        - Twofactorisrequiredforthisoperation (`60003`)
        - NouserswithDiscordTagexist (`80004`)
        - Reactionwasblocked (`90001`)
        - ApplicationnotyetavailableTryagainlater (`110001`)
        - APIresourceiscurrentlyoverloadedTryagainalittlelater (`130000`)
        - TheStageisalreadyopen (`150006`)
        - Cannotreplywithoutpermissiontoreadmessagehistory (`160002`)
        - Athreadhasalreadybeencreatedforthismessage (`160004`)
        - Threadislocked (`160005`)
        - Maximumnumberofactivethreadsreached (`160006`)
        - Maximumnumberofactiveannouncementthreadsreached (`160007`)
        - InvalidJSONforuploadedLottiefile (`170001`)
        - UploadedLottiescannotcontainrasterizedimagessuchasPNGorJPEG (`170002`)
        - Stickermaximumframerateexceeded (`170003`)
        - Stickerframecountexceedsmaximumof1000frames (`170004`)
        - Lottieanimationmaximumdimensionsexceeded (`170005`)
        - Stickerframerateiseithertoosmallortoolarge (`170006`)
        - Stickeranimationdurationexceedsmaximumof5seconds (`170007`)
        - Cannotupdateafinishedevent (`180000`)
        - Failedtocreatestageneededforstageevent (`180002`)
        - Messagewasblockedbyautomaticmoderation (`200000`)
        - Titlewasblockedbyautomaticmoderation (`200001`)
        - Webhookspostedtoforumchannelsmusthaveathread_nameorthread_id (`220001`)
        - Webhookspostedtoforumchannelscannothavebothathread_nameandthread_id (`220002`)
        - Webhookscanonlycreatethreadsinforumchannels (`220003`)
        - Webhookservicescannotbeusedinforumchannels (`220004`)
        - Messageblockedbyharmfullinksfilter (`240000`)
      externalDocs:
        url: https://discord.com/developers/docs/topics/opcodes-and-status-codes#json-json-error-codes
    DiscordErrorDetails:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      additionalProperties: false
      required:
        - code
        - message
      externalDocs:
        url: https://discord.com/developers/docs/reference#error-messages
    DiscordErrorNode:
      type: object
      properties:
        _errors:
          $ref: "#/components/schemas/DiscordErrorDetails"
      additionalProperties:
        $ref: "#/components/schemas/DiscordErrorNode"
      externalDocs:
        url: https://discord.com/developers/docs/reference#error-messages
    DiscordApiError:
      type: object
      properties:
        message:
          type: string
        code:
          oneOf:
            - $ref: "#/components/schemas/JSONErrorCodes"
            - type: number
        errors:
          $ref: "#/components/schemas/DiscordErrorNode"
      required:
        - message
        - code
      externalDocs:
        url: https://discord.com/developers/docs/reference#error-messages
    DiscordRatelimitError:
      type: object
      properties:
        message:
          type: string
        retry_after:
          type: number
        global:
          type: boolean
      required:
        - message
        - retry_after
        - global
      externalDocs:
        url: https://discord.com/developers/docs/topics/rate-limits#rate-limits
    Snowflake:
      type: string
      format: uint64
      externalDocs:
        url: https://discord.com/developers/docs/reference#snowflakes
    Locales:
      type: string
      enum:
        - da
        - de
        - en-GB
        - en-US
        - es-ES
        - fr
        - hr
        - it
        - lt
        - hu
        - nl
        - no
        - pl
        - pt-BR
        - ro
        - fi
        - sv-SE
        - vi
        - tr
        - cs
        - el
        - bg
        - ru
        - uk
        - hi
        - th
        - zh-CN
        - ja
        - zh-TW
        - ko
      x-enumNames:
        - Danish
        - German
        - English, UK
        - English, US
        - Spanish
        - French
        - Croatian
        - Italian
        - Lithuanian
        - Hungarian
        - Dutch
        - Norwegian
        - Polish
        - Portuguese, Brazilian
        - Romanian, Romania
        - Finnish
        - Swedish
        - Vietnamese
        - Turkish
        - Czech
        - Greek
        - Bulgarian
        - Russian
        - Ukrainian
        - Hindi
        - Thai
        - Chinese, China
        - Japanese
        - Chinese, Taiwan
        - Korean
      x-enum-varnames:
        - Danish
        - German
        - English, UK
        - English, US
        - Spanish
        - French
        - Croatian
        - Italian
        - Lithuanian
        - Hungarian
        - Dutch
        - Norwegian
        - Polish
        - Portuguese, Brazilian
        - Romanian, Romania
        - Finnish
        - Swedish
        - Vietnamese
        - Turkish
        - Czech
        - Greek
        - Bulgarian
        - Russian
        - Ukrainian
        - Hindi
        - Thai
        - Chinese, China
        - Japanese
        - Chinese, Taiwan
        - Korean
      x-ms-enum:
        - Danish
        - German
        - English, UK
        - English, US
        - Spanish
        - French
        - Croatian
        - Italian
        - Lithuanian
        - Hungarian
        - Dutch
        - Norwegian
        - Polish
        - Portuguese, Brazilian
        - Romanian, Romania
        - Finnish
        - Swedish
        - Vietnamese
        - Turkish
        - Czech
        - Greek
        - Bulgarian
        - Russian
        - Ukrainian
        - Hindi
        - Thai
        - Chinese, China
        - Japanese
        - Chinese, Taiwan
        - Korean
      description: |-
        - Danish (`"da"`) - Dansk
        - German (`"de"`) - Deutsch
        - EnglishUK (`"en-GB"`) - English, UK
        - EnglishUS (`"en-US"`) - English, US
        - Spanish (`"es-ES"`) - Español
        - French (`"fr"`) - Français
        - Croatian (`"hr"`) - Hrvatski
        - Italian (`"it"`) - Italiano
        - Lithuanian (`"lt"`) - Lietuviškai
        - Hungarian (`"hu"`) - Magyar
        - Dutch (`"nl"`) - Nederlands
        - Norwegian (`"no"`) - Norsk
        - Polish (`"pl"`) - Polski
        - PortugueseBrazilian (`"pt-BR"`) - Português do Brasil
        - RomanianRomania (`"ro"`) - Română
        - Finnish (`"fi"`) - Suomi
        - Swedish (`"sv-SE"`) - Svenska
        - Vietnamese (`"vi"`) - Tiếng Việt
        - Turkish (`"tr"`) - Türkçe
        - Czech (`"cs"`) - Čeština
        - Greek (`"el"`) - Ελληνικά
        - Bulgarian (`"bg"`) - български
        - Russian (`"ru"`) - Pусский
        - Ukrainian (`"uk"`) - Українська
        - Hindi (`"hi"`) - हिन्दी
        - Thai (`"th"`) - ไทย
        - ChineseChina (`"zh-CN"`) - 中文
        - Japanese (`"ja"`) - 日本語
        - ChineseTaiwan (`"zh-TW"`) - 繁體中文
        - Korean (`"ko"`) - 한국어
      externalDocs:
        url: https://discord.com/developers/docs/reference#locales
    UserFlags:
      type: integer
      enum:
        - 1
        - 2
        - 4
        - 8
        - 64
        - 128
        - 256
        - 512
        - 1024
        - 16384
        - 65536
        - 131072
        - 262144
        - 524288
      x-enumNames:
        - STAFF
        - PARTNER
        - HYPESQUAD
        - BUG_HUNTER_LEVEL_1
        - HYPESQUAD_ONLINE_HOUSE_1
        - HYPESQUAD_ONLINE_HOUSE_2
        - HYPESQUAD_ONLINE_HOUSE_3
        - PREMIUM_EARLY_SUPPORTER
        - TEAM_PSEUDO_USER
        - BUG_HUNTER_LEVEL_2
        - VERIFIED_BOT
        - VERIFIED_DEVELOPER
        - CERTIFIED_MODERATOR
        - BOT_HTTP_INTERACTIONS
      x-enum-varnames:
        - STAFF
        - PARTNER
        - HYPESQUAD
        - BUG_HUNTER_LEVEL_1
        - HYPESQUAD_ONLINE_HOUSE_1
        - HYPESQUAD_ONLINE_HOUSE_2
        - HYPESQUAD_ONLINE_HOUSE_3
        - PREMIUM_EARLY_SUPPORTER
        - TEAM_PSEUDO_USER
        - BUG_HUNTER_LEVEL_2
        - VERIFIED_BOT
        - VERIFIED_DEVELOPER
        - CERTIFIED_MODERATOR
        - BOT_HTTP_INTERACTIONS
      x-ms-enum:
        - STAFF
        - PARTNER
        - HYPESQUAD
        - BUG_HUNTER_LEVEL_1
        - HYPESQUAD_ONLINE_HOUSE_1
        - HYPESQUAD_ONLINE_HOUSE_2
        - HYPESQUAD_ONLINE_HOUSE_3
        - PREMIUM_EARLY_SUPPORTER
        - TEAM_PSEUDO_USER
        - BUG_HUNTER_LEVEL_2
        - VERIFIED_BOT
        - VERIFIED_DEVELOPER
        - CERTIFIED_MODERATOR
        - BOT_HTTP_INTERACTIONS
      description: |-
        - STAFF (`1`) - Discord Employee
        - PARTNER (`2`) - Partnered Server Owner
        - HYPESQUAD (`4`) - HypeSquad Events Member
        - BUG_HUNTER_LEVEL_1 (`8`) - Bug Hunter Level 1
        - HYPESQUAD_ONLINE_HOUSE_1 (`64`) - House Bravery Member
        - HYPESQUAD_ONLINE_HOUSE_2 (`128`) - House Brilliance Member
        - HYPESQUAD_ONLINE_HOUSE_3 (`256`) - House Balance Member
        - PREMIUM_EARLY_SUPPORTER (`512`) - Early Nitro Supporter
        - TEAM_PSEUDO_USER (`1024`) - User is a [team](#DOCS_TOPICS_TEAMS/)
        - BUG_HUNTER_LEVEL_2 (`16384`) - Bug Hunter Level 2
        - VERIFIED_BOT (`65536`) - Verified Bot
        - VERIFIED_DEVELOPER (`131072`) - Early Verified Bot Developer
        - CERTIFIED_MODERATOR (`262144`) - Discord Certified Moderator
        - BOT_HTTP_INTERACTIONS (`524288`) - Bot uses only [HTTP interactions](https://discord.com/developers/docs/interactions/receiving-and-responding#receiving-an-interaction) and is shown in the online member list
      externalDocs:
        url: https://discord.com/developers/docs/resources/user#user-object-user-flags
    PremiumTypes:
      type: integer
      enum:
        - 0
        - 1
        - 2
      x-enumNames:
        - None
        - Nitro Classic
        - Nitro
      x-enum-varnames:
        - None
        - Nitro Classic
        - Nitro
      x-ms-enum:
        - None
        - Nitro Classic
        - Nitro
      description: |-
        - None (`0`)
        - NitroClassic (`1`)
        - Nitro (`2`)
      externalDocs:
        url: https://discord.com/developers/docs/resources/user#user-object-premium-types
    User:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the user's id
        username:
          type: string
          description: the user's username, not unique across the platform
        discriminator:
          type: string
          description: the user's 4-digit discord-tag
        avatar:
          type: string
          nullable: true
          description: the user's [avatar hash](https://discord.com/developers/docs/reference#image-formatting)
        bot:
          type: boolean
          description: whether the user belongs to an OAuth2 application
        system:
          type: boolean
          description: whether the user is an Official Discord System user (part of the urgent message system)
        mfa_enabled:
          type: boolean
          description: whether the user has two factor enabled on their account
        banner:
          type: string
          nullable: true
          description: the user's [banner hash](https://discord.com/developers/docs/reference#image-formatting)
        accent_color:
          type: integer
          nullable: true
          description: the user's banner color encoded as an integer representation of hexadecimal color code
        locale:
          allOf:
            - $ref: "#/components/schemas/Locales"
          description: the user's chosen [language option](https://discord.com/developers/docs/reference#locales)
        verified:
          type: boolean
          description: whether the email on this account has been verified
        email:
          type: string
          nullable: true
          description: the user's email
        flags:
          type: integer
          description: the [flags](https://discord.com/developers/docs/resources/user#user-object-user-flags) on a user's account
        premium_type:
          allOf:
            - $ref: "#/components/schemas/PremiumTypes"
          description: the [type of Nitro subscription](https://discord.com/developers/docs/resources/user#user-object-premium-types) on a user's account
        public_flags:
          type: integer
          description: the public [flags](https://discord.com/developers/docs/resources/user#user-object-user-flags) on a user's account
      required:
        - id
        - username
        - discriminator
        - avatar
      externalDocs:
        url: https://discord.com/developers/docs/resources/user#user-object-user-structure
    ApplicationOwner:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the user's id
        username:
          type: string
          description: the user's username, not unique across the platform
        discriminator:
          type: string
          description: the user's 4-digit discord-tag
        avatar:
          type: string
          nullable: true
          description: the user's [avatar hash](https://discord.com/developers/docs/reference#image-formatting)
        bot:
          type: boolean
          description: whether the user belongs to an OAuth2 application
        system:
          type: boolean
          description: whether the user is an Official Discord System user (part of the urgent message system)
        mfa_enabled:
          type: boolean
          description: whether the user has two factor enabled on their account
        banner:
          type: string
          nullable: true
          description: the user's [banner hash](https://discord.com/developers/docs/reference#image-formatting)
        accent_color:
          type: integer
          nullable: true
          description: the user's banner color encoded as an integer representation of hexadecimal color code
        locale:
          allOf:
            - $ref: "#/components/schemas/Locales"
          description: the user's chosen [language option](https://discord.com/developers/docs/reference#locales)
        verified:
          type: boolean
          description: whether the email on this account has been verified
        email:
          type: string
          nullable: true
          description: the user's email
        flags:
          type: integer
          description: the [flags](https://discord.com/developers/docs/resources/user#user-object-user-flags) on a user's account
        premium_type:
          allOf:
            - $ref: "#/components/schemas/PremiumTypes"
          description: the [type of Nitro subscription](https://discord.com/developers/docs/resources/user#user-object-premium-types) on a user's account
        public_flags:
          type: integer
          description: the public [flags](https://discord.com/developers/docs/resources/user#user-object-user-flags) on a user's account
      externalDocs:
        url: https://discord.com/developers/docs/resources/application#application-object-application-structure
    MembershipState:
      type: integer
      enum:
        - 1
        - 2
      x-enumNames:
        - INVITED
        - ACCEPTED
      x-enum-varnames:
        - INVITED
        - ACCEPTED
      x-ms-enum:
        - INVITED
        - ACCEPTED
      description: |-
        - INVITED (`1`)
        - ACCEPTED (`2`)
      externalDocs:
        url: https://discord.com/developers/docs/topics/teams#data-models-membership-state-enum
    TeamMemberUser:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the user's id
        username:
          type: string
          description: the user's username, not unique across the platform
        discriminator:
          type: string
          description: the user's 4-digit discord-tag
        avatar:
          type: string
          nullable: true
          description: the user's [avatar hash](https://discord.com/developers/docs/reference#image-formatting)
      externalDocs:
        url: https://discord.com/developers/docs/topics/teams#data-models-team-member-object
    TeamMember:
      type: object
      properties:
        membership_state:
          allOf:
            - $ref: "#/components/schemas/MembershipState"
          description: the user's [membership state](https://discord.com/developers/docs/topics/teams#data-models-membership-state-enum) on the team
        permissions:
          type: array
          items:
            type: string
          description: will always be `["*"]`
        team_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the parent team of which they are a member
        user:
          allOf:
            - $ref: "#/components/schemas/TeamMemberUser"
          description: the avatar, discriminator, id, and username of the user
      required:
        - membership_state
        - permissions
        - team_id
        - user
      externalDocs:
        url: https://discord.com/developers/docs/topics/teams#data-models-team-member-object
    Team:
      type: object
      properties:
        icon:
          type: string
          nullable: true
          description: a hash of the image of the team's icon
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the unique id of the team
        members:
          type: array
          items:
            $ref: "#/components/schemas/TeamMember"
          description: the members of the team
        name:
          type: string
          description: the name of the team
        owner_user_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the user id of the current team owner
      required:
        - icon
        - id
        - members
        - name
        - owner_user_id
      externalDocs:
        url: https://discord.com/developers/docs/topics/teams#data-models-team-object
    ApplicationFlags:
      type: integer
      enum:
        - 4096
        - 8192
        - 16384
        - 32768
        - 65536
        - 131072
        - 262144
        - 524288
        - 8388608
      x-enumNames:
        - GATEWAY_PRESENCE
        - GATEWAY_PRESENCE_LIMITED
        - GATEWAY_GUILD_MEMBERS
        - GATEWAY_GUILD_MEMBERS_LIMITED
        - VERIFICATION_PENDING_GUILD_LIMIT
        - EMBEDDED
        - GATEWAY_MESSAGE_CONTENT
        - GATEWAY_MESSAGE_CONTENT_LIMITED
        - APPLICATION_COMMAND_BADGE
      x-enum-varnames:
        - GATEWAY_PRESENCE
        - GATEWAY_PRESENCE_LIMITED
        - GATEWAY_GUILD_MEMBERS
        - GATEWAY_GUILD_MEMBERS_LIMITED
        - VERIFICATION_PENDING_GUILD_LIMIT
        - EMBEDDED
        - GATEWAY_MESSAGE_CONTENT
        - GATEWAY_MESSAGE_CONTENT_LIMITED
        - APPLICATION_COMMAND_BADGE
      x-ms-enum:
        - GATEWAY_PRESENCE
        - GATEWAY_PRESENCE_LIMITED
        - GATEWAY_GUILD_MEMBERS
        - GATEWAY_GUILD_MEMBERS_LIMITED
        - VERIFICATION_PENDING_GUILD_LIMIT
        - EMBEDDED
        - GATEWAY_MESSAGE_CONTENT
        - GATEWAY_MESSAGE_CONTENT_LIMITED
        - APPLICATION_COMMAND_BADGE
      description: |-
        - GATEWAY_PRESENCE (`4096`) - Intent required for bots in **100 or more servers** to receive [`presence_update` events](https://discord.com/developers/docs/topics/gateway#presence-update)
        - GATEWAY_PRESENCE_LIMITED (`8192`) - Intent required for bots in under 100 servers to receive [`presence_update` events](https://discord.com/developers/docs/topics/gateway#presence-update), found in Bot Settings
        - GATEWAY_GUILD_MEMBERS (`16384`) - Intent required for bots in **100 or more servers** to receive member-related events like `guild_member_add`. See list of member-related events [under `GUILD_MEMBERS`](https://discord.com/developers/docs/topics/gateway#list-of-intents)
        - GATEWAY_GUILD_MEMBERS_LIMITED (`32768`) - Intent required for bots in under 100 servers to receive member-related events like `guild_member_add`, found in Bot Settings. See list of member-related events [under `GUILD_MEMBERS`](https://discord.com/developers/docs/topics/gateway#list-of-intents)
        - VERIFICATION_PENDING_GUILD_LIMIT (`65536`) - Indicates unusual growth of an app that prevents verification
        - EMBEDDED (`131072`) - Indicates if an app is embedded within the Discord client (currently unavailable publicly)
        - GATEWAY_MESSAGE_CONTENT (`262144`) - Intent required for bots in **100 or more servers** to receive [message content](https://support-dev.discord.com/hc/en-us/articles/4404772028055)
        - GATEWAY_MESSAGE_CONTENT_LIMITED (`524288`) - Intent required for bots in under 100 servers to receive [message content](https://support-dev.discord.com/hc/en-us/articles/4404772028055), found in Bot Settings
        - APPLICATION_COMMAND_BADGE (`8388608`) - Indicates if an app has registered global [application commands](https://discord.com/developers/docs/interactions/application-commands)
      externalDocs:
        url: https://discord.com/developers/docs/resources/application#application-object-application-flags
    OAuth2Scopes:
      type: string
      enum:
        - activities.read
        - activities.write
        - applications.builds.read
        - applications.builds.upload
        - applications.commands
        - applications.commands.update
        - applications.commands.permissions.update
        - applications.entitlements
        - applications.store.update
        - bot
        - connections
        - dm_channels.read
        - email
        - gdm.join
        - guilds
        - guilds.join
        - guilds.members.read
        - identify
        - messages.read
        - relationships.read
        - rpc
        - rpc.activities.write
        - rpc.notifications.read
        - rpc.voice.read
        - rpc.voice.write
        - voice
        - webhook.incoming
      x-enumNames:
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
      x-enum-varnames:
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
      x-ms-enum:
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
      description: |-
        - "activities.read" - allows your app to fetch data from a user's "Now Playing/Recently Played" list - requires Discord approval
        - "activities.write" - allows your app to update a user's activity - requires Discord approval (NOT REQUIRED FOR [GAMESDK ACTIVITY MANAGER](#DOCS_GAME_SDK_ACTIVITIES/))
        - "applications.builds.read" - allows your app to read build data for a user's applications
        - "applications.builds.upload" - allows your app to upload/update builds for a user's applications - requires Discord approval
        - "applications.commands" - allows your app to use [commands](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/) in a guild
        - "applications.commands.update" - allows your app to update its [commands](#DOCS_INTERACTIONS_APPLICATION_COMMANDS/) using a Bearer token - [client credentials grant](#DOCS_TOPICS_OAUTH2/client-credentials-grant) only
        - "applications.commands.permissions.update" - allows your app to update [permissions for its commands](https://discord.com/developers/docs/interactions/application-commands#permissions) in a guild a user has permissions to
        - "applications.entitlements" - allows your app to read entitlements for a user's applications
        - "applications.store.update" - allows your app to read and update store data (SKUs, store listings, achievements, etc.) for a user's applications
        - "bot" - for oauth2 bots, this puts the bot in the user's selected guild by default
        - "connections" - allows [/users/@me/connections](https://discord.com/developers/docs/resources/user#get-user-connections) to return linked third-party accounts
        - "dm_channels.read" - allows your app to see information about the user's DMs and group DMs - requires Discord approval
        - "email" - enables [/users/@me](https://discord.com/developers/docs/resources/user#get-current-user) to return an `email`
        - "gdm.join" - allows your app to [join users to a group dm](https://discord.com/developers/docs/resources/channel#group-dm-add-recipient)
        - "guilds" - allows [/users/@me/guilds](https://discord.com/developers/docs/resources/user#get-current-user-guilds) to return basic information about all of a user's guilds
        - "guilds.join" - allows [/guilds/{guild.id}/members/{user.id}](https://discord.com/developers/docs/resources/guild#add-guild-member) to be used for joining users to a guild
        - "guilds.members.read" - allows [/users/@me/guilds/{guild.id}/member](https://discord.com/developers/docs/resources/user#get-current-user-guild-member) to return a user's member information in a guild
        - "identify" - allows [/users/@me](https://discord.com/developers/docs/resources/user#get-current-user) without `email`
        - "messages.read" - for local rpc server api access, this allows you to read messages from all client channels (otherwise restricted to channels/guilds your app creates)
        - "relationships.read" - allows your app to know a user's friends and implicit relationships - requires Discord approval
        - "rpc" - for local rpc server access, this allows you to control a user's local Discord client - requires Discord approval
        - "rpc.activities.write" - for local rpc server access, this allows you to update a user's activity - requires Discord approval
        - "rpc.notifications.read" - for local rpc server access, this allows you to receive notifications pushed out to the user - requires Discord approval
        - "rpc.voice.read" - for local rpc server access, this allows you to read a user's voice settings and listen for voice events - requires Discord approval
        - "rpc.voice.write" - for local rpc server access, this allows you to update a user's voice settings - requires Discord approval
        - "voice" - allows your app to connect to voice on user's behalf and see all the voice members - requires Discord approval
        - "webhook.incoming" - this generates a webhook that is returned in the oauth token response for authorization code grants
      externalDocs:
        url: https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes
    BitwisePermissionFlags:
      type: string
      format: uint64
      enum:
        - "1"
        - "2"
        - "4"
        - "8"
        - "16"
        - "32"
        - "64"
        - "128"
        - "256"
        - "512"
        - "1024"
        - "2048"
        - "4096"
        - "8192"
        - "16384"
        - "32768"
        - "65536"
        - "131072"
        - "262144"
        - "524288"
        - "1048576"
        - "2097152"
        - "4194304"
        - "8388608"
        - "16777216"
        - "33554432"
        - "67108864"
        - "134217728"
        - "268435456"
        - "536870912"
        - "1073741824"
        - "2147483648"
        - "4294967296"
        - "8589934592"
        - "17179869184"
        - "34359738368"
        - "68719476736"
        - "137438953472"
        - "274877906944"
        - "549755813888"
        - "1099511627776"
      x-enumNames:
        - CREATE_INSTANT_INVITE
        - KICK_MEMBERS \*
        - BAN_MEMBERS \*
        - ADMINISTRATOR \*
        - MANAGE_CHANNELS \*
        - MANAGE_GUILD \*
        - ADD_REACTIONS
        - VIEW_AUDIT_LOG
        - PRIORITY_SPEAKER
        - STREAM
        - VIEW_CHANNEL
        - SEND_MESSAGES
        - SEND_TTS_MESSAGES
        - MANAGE_MESSAGES \*
        - EMBED_LINKS
        - ATTACH_FILES
        - READ_MESSAGE_HISTORY
        - MENTION_EVERYONE
        - USE_EXTERNAL_EMOJIS
        - VIEW_GUILD_INSIGHTS
        - CONNECT
        - SPEAK
        - MUTE_MEMBERS
        - DEAFEN_MEMBERS
        - MOVE_MEMBERS
        - USE_VAD
        - CHANGE_NICKNAME
        - MANAGE_NICKNAMES
        - MANAGE_ROLES \*
        - MANAGE_WEBHOOKS \*
        - MANAGE_EMOJIS_AND_STICKERS \*
        - USE_APPLICATION_COMMANDS
        - REQUEST_TO_SPEAK
        - MANAGE_EVENTS
        - MANAGE_THREADS \*
        - CREATE_PUBLIC_THREADS
        - CREATE_PRIVATE_THREADS
        - USE_EXTERNAL_STICKERS
        - SEND_MESSAGES_IN_THREADS
        - USE_EMBEDDED_ACTIVITIES
        - MODERATE_MEMBERS \*\*
      x-enum-varnames:
        - CREATE_INSTANT_INVITE
        - KICK_MEMBERS \*
        - BAN_MEMBERS \*
        - ADMINISTRATOR \*
        - MANAGE_CHANNELS \*
        - MANAGE_GUILD \*
        - ADD_REACTIONS
        - VIEW_AUDIT_LOG
        - PRIORITY_SPEAKER
        - STREAM
        - VIEW_CHANNEL
        - SEND_MESSAGES
        - SEND_TTS_MESSAGES
        - MANAGE_MESSAGES \*
        - EMBED_LINKS
        - ATTACH_FILES
        - READ_MESSAGE_HISTORY
        - MENTION_EVERYONE
        - USE_EXTERNAL_EMOJIS
        - VIEW_GUILD_INSIGHTS
        - CONNECT
        - SPEAK
        - MUTE_MEMBERS
        - DEAFEN_MEMBERS
        - MOVE_MEMBERS
        - USE_VAD
        - CHANGE_NICKNAME
        - MANAGE_NICKNAMES
        - MANAGE_ROLES \*
        - MANAGE_WEBHOOKS \*
        - MANAGE_EMOJIS_AND_STICKERS \*
        - USE_APPLICATION_COMMANDS
        - REQUEST_TO_SPEAK
        - MANAGE_EVENTS
        - MANAGE_THREADS \*
        - CREATE_PUBLIC_THREADS
        - CREATE_PRIVATE_THREADS
        - USE_EXTERNAL_STICKERS
        - SEND_MESSAGES_IN_THREADS
        - USE_EMBEDDED_ACTIVITIES
        - MODERATE_MEMBERS \*\*
      x-ms-enum:
        - CREATE_INSTANT_INVITE
        - KICK_MEMBERS \*
        - BAN_MEMBERS \*
        - ADMINISTRATOR \*
        - MANAGE_CHANNELS \*
        - MANAGE_GUILD \*
        - ADD_REACTIONS
        - VIEW_AUDIT_LOG
        - PRIORITY_SPEAKER
        - STREAM
        - VIEW_CHANNEL
        - SEND_MESSAGES
        - SEND_TTS_MESSAGES
        - MANAGE_MESSAGES \*
        - EMBED_LINKS
        - ATTACH_FILES
        - READ_MESSAGE_HISTORY
        - MENTION_EVERYONE
        - USE_EXTERNAL_EMOJIS
        - VIEW_GUILD_INSIGHTS
        - CONNECT
        - SPEAK
        - MUTE_MEMBERS
        - DEAFEN_MEMBERS
        - MOVE_MEMBERS
        - USE_VAD
        - CHANGE_NICKNAME
        - MANAGE_NICKNAMES
        - MANAGE_ROLES \*
        - MANAGE_WEBHOOKS \*
        - MANAGE_EMOJIS_AND_STICKERS \*
        - USE_APPLICATION_COMMANDS
        - REQUEST_TO_SPEAK
        - MANAGE_EVENTS
        - MANAGE_THREADS \*
        - CREATE_PUBLIC_THREADS
        - CREATE_PRIVATE_THREADS
        - USE_EXTERNAL_STICKERS
        - SEND_MESSAGES_IN_THREADS
        - USE_EMBEDDED_ACTIVITIES
        - MODERATE_MEMBERS \*\*
      description: |-
        - CREATE_INSTANT_INVITE (`"1"`) - Allows creation of instant invites
        - KICK_MEMBERS (`"2"`) - Allows kicking members
        - BAN_MEMBERS (`"4"`) - Allows banning members
        - ADMINISTRATOR (`"8"`) - Allows all permissions and bypasses channel permission overwrites
        - MANAGE_CHANNELS (`"16"`) - Allows management and editing of channels
        - MANAGE_GUILD (`"32"`) - Allows management and editing of the guild
        - ADD_REACTIONS (`"64"`) - Allows for the addition of reactions to messages
        - VIEW_AUDIT_LOG (`"128"`) - Allows for viewing of audit logs
        - PRIORITY_SPEAKER (`"256"`) - Allows for using priority speaker in a voice channel
        - STREAM (`"512"`) - Allows the user to go live
        - VIEW_CHANNEL (`"1024"`) - Allows guild members to view a channel, which includes reading messages in text channels and joining voice channels
        - SEND_MESSAGES (`"2048"`) - Allows for sending messages in a channel and creating threads in a forum (does not allow sending messages in threads)
        - SEND_TTS_MESSAGES (`"4096"`) - Allows for sending of `/tts` messages
        - MANAGE_MESSAGES (`"8192"`) - Allows for deletion of other users messages
        - EMBED_LINKS (`"16384"`) - Links sent by users with this permission will be auto-embedded
        - ATTACH_FILES (`"32768"`) - Allows for uploading images and files
        - READ_MESSAGE_HISTORY (`"65536"`) - Allows for reading of message history
        - MENTION_EVERYONE (`"131072"`) - Allows for using the `@everyone` tag to notify all users in a channel, and the `@here` tag to notify all online users in a channel
        - USE_EXTERNAL_EMOJIS (`"262144"`) - Allows the usage of custom emojis from other servers
        - VIEW_GUILD_INSIGHTS (`"524288"`) - Allows for viewing guild insights
        - CONNECT (`"1048576"`) - Allows for joining of a voice channel
        - SPEAK (`"2097152"`) - Allows for speaking in a voice channel
        - MUTE_MEMBERS (`"4194304"`) - Allows for muting members in a voice channel
        - DEAFEN_MEMBERS (`"8388608"`) - Allows for deafening of members in a voice channel
        - MOVE_MEMBERS (`"16777216"`) - Allows for moving of members between voice channels
        - USE_VAD (`"33554432"`) - Allows for using voice-activity-detection in a voice channel
        - CHANGE_NICKNAME (`"67108864"`) - Allows for modification of own nickname
        - MANAGE_NICKNAMES (`"134217728"`) - Allows for modification of other users nicknames
        - MANAGE_ROLES (`"268435456"`) - Allows management and editing of roles
        - MANAGE_WEBHOOKS (`"536870912"`) - Allows management and editing of webhooks
        - MANAGE_EMOJIS_AND_STICKERS (`"1073741824"`) - Allows management and editing of emojis and stickers
        - USE_APPLICATION_COMMANDS (`"2147483648"`) - Allows members to use application commands, including slash commands and context menu commands.
        - REQUEST_TO_SPEAK (`"4294967296"`) - Allows for requesting to speak in stage channels. (_This permission is under active development and may be changed or removed._)
        - MANAGE_EVENTS (`"8589934592"`) - Allows for creating, editing, and deleting scheduled events
        - MANAGE_THREADS (`"17179869184"`) - Allows for deleting and archiving threads, and viewing all private threads
        - CREATE_PUBLIC_THREADS (`"34359738368"`) - Allows for creating public and announcement threads
        - CREATE_PRIVATE_THREADS (`"68719476736"`) - Allows for creating private threads
        - USE_EXTERNAL_STICKERS (`"137438953472"`) - Allows the usage of custom stickers from other servers
        - SEND_MESSAGES_IN_THREADS (`"274877906944"`) - Allows for sending messages in threads
        - USE_EMBEDDED_ACTIVITIES (`"549755813888"`) - Allows for using Activities (applications with the `EMBEDDED` flag) in a voice channel
        - MODERATE_MEMBERS (`"1099511627776"`) - Allows for timing out users to prevent them from sending or reacting to messages in chat and threads, and from speaking in voice and stage channels
      externalDocs:
        url: https://discord.com/developers/docs/topics/permissions#permissions-bitwise-permission-flags
    InstallParams:
      type: object
      properties:
        scopes:
          type: array
          items:
            $ref: "#/components/schemas/OAuth2Scopes"
          description: the [scopes](#DOCS_TOPICS_OAUTH2/shared-resources-oauth2-scopes) to add the application to the server with
        permissions:
          type: string
          format: uint64
          description: the [permissions](https://discord.com/developers/docs/topics/permissions) to request for the bot role
      required:
        - scopes
        - permissions
      externalDocs:
        url: https://discord.com/developers/docs/resources/application#install-params-object-install-params-structure
    Application:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the app
        name:
          type: string
          description: the name of the app
        icon:
          type: string
          nullable: true
          description: the [icon hash](https://discord.com/developers/docs/reference#image-formatting) of the app
        description:
          type: string
          description: the description of the app
        rpc_origins:
          type: array
          items:
            type: string
          description: an array of rpc origin urls, if rpc is enabled
        bot_public:
          type: boolean
          description: when false only app owner can join the app's bot to guilds
        bot_require_code_grant:
          type: boolean
          description: when true the app's bot will only join upon completion of the full oauth2 code grant flow
        terms_of_service_url:
          type: string
          description: the url of the app's terms of service
        privacy_policy_url:
          type: string
          description: the url of the app's privacy policy
        owner:
          allOf:
            - $ref: "#/components/schemas/ApplicationOwner"
          description: partial user object containing info on the owner of the application
        summary:
          type: string
          deprecated: true
          description: "**deprecated and will be removed in v11.** An empty string."
        verify_key:
          type: string
          description: the hex encoded key for verification in interactions and the GameSDK's [GetTicket](https://discord.com/developers/docs/game-sdk/applications#getticket)
        team:
          allOf:
            - $ref: "#/components/schemas/Team"
          nullable: true
          description: if the application belongs to a team, this will be a list of the members of that team
        guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: if this application is a game sold on Discord, this field will be the guild to which it has been linked
        primary_sku_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: if this application is a game sold on Discord, this field will be the id of the "Game SKU" that is created, if exists
        slug:
          type: string
          description: if this application is a game sold on Discord, this field will be the URL slug that links to the store page
        cover_image:
          type: string
          description: the application's default rich presence invite [cover image hash](https://discord.com/developers/docs/reference#image-formatting)
        flags:
          type: integer
          description: the application's public [flags](https://discord.com/developers/docs/resources/application#application-object-application-flags)
        tags:
          type: array
          items:
            type: string
          description: up to 5 tags describing the content and functionality of the application
        install_params:
          allOf:
            - $ref: "#/components/schemas/InstallParams"
          description: settings for the application's default in-app authorization link, if enabled
        custom_install_url:
          type: string
          description: the application's default custom authorization link, if enabled
      required:
        - id
        - name
        - icon
        - description
        - bot_public
        - bot_require_code_grant
        - summary
        - verify_key
        - team
      externalDocs:
        url: https://discord.com/developers/docs/resources/application#application-object-application-structure
    Achievement:
      type: object
      properties:
        application_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: Unique ID of the application
        name:
          type: string
          description: Name of the achievement
        name_localizations:
          type: object
          properties:
            da:
              type: string
            de:
              type: string
            en-GB:
              type: string
            en-US:
              type: string
            es-ES:
              type: string
            fr:
              type: string
            hr:
              type: string
            it:
              type: string
            lt:
              type: string
            hu:
              type: string
            nl:
              type: string
            no:
              type: string
            pl:
              type: string
            pt-BR:
              type: string
            ro:
              type: string
            fi:
              type: string
            sv-SE:
              type: string
            vi:
              type: string
            tr:
              type: string
            cs:
              type: string
            el:
              type: string
            bg:
              type: string
            ru:
              type: string
            uk:
              type: string
            hi:
              type: string
            th:
              type: string
            zh-CN:
              type: string
            ja:
              type: string
            zh-TW:
              type: string
            ko:
              type: string
          nullable: true
          description: Localization dictionary for the `name` field
        description:
          type: string
          description: Description of the achievement
        description_localizations:
          type: object
          properties:
            da:
              type: string
            de:
              type: string
            en-GB:
              type: string
            en-US:
              type: string
            es-ES:
              type: string
            fr:
              type: string
            hr:
              type: string
            it:
              type: string
            lt:
              type: string
            hu:
              type: string
            nl:
              type: string
            no:
              type: string
            pl:
              type: string
            pt-BR:
              type: string
            ro:
              type: string
            fi:
              type: string
            sv-SE:
              type: string
            vi:
              type: string
            tr:
              type: string
            cs:
              type: string
            el:
              type: string
            bg:
              type: string
            ru:
              type: string
            uk:
              type: string
            hi:
              type: string
            th:
              type: string
            zh-CN:
              type: string
            ja:
              type: string
            zh-TW:
              type: string
            ko:
              type: string
          nullable: true
          description: Localization dictionary for the `description` field
        secret:
          type: boolean
          description: If the achievement is secret
        secure:
          type: boolean
          description: If the achievement is secure
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: Unique ID of the achievement
        icon_hash:
          type: string
          description: "[Hash of the icon](https://discord.com/developers/docs/reference#image-formatting)"
      required:
        - application_id
        - name
        - name_localizations
        - description
        - description_localizations
        - secret
        - secure
        - id
        - icon_hash
      externalDocs:
        url: https://discord.com/developers/docs/game-sdk/achievements#data-models-achievement-struct
    ApplicationCommandTypes:
      type: integer
      enum:
        - 1
        - 2
        - 3
      x-enumNames:
        - CHAT_INPUT
        - USER
        - MESSAGE
      x-enum-varnames:
        - CHAT_INPUT
        - USER
        - MESSAGE
      x-ms-enum:
        - CHAT_INPUT
        - USER
        - MESSAGE
      description: |-
        - CHAT_INPUT (`1`) - Slash commands; a text-based command that shows up when a user types `/`
        - USER (`2`) - A UI-based command that shows up when you right click or tap on a user
        - MESSAGE (`3`) - A UI-based command that shows up when you right click or tap on a message
      externalDocs:
        url: https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-types
    ApplicationCommandOptionType:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
      x-enumNames:
        - SUB_COMMAND
        - SUB_COMMAND_GROUP
        - STRING
        - INTEGER
        - BOOLEAN
        - USER
        - CHANNEL
        - ROLE
        - MENTIONABLE
        - NUMBER
        - ATTACHMENT
      x-enum-varnames:
        - SUB_COMMAND
        - SUB_COMMAND_GROUP
        - STRING
        - INTEGER
        - BOOLEAN
        - USER
        - CHANNEL
        - ROLE
        - MENTIONABLE
        - NUMBER
        - ATTACHMENT
      x-ms-enum:
        - SUB_COMMAND
        - SUB_COMMAND_GROUP
        - STRING
        - INTEGER
        - BOOLEAN
        - USER
        - CHANNEL
        - ROLE
        - MENTIONABLE
        - NUMBER
        - ATTACHMENT
      description: |-
        - SUB_COMMAND (`1`)
        - SUB_COMMAND_GROUP (`2`)
        - STRING (`3`)
        - INTEGER (`4`) - Any integer between -2^53 and 2^53
        - BOOLEAN (`5`)
        - USER (`6`)
        - CHANNEL (`7`) - Includes all channel types + categories
        - ROLE (`8`)
        - MENTIONABLE (`9`) - Includes users and roles
        - NUMBER (`10`) - Any double between -2^53 and 2^53
        - ATTACHMENT (`11`) - [attachment](https://discord.com/developers/docs/resources/channel#attachment-object) object
      externalDocs:
        url: https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-option-type
    ApplicationCommandOptionChoice:
      type: object
      properties:
        name:
          type: string
          description: 1-100 character choice name
        name_localizations:
          type: object
          properties:
            da:
              type: string
            de:
              type: string
            en-GB:
              type: string
            en-US:
              type: string
            es-ES:
              type: string
            fr:
              type: string
            hr:
              type: string
            it:
              type: string
            lt:
              type: string
            hu:
              type: string
            nl:
              type: string
            no:
              type: string
            pl:
              type: string
            pt-BR:
              type: string
            ro:
              type: string
            fi:
              type: string
            sv-SE:
              type: string
            vi:
              type: string
            tr:
              type: string
            cs:
              type: string
            el:
              type: string
            bg:
              type: string
            ru:
              type: string
            uk:
              type: string
            hi:
              type: string
            th:
              type: string
            zh-CN:
              type: string
            ja:
              type: string
            zh-TW:
              type: string
            ko:
              type: string
          nullable: true
          description: Localization dictionary for the `name` field. Values follow the same restrictions as `name`
        value:
          oneOf:
            - type: string
            - type: integer
            - type: number
          description: Value for the choice, up to 100 characters if string
      required:
        - name
        - value
      externalDocs:
        url: https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-option-choice-structure
    ApplicationCommandOption:
      type: object
      properties:
        type:
          allOf:
            - $ref: "#/components/schemas/ApplicationCommandOptionType"
          description: Type of option
        name:
          type: string
          description: "[1-32 character name](https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-naming)"
        name_localizations:
          type: object
          properties:
            da:
              type: string
            de:
              type: string
            en-GB:
              type: string
            en-US:
              type: string
            es-ES:
              type: string
            fr:
              type: string
            hr:
              type: string
            it:
              type: string
            lt:
              type: string
            hu:
              type: string
            nl:
              type: string
            no:
              type: string
            pl:
              type: string
            pt-BR:
              type: string
            ro:
              type: string
            fi:
              type: string
            sv-SE:
              type: string
            vi:
              type: string
            tr:
              type: string
            cs:
              type: string
            el:
              type: string
            bg:
              type: string
            ru:
              type: string
            uk:
              type: string
            hi:
              type: string
            th:
              type: string
            zh-CN:
              type: string
            ja:
              type: string
            zh-TW:
              type: string
            ko:
              type: string
          nullable: true
          description: Localization dictionary for the `name` field. Values follow the same restrictions as `name`
        description:
          type: string
          description: 1-100 character description
        description_localizations:
          type: object
          properties:
            da:
              type: string
            de:
              type: string
            en-GB:
              type: string
            en-US:
              type: string
            es-ES:
              type: string
            fr:
              type: string
            hr:
              type: string
            it:
              type: string
            lt:
              type: string
            hu:
              type: string
            nl:
              type: string
            no:
              type: string
            pl:
              type: string
            pt-BR:
              type: string
            ro:
              type: string
            fi:
              type: string
            sv-SE:
              type: string
            vi:
              type: string
            tr:
              type: string
            cs:
              type: string
            el:
              type: string
            bg:
              type: string
            ru:
              type: string
            uk:
              type: string
            hi:
              type: string
            th:
              type: string
            zh-CN:
              type: string
            ja:
              type: string
            zh-TW:
              type: string
            ko:
              type: string
          nullable: true
          description: Localization dictionary for the `description` field. Values follow the same restrictions as `description`
        required:
          type: boolean
          description: If the parameter is required or optional--default `false`
        choices:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationCommandOptionChoice"
          description: Choices for `STRING`, `INTEGER`, and `NUMBER` types for the user to pick from, max 25
        options:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationCommandOption"
          description: If the option is a subcommand or subcommand group type, these nested options will be the parameters
        channel_types:
          type: array
          items:
            $ref: "#/components/schemas/ChannelTypes"
          description: If the option is a channel type, the channels shown will be restricted to these types
        min_value:
          type: number
          description: |-
            integer for `INTEGER` options, double for `NUMBER` options

            If the option is an `INTEGER` or `NUMBER` type, the minimum value permitted
        max_value:
          type: number
          description: |-
            integer for `INTEGER` options, double for `NUMBER` options

            If the option is an `INTEGER` or `NUMBER` type, the maximum value permitted
        min_length:
          type: integer
          description: For option type `STRING`, the minimum allowed length (minimum of `0`, maximum of `6000`)
        max_length:
          type: integer
          description: For option type `STRING`, the maximum allowed length (minimum of `1`, maximum of `6000`)
        autocomplete:
          type: boolean
          description: If autocomplete interactions are enabled for this `STRING`, `INTEGER`, or `NUMBER` type option
      required:
        - type
        - name
        - description
      externalDocs:
        url: https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-option-structure
    ChannelTypes:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
      x-enumNames:
        - GUILD_TEXT
        - DM
        - GUILD_VOICE
        - GROUP_DM
        - GUILD_CATEGORY
        - GUILD_ANNOUNCEMENT
        - ANNOUNCEMENT_THREAD
        - PUBLIC_THREAD
        - PRIVATE_THREAD
        - GUILD_STAGE_VOICE
        - GUILD_DIRECTORY
        - GUILD_FORUM\*
      x-enum-varnames:
        - GUILD_TEXT
        - DM
        - GUILD_VOICE
        - GROUP_DM
        - GUILD_CATEGORY
        - GUILD_ANNOUNCEMENT
        - ANNOUNCEMENT_THREAD
        - PUBLIC_THREAD
        - PRIVATE_THREAD
        - GUILD_STAGE_VOICE
        - GUILD_DIRECTORY
        - GUILD_FORUM\*
      x-ms-enum:
        - GUILD_TEXT
        - DM
        - GUILD_VOICE
        - GROUP_DM
        - GUILD_CATEGORY
        - GUILD_ANNOUNCEMENT
        - ANNOUNCEMENT_THREAD
        - PUBLIC_THREAD
        - PRIVATE_THREAD
        - GUILD_STAGE_VOICE
        - GUILD_DIRECTORY
        - GUILD_FORUM\*
      description: |-
        - GUILD_TEXT (`0`) - a text channel within a server
        - DM (`1`) - a direct message between users
        - GUILD_VOICE (`2`) - a voice channel within a server
        - GROUP_DM (`3`) - a direct message between multiple users
        - GUILD_CATEGORY (`4`) - an [organizational category](https://support.discord.com/hc/en-us/articles/115001580171-Channel-Categories-101) that contains up to 50 channels
        - GUILD_ANNOUNCEMENT (`5`) - a channel that [users can follow and crosspost into their own server](https://support.discord.com/hc/en-us/articles/360032008192) (formerly news channels)
        - ANNOUNCEMENT_THREAD (`10`) - a temporary sub-channel within a GUILD_ANNOUNCEMENT channel
        - PUBLIC_THREAD (`11`) - a temporary sub-channel within a GUILD_TEXT channel
        - PRIVATE_THREAD (`12`) - a temporary sub-channel within a GUILD_TEXT channel that is only viewable by those invited and those with the MANAGE_THREADS permission
        - GUILD_STAGE_VOICE (`13`) - a voice channel for [hosting events with an audience](https://support.discord.com/hc/en-us/articles/1500005513722)
        - GUILD_DIRECTORY (`14`) - the channel in a [hub](https://support.discord.com/hc/en-us/articles/4406046651927-Discord-Student-Hubs-FAQ) containing the listed servers
        - GUILD_FORUM (`15`) - (still in development) a channel that can only contain threads
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#channel-object-channel-types
    ApplicationCommand:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: Unique ID of command
        type:
          allOf:
            - $ref: "#/components/schemas/ApplicationCommandTypes"
          description: "[Type of command](https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-types), defaults to `1`"
        application_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: ID of the parent application
        guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: guild id of the command, if not global
        name:
          type: string
          description: "[Name of command](https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-naming), 1-32 characters"
        name_localizations:
          type: object
          properties:
            da:
              type: string
            de:
              type: string
            en-GB:
              type: string
            en-US:
              type: string
            es-ES:
              type: string
            fr:
              type: string
            hr:
              type: string
            it:
              type: string
            lt:
              type: string
            hu:
              type: string
            nl:
              type: string
            no:
              type: string
            pl:
              type: string
            pt-BR:
              type: string
            ro:
              type: string
            fi:
              type: string
            sv-SE:
              type: string
            vi:
              type: string
            tr:
              type: string
            cs:
              type: string
            el:
              type: string
            bg:
              type: string
            ru:
              type: string
            uk:
              type: string
            hi:
              type: string
            th:
              type: string
            zh-CN:
              type: string
            ja:
              type: string
            zh-TW:
              type: string
            ko:
              type: string
          nullable: true
          description: Localization dictionary for `name` field. Values follow the same restrictions as `name`
        description:
          type: string
          description: Description for `CHAT_INPUT` commands, 1-100 characters. Empty string for `USER` and `MESSAGE` commands
        description_localizations:
          type: object
          properties:
            da:
              type: string
            de:
              type: string
            en-GB:
              type: string
            en-US:
              type: string
            es-ES:
              type: string
            fr:
              type: string
            hr:
              type: string
            it:
              type: string
            lt:
              type: string
            hu:
              type: string
            nl:
              type: string
            no:
              type: string
            pl:
              type: string
            pt-BR:
              type: string
            ro:
              type: string
            fi:
              type: string
            sv-SE:
              type: string
            vi:
              type: string
            tr:
              type: string
            cs:
              type: string
            el:
              type: string
            bg:
              type: string
            ru:
              type: string
            uk:
              type: string
            hi:
              type: string
            th:
              type: string
            zh-CN:
              type: string
            ja:
              type: string
            zh-TW:
              type: string
            ko:
              type: string
          nullable: true
          description: Localization dictionary for `description` field. Values follow the same restrictions as `description`
        options:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationCommandOption"
          description: Parameters for the command, max of 25
        default_member_permissions:
          type: string
          format: uint64
          nullable: true
          description: Set of [permissions](https://discord.com/developers/docs/topics/permissions) represented as a bit set
        dm_permission:
          type: boolean
          description: Indicates whether the command is available in DMs with the app, only for globally-scoped commands. By default, commands are visible.
        default_permission:
          type: boolean
          nullable: true
          description: Not recommended for use as field will soon be deprecated. Indicates whether the command is enabled by default when the app is added to a guild, defaults to `true`
        version:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: Autoincrementing version identifier updated during substantial record changes
      required:
        - id
        - application_id
        - name
        - description
        - default_member_permissions
        - version
      externalDocs:
        url: https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-structure
    VoiceRegion:
      type: object
      properties:
        id:
          type: string
          description: unique ID for the region
        name:
          type: string
          description: name of the region
        optimal:
          type: boolean
          description: true for a single server that is closest to the current user's client
        deprecated:
          type: boolean
          description: whether this is a deprecated voice region (avoid switching to these)
        custom:
          type: boolean
          description: whether this is a custom voice region (used for events/etc)
      required:
        - id
        - name
        - optimal
        - deprecated
        - custom
      externalDocs:
        url: https://discord.com/developers/docs/resources/voice#voice-region-object-voice-region-structure
    VerificationLevel:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      x-enumNames:
        - NONE
        - LOW
        - MEDIUM
        - HIGH
        - VERY_HIGH
      x-enum-varnames:
        - NONE
        - LOW
        - MEDIUM
        - HIGH
        - VERY_HIGH
      x-ms-enum:
        - NONE
        - LOW
        - MEDIUM
        - HIGH
        - VERY_HIGH
      description: |-
        - NONE (`0`) - unrestricted
        - LOW (`1`) - must have verified email on account
        - MEDIUM (`2`) - must be registered on Discord for longer than 5 minutes
        - HIGH (`3`) - must be a member of the server for longer than 10 minutes
        - VERY_HIGH (`4`) - must have a verified phone number
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#guild-object-verification-level
    DefaultMessageNotificationLevel:
      type: integer
      enum:
        - 0
        - 1
      x-enumNames:
        - ALL_MESSAGES
        - ONLY_MENTIONS
      x-enum-varnames:
        - ALL_MESSAGES
        - ONLY_MENTIONS
      x-ms-enum:
        - ALL_MESSAGES
        - ONLY_MENTIONS
      description: |-
        - ALL_MESSAGES (`0`) - members will receive notifications for all messages by default
        - ONLY_MENTIONS (`1`) - members will receive notifications only for messages that @mention them by default
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#guild-object-default-message-notification-level
    ExplicitContentFilterLevel:
      type: integer
      enum:
        - 0
        - 1
        - 2
      x-enumNames:
        - DISABLED
        - MEMBERS_WITHOUT_ROLES
        - ALL_MEMBERS
      x-enum-varnames:
        - DISABLED
        - MEMBERS_WITHOUT_ROLES
        - ALL_MEMBERS
      x-ms-enum:
        - DISABLED
        - MEMBERS_WITHOUT_ROLES
        - ALL_MEMBERS
      description: |-
        - DISABLED (`0`) - media content will not be scanned
        - MEMBERS_WITHOUT_ROLES (`1`) - media content sent by members without roles will be scanned
        - ALL_MEMBERS (`2`) - media content sent by all members will be scanned
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#guild-object-explicit-content-filter-level
    RoleTags:
      type: object
      properties:
        bot_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the bot this role belongs to
        integration_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the integration this role belongs to
        premium_subscriber:
          type: object
          enum:
            - null
          description: whether this is the guild's premium subscriber role
      externalDocs:
        url: https://discord.com/developers/docs/topics/permissions#role-object-role-tags-structure
    Role:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: role id
        name:
          type: string
          description: role name
        color:
          type: integer
          description: integer representation of hexadecimal color code
        hoist:
          type: boolean
          description: if this role is pinned in the user listing
        icon:
          type: string
          nullable: true
          description: role [icon hash](https://discord.com/developers/docs/reference#image-formatting)
        unicode_emoji:
          type: string
          nullable: true
          description: role unicode emoji
        position:
          type: integer
          description: position of this role
        permissions:
          type: string
          description: permission bit set
        managed:
          type: boolean
          description: whether this role is managed by an integration
        mentionable:
          type: boolean
          description: whether this role is mentionable
        tags:
          allOf:
            - $ref: "#/components/schemas/RoleTags"
          description: the tags this role has
      required:
        - id
        - name
        - color
        - hoist
        - position
        - permissions
        - managed
        - mentionable
      externalDocs:
        url: https://discord.com/developers/docs/topics/permissions#role-object-role-structure
    Emoji:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: "[emoji id](https://discord.com/developers/docs/reference#image-formatting)"
        name:
          type: string
          nullable: true
          description: emoji name
        roles:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Snowflake"
            description: role id
          description: roles allowed to use this emoji
        user:
          allOf:
            - $ref: "#/components/schemas/User"
          description: user that created this emoji
        require_colons:
          type: boolean
          description: whether this emoji must be wrapped in colons
        managed:
          type: boolean
          description: whether this emoji is managed
        animated:
          type: boolean
          description: whether this emoji is animated
        available:
          type: boolean
          description: whether this emoji can be used, may be false due to loss of Server Boosts
      required:
        - id
        - name
      externalDocs:
        url: https://discord.com/developers/docs/resources/emoji#emoji-object-emoji-structure
    GuildFeatures:
      type: string
      enum:
        - ANIMATED_BANNER
        - ANIMATED_ICON
        - AUTO_MODERATION
        - BANNER
        - COMMUNITY
        - DISCOVERABLE
        - FEATURABLE
        - INVITES_DISABLED
        - INVITE_SPLASH
        - MEMBER_VERIFICATION_GATE_ENABLED
        - MONETIZATION_ENABLED
        - MORE_STICKERS
        - NEWS
        - PARTNERED
        - PREVIEW_ENABLED
        - PRIVATE_THREADS
        - ROLE_ICONS
        - TICKETED_EVENTS_ENABLED
        - VANITY_URL
        - VERIFIED
        - VIP_REGIONS
        - WELCOME_SCREEN_ENABLED
      x-enumNames:
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
      x-enum-varnames:
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
      x-ms-enum:
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
      description: |-
        - "ANIMATED_BANNER" - guild has access to set an animated guild banner image
        - "ANIMATED_ICON" - guild has access to set an animated guild icon
        - "AUTO_MODERATION" - guild has set up auto moderation rules
        - "BANNER" - guild has access to set a guild banner image
        - "COMMUNITY" - guild can enable welcome screen, Membership Screening, stage channels and discovery, and receives community updates
        - "DISCOVERABLE" - guild is able to be discovered in the directory
        - "FEATURABLE" - guild is able to be featured in the directory
        - "INVITES_DISABLED" - guild has paused invites, preventing new users from joining
        - "INVITE_SPLASH" - guild has access to set an invite splash background
        - "MEMBER_VERIFICATION_GATE_ENABLED" - guild has enabled [Membership Screening](https://discord.com/developers/docs/resources/guild#membership-screening-object)
        - "MONETIZATION_ENABLED" - guild has enabled monetization
        - "MORE_STICKERS" - guild has increased custom sticker slots
        - "NEWS" - guild has access to create announcement channels
        - "PARTNERED" - guild is partnered
        - "PREVIEW_ENABLED" - guild can be previewed before joining via Membership Screening or the directory
        - "PRIVATE_THREADS" - guild has access to create private threads
        - "ROLE_ICONS" - guild is able to set role icons
        - "TICKETED_EVENTS_ENABLED" - guild has enabled ticketed events
        - "VANITY_URL" - guild has access to set a vanity URL
        - "VERIFIED" - guild is verified
        - "VIP_REGIONS" - guild has access to set 384kbps bitrate in voice (previously VIP voice servers)
        - "WELCOME_SCREEN_ENABLED" - guild has enabled the welcome screen
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#guild-object-guild-features
    MFALevel:
      type: integer
      enum:
        - 0
        - 1
      x-enumNames:
        - NONE
        - ELEVATED
      x-enum-varnames:
        - NONE
        - ELEVATED
      x-ms-enum:
        - NONE
        - ELEVATED
      description: |-
        - NONE (`0`) - guild has no MFA/2FA requirement for moderation actions
        - ELEVATED (`1`) - guild has a 2FA requirement for moderation actions
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#guild-object-mfa-level
    SystemChannelFlags:
      type: integer
      enum:
        - 1
        - 2
        - 4
        - 8
      x-enumNames:
        - SUPPRESS_JOIN_NOTIFICATIONS
        - SUPPRESS_PREMIUM_SUBSCRIPTIONS
        - SUPPRESS_GUILD_REMINDER_NOTIFICATIONS
        - SUPPRESS_JOIN_NOTIFICATION_REPLIES
      x-enum-varnames:
        - SUPPRESS_JOIN_NOTIFICATIONS
        - SUPPRESS_PREMIUM_SUBSCRIPTIONS
        - SUPPRESS_GUILD_REMINDER_NOTIFICATIONS
        - SUPPRESS_JOIN_NOTIFICATION_REPLIES
      x-ms-enum:
        - SUPPRESS_JOIN_NOTIFICATIONS
        - SUPPRESS_PREMIUM_SUBSCRIPTIONS
        - SUPPRESS_GUILD_REMINDER_NOTIFICATIONS
        - SUPPRESS_JOIN_NOTIFICATION_REPLIES
      description: |-
        - SUPPRESS_JOIN_NOTIFICATIONS (`1`) - Suppress member join notifications
        - SUPPRESS_PREMIUM_SUBSCRIPTIONS (`2`) - Suppress server boost notifications
        - SUPPRESS_GUILD_REMINDER_NOTIFICATIONS (`4`) - Suppress server setup tips
        - SUPPRESS_JOIN_NOTIFICATION_REPLIES (`8`) - Hide member join sticker reply buttons
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#guild-object-system-channel-flags
    PremiumTier:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
      x-enumNames:
        - NONE
        - TIER_1
        - TIER_2
        - TIER_3
      x-enum-varnames:
        - NONE
        - TIER_1
        - TIER_2
        - TIER_3
      x-ms-enum:
        - NONE
        - TIER_1
        - TIER_2
        - TIER_3
      description: |-
        - NONE (`0`) - guild has not unlocked any Server Boost perks
        - TIER_1 (`1`) - guild has unlocked Server Boost level 1 perks
        - TIER_2 (`2`) - guild has unlocked Server Boost level 2 perks
        - TIER_3 (`3`) - guild has unlocked Server Boost level 3 perks
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#guild-object-premium-tier
    WelcomeScreenChannel:
      type: object
      properties:
        channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the channel's id
        description:
          type: string
          description: the description shown for the channel
        emoji_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the [emoji id](https://discord.com/developers/docs/reference#image-formatting), if the emoji is custom
        emoji_name:
          type: string
          nullable: true
          description: the emoji name if custom, the unicode character if standard, or `null` if no emoji is set
      required:
        - channel_id
        - description
        - emoji_id
        - emoji_name
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#welcome-screen-object-welcome-screen-channel-structure
    WelcomeScreen:
      type: object
      properties:
        description:
          type: string
          nullable: true
          description: the server description shown in the welcome screen
        welcome_channels:
          type: array
          items:
            $ref: "#/components/schemas/WelcomeScreenChannel"
          description: the channels shown in the welcome screen, up to 5
      required:
        - description
        - welcome_channels
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#welcome-screen-object-welcome-screen-structure
    GuildNSFWLevel:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
      x-enumNames:
        - DEFAULT
        - EXPLICIT
        - SAFE
        - AGE_RESTRICTED
      x-enum-varnames:
        - DEFAULT
        - EXPLICIT
        - SAFE
        - AGE_RESTRICTED
      x-ms-enum:
        - DEFAULT
        - EXPLICIT
        - SAFE
        - AGE_RESTRICTED
      description: |-
        - DEFAULT (`0`)
        - EXPLICIT (`1`)
        - SAFE (`2`)
        - AGE_RESTRICTED (`3`)
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#guild-object-guild-nsfw-level
    StickerTypes:
      type: integer
      enum:
        - 1
        - 2
      x-enumNames:
        - STANDARD
        - GUILD
      x-enum-varnames:
        - STANDARD
        - GUILD
      x-ms-enum:
        - STANDARD
        - GUILD
      description: |-
        - STANDARD (`1`) - an official sticker in a pack, part of Nitro or in a removed purchasable pack
        - GUILD (`2`) - a sticker uploaded to a guild for the guild's members
      externalDocs:
        url: https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-types
    StickerFormatTypes:
      type: integer
      enum:
        - 1
        - 2
        - 3
      x-enumNames:
        - PNG
        - APNG
        - LOTTIE
      x-enum-varnames:
        - PNG
        - APNG
        - LOTTIE
      x-ms-enum:
        - PNG
        - APNG
        - LOTTIE
      description: |-
        - PNG (`1`)
        - APNG (`2`)
        - LOTTIE (`3`)
      externalDocs:
        url: https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-format-types
    Sticker:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: "[id of the sticker](https://discord.com/developers/docs/reference#image-formatting)"
        pack_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: for standard stickers, id of the pack the sticker is from
        name:
          type: string
          description: name of the sticker
        description:
          type: string
          nullable: true
          description: description of the sticker
        tags:
          type: string
          description: autocomplete/suggestion tags for the sticker (max 200 characters)
        asset:
          type: string
          description: "**Deprecated** previously the sticker asset hash, now an empty string"
        type:
          allOf:
            - $ref: "#/components/schemas/StickerTypes"
          description: "[type of sticker](https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-types)"
        format_type:
          allOf:
            - $ref: "#/components/schemas/StickerFormatTypes"
          description: "[type of sticker format](https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-format-types)"
        available:
          type: boolean
          description: whether this guild sticker can be used, may be false due to loss of Server Boosts
        guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of the guild that owns this sticker
        user:
          allOf:
            - $ref: "#/components/schemas/User"
          description: the user that uploaded the guild sticker
        sort_value:
          type: integer
          description: the standard sticker's sort order within its pack
      required:
        - id
        - name
        - description
        - tags
        - type
        - format_type
      externalDocs:
        url: https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-structure
    Guild:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: guild id
        name:
          type: string
          description: guild name (2-100 characters, excluding trailing and leading whitespace)
        icon:
          type: string
          nullable: true
          description: "[icon hash](https://discord.com/developers/docs/reference#image-formatting)"
        icon_hash:
          type: string
          nullable: true
          description: "[icon hash](https://discord.com/developers/docs/reference#image-formatting), returned when in the template object"
        splash:
          type: string
          nullable: true
          description: "[splash hash](https://discord.com/developers/docs/reference#image-formatting)"
        discovery_splash:
          type: string
          nullable: true
          description: '[discovery splash hash](https://discord.com/developers/docs/reference#image-formatting); only present for guilds with the "DISCOVERABLE" feature'
        owner:
          type: boolean
          description: true if [the user](https://discord.com/developers/docs/resources/user#get-current-user-guilds) is the owner of the guild
        owner_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of owner
        permissions:
          type: string
          description: total permissions for [the user](https://discord.com/developers/docs/resources/user#get-current-user-guilds) in the guild (excludes overwrites)
        region:
          type: string
          nullable: true
          deprecated: true
          description: "[voice region](https://discord.com/developers/docs/resources/voice#voice-region-object) id for the guild (deprecated)"
        afk_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: id of afk channel
        afk_timeout:
          type: integer
          description: afk timeout in seconds
        widget_enabled:
          type: boolean
          description: true if the server widget is enabled
        widget_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the channel id that the widget will generate an invite to, or `null` if set to no invite
        verification_level:
          allOf:
            - $ref: "#/components/schemas/VerificationLevel"
          description: "[verification level](https://discord.com/developers/docs/resources/guild#guild-object-verification-level) required for the guild"
        default_message_notifications:
          allOf:
            - $ref: "#/components/schemas/DefaultMessageNotificationLevel"
          description: default [message notifications level](https://discord.com/developers/docs/resources/guild#guild-object-default-message-notification-level)
        explicit_content_filter:
          allOf:
            - $ref: "#/components/schemas/ExplicitContentFilterLevel"
          description: "[explicit content filter level](https://discord.com/developers/docs/resources/guild#guild-object-explicit-content-filter-level)"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
          description: roles in the guild
        emojis:
          type: array
          items:
            $ref: "#/components/schemas/Emoji"
          description: custom guild emojis
        features:
          type: array
          items:
            $ref: "#/components/schemas/GuildFeatures"
          description: enabled guild features
        mfa_level:
          allOf:
            - $ref: "#/components/schemas/MFALevel"
          description: required [MFA level](https://discord.com/developers/docs/resources/guild#guild-object-mfa-level) for the guild
        application_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: application id of the guild creator if it is bot-created
        system_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the channel where guild notices such as welcome messages and boost events are posted
        system_channel_flags:
          type: integer
          description: "[system channel flags](https://discord.com/developers/docs/resources/guild#guild-object-system-channel-flags)"
        rules_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the channel where Community guilds can display rules and/or guidelines
        max_presences:
          type: integer
          nullable: true
          description: the maximum number of presences for the guild (`null` is always returned, apart from the largest of guilds)
        max_members:
          type: integer
          description: the maximum number of members for the guild
        vanity_url_code:
          type: string
          nullable: true
          description: the vanity url code for the guild
        description:
          type: string
          nullable: true
          description: the description of a guild
        banner:
          type: string
          nullable: true
          description: "[banner hash](https://discord.com/developers/docs/reference#image-formatting)"
        premium_tier:
          allOf:
            - $ref: "#/components/schemas/PremiumTier"
          description: "[premium tier](https://discord.com/developers/docs/resources/guild#guild-object-premium-tier) (Server Boost level)"
        premium_subscription_count:
          type: integer
          description: the number of boosts this guild currently has
        preferred_locale:
          allOf:
            - $ref: "#/components/schemas/Locales"
          description: the preferred [locale](https://discord.com/developers/docs/reference#locales) of a Community guild; used in server discovery and notices from Discord, and sent in interactions; defaults to "en-US"
        public_updates_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the channel where admins and moderators of Community guilds receive notices from Discord
        max_video_channel_users:
          type: integer
          description: the maximum amount of users in a video channel
        approximate_member_count:
          type: integer
          description: approximate number of members in this guild, returned from the `GET /guilds/<id>` endpoint when `with_counts` is `true`
        approximate_presence_count:
          type: integer
          description: approximate number of non-offline members in this guild, returned from the `GET /guilds/<id>` endpoint when `with_counts` is `true`
        welcome_screen:
          allOf:
            - $ref: "#/components/schemas/WelcomeScreen"
          description: the welcome screen of a Community guild, shown to new members, returned in an [Invite](https://discord.com/developers/docs/resources/invite#invite-object)'s guild object
        nsfw_level:
          allOf:
            - $ref: "#/components/schemas/GuildNSFWLevel"
          description: "[guild NSFW level](https://discord.com/developers/docs/resources/guild#guild-object-guild-nsfw-level)"
        stickers:
          type: array
          items:
            $ref: "#/components/schemas/Sticker"
          description: custom guild stickers
        premium_progress_bar_enabled:
          type: boolean
          description: whether the guild has the boost progress bar enabled
      required:
        - id
        - name
        - icon
        - splash
        - discovery_splash
        - owner_id
        - afk_channel_id
        - afk_timeout
        - verification_level
        - default_message_notifications
        - explicit_content_filter
        - roles
        - emojis
        - features
        - mfa_level
        - application_id
        - system_channel_id
        - system_channel_flags
        - rules_channel_id
        - vanity_url_code
        - description
        - banner
        - premium_tier
        - preferred_locale
        - public_updates_channel_id
        - nsfw_level
        - premium_progress_bar_enabled
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#guild-object-guild-structure
    AuditLogEvents:
      type: integer
      enum:
        - 1
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 30
        - 31
        - 32
        - 40
        - 41
        - 42
        - 50
        - 51
        - 52
        - 60
        - 61
        - 62
        - 72
        - 73
        - 74
        - 75
        - 80
        - 81
        - 82
        - 83
        - 84
        - 85
        - 90
        - 91
        - 92
        - 100
        - 101
        - 102
        - 110
        - 111
        - 112
        - 121
        - 140
        - 141
        - 142
        - 143
      x-enumNames:
        - GUILD_UPDATE
        - CHANNEL_CREATE
        - CHANNEL_UPDATE
        - CHANNEL_DELETE
        - CHANNEL_OVERWRITE_CREATE
        - CHANNEL_OVERWRITE_UPDATE
        - CHANNEL_OVERWRITE_DELETE
        - MEMBER_KICK
        - MEMBER_PRUNE
        - MEMBER_BAN_ADD
        - MEMBER_BAN_REMOVE
        - MEMBER_UPDATE
        - MEMBER_ROLE_UPDATE
        - MEMBER_MOVE
        - MEMBER_DISCONNECT
        - BOT_ADD
        - ROLE_CREATE
        - ROLE_UPDATE
        - ROLE_DELETE
        - INVITE_CREATE
        - INVITE_UPDATE
        - INVITE_DELETE
        - WEBHOOK_CREATE
        - WEBHOOK_UPDATE
        - WEBHOOK_DELETE
        - EMOJI_CREATE
        - EMOJI_UPDATE
        - EMOJI_DELETE
        - MESSAGE_DELETE
        - MESSAGE_BULK_DELETE
        - MESSAGE_PIN
        - MESSAGE_UNPIN
        - INTEGRATION_CREATE
        - INTEGRATION_UPDATE
        - INTEGRATION_DELETE
        - STAGE_INSTANCE_CREATE
        - STAGE_INSTANCE_UPDATE
        - STAGE_INSTANCE_DELETE
        - STICKER_CREATE
        - STICKER_UPDATE
        - STICKER_DELETE
        - GUILD_SCHEDULED_EVENT_CREATE
        - GUILD_SCHEDULED_EVENT_UPDATE
        - GUILD_SCHEDULED_EVENT_DELETE
        - THREAD_CREATE
        - THREAD_UPDATE
        - THREAD_DELETE
        - APPLICATION_COMMAND_PERMISSION_UPDATE
        - AUTO_MODERATION_RULE_CREATE
        - AUTO_MODERATION_RULE_UPDATE
        - AUTO_MODERATION_RULE_DELETE
        - AUTO_MODERATION_BLOCK_MESSAGE
      x-enum-varnames:
        - GUILD_UPDATE
        - CHANNEL_CREATE
        - CHANNEL_UPDATE
        - CHANNEL_DELETE
        - CHANNEL_OVERWRITE_CREATE
        - CHANNEL_OVERWRITE_UPDATE
        - CHANNEL_OVERWRITE_DELETE
        - MEMBER_KICK
        - MEMBER_PRUNE
        - MEMBER_BAN_ADD
        - MEMBER_BAN_REMOVE
        - MEMBER_UPDATE
        - MEMBER_ROLE_UPDATE
        - MEMBER_MOVE
        - MEMBER_DISCONNECT
        - BOT_ADD
        - ROLE_CREATE
        - ROLE_UPDATE
        - ROLE_DELETE
        - INVITE_CREATE
        - INVITE_UPDATE
        - INVITE_DELETE
        - WEBHOOK_CREATE
        - WEBHOOK_UPDATE
        - WEBHOOK_DELETE
        - EMOJI_CREATE
        - EMOJI_UPDATE
        - EMOJI_DELETE
        - MESSAGE_DELETE
        - MESSAGE_BULK_DELETE
        - MESSAGE_PIN
        - MESSAGE_UNPIN
        - INTEGRATION_CREATE
        - INTEGRATION_UPDATE
        - INTEGRATION_DELETE
        - STAGE_INSTANCE_CREATE
        - STAGE_INSTANCE_UPDATE
        - STAGE_INSTANCE_DELETE
        - STICKER_CREATE
        - STICKER_UPDATE
        - STICKER_DELETE
        - GUILD_SCHEDULED_EVENT_CREATE
        - GUILD_SCHEDULED_EVENT_UPDATE
        - GUILD_SCHEDULED_EVENT_DELETE
        - THREAD_CREATE
        - THREAD_UPDATE
        - THREAD_DELETE
        - APPLICATION_COMMAND_PERMISSION_UPDATE
        - AUTO_MODERATION_RULE_CREATE
        - AUTO_MODERATION_RULE_UPDATE
        - AUTO_MODERATION_RULE_DELETE
        - AUTO_MODERATION_BLOCK_MESSAGE
      x-ms-enum:
        - GUILD_UPDATE
        - CHANNEL_CREATE
        - CHANNEL_UPDATE
        - CHANNEL_DELETE
        - CHANNEL_OVERWRITE_CREATE
        - CHANNEL_OVERWRITE_UPDATE
        - CHANNEL_OVERWRITE_DELETE
        - MEMBER_KICK
        - MEMBER_PRUNE
        - MEMBER_BAN_ADD
        - MEMBER_BAN_REMOVE
        - MEMBER_UPDATE
        - MEMBER_ROLE_UPDATE
        - MEMBER_MOVE
        - MEMBER_DISCONNECT
        - BOT_ADD
        - ROLE_CREATE
        - ROLE_UPDATE
        - ROLE_DELETE
        - INVITE_CREATE
        - INVITE_UPDATE
        - INVITE_DELETE
        - WEBHOOK_CREATE
        - WEBHOOK_UPDATE
        - WEBHOOK_DELETE
        - EMOJI_CREATE
        - EMOJI_UPDATE
        - EMOJI_DELETE
        - MESSAGE_DELETE
        - MESSAGE_BULK_DELETE
        - MESSAGE_PIN
        - MESSAGE_UNPIN
        - INTEGRATION_CREATE
        - INTEGRATION_UPDATE
        - INTEGRATION_DELETE
        - STAGE_INSTANCE_CREATE
        - STAGE_INSTANCE_UPDATE
        - STAGE_INSTANCE_DELETE
        - STICKER_CREATE
        - STICKER_UPDATE
        - STICKER_DELETE
        - GUILD_SCHEDULED_EVENT_CREATE
        - GUILD_SCHEDULED_EVENT_UPDATE
        - GUILD_SCHEDULED_EVENT_DELETE
        - THREAD_CREATE
        - THREAD_UPDATE
        - THREAD_DELETE
        - APPLICATION_COMMAND_PERMISSION_UPDATE
        - AUTO_MODERATION_RULE_CREATE
        - AUTO_MODERATION_RULE_UPDATE
        - AUTO_MODERATION_RULE_DELETE
        - AUTO_MODERATION_BLOCK_MESSAGE
      description: |-
        - GUILD_UPDATE (`1`) - Server settings were updated - [Guild](https://discord.com/developers/docs/resources/guild#guild-object)
        - CHANNEL_CREATE (`10`) - Channel was created - [Channel](https://discord.com/developers/docs/resources/channel#channel-object)
        - CHANNEL_UPDATE (`11`) - Channel settings were updated - [Channel](https://discord.com/developers/docs/resources/channel#channel-object)
        - CHANNEL_DELETE (`12`) - Channel was deleted - [Channel](https://discord.com/developers/docs/resources/channel#channel-object)
        - CHANNEL_OVERWRITE_CREATE (`13`) - Permission overwrite was added to a channel - [Channel Overwrite](https://discord.com/developers/docs/resources/channel#overwrite-object)
        - CHANNEL_OVERWRITE_UPDATE (`14`) - Permission overwrite was updated for a channel - [Channel Overwrite](https://discord.com/developers/docs/resources/channel#overwrite-object)
        - CHANNEL_OVERWRITE_DELETE (`15`) - Permission overwrite was deleted from a channel - [Channel Overwrite](https://discord.com/developers/docs/resources/channel#overwrite-object)
        - MEMBER_KICK (`20`) - Member was removed from server
        - MEMBER_PRUNE (`21`) - Members were pruned from server
        - MEMBER_BAN_ADD (`22`) - Member was banned from server
        - MEMBER_BAN_REMOVE (`23`) - Server ban was lifted for a member
        - MEMBER_UPDATE (`24`) - Member was updated in server - [Member](https://discord.com/developers/docs/resources/guild#guild-member-object)
        - MEMBER_ROLE_UPDATE (`25`) - Member was added or removed from a role - [Partial Role](https://discord.com/developers/docs/topics/permissions#role-object)\*
        - MEMBER_MOVE (`26`) - Member was moved to a different voice channel
        - MEMBER_DISCONNECT (`27`) - Member was disconnected from a voice channel
        - BOT_ADD (`28`) - Bot user was added to server
        - ROLE_CREATE (`30`) - Role was created - [Role](https://discord.com/developers/docs/topics/permissions#role-object)
        - ROLE_UPDATE (`31`) - Role was edited - [Role](https://discord.com/developers/docs/topics/permissions#role-object)
        - ROLE_DELETE (`32`) - Role was deleted - [Role](https://discord.com/developers/docs/topics/permissions#role-object)
        - INVITE_CREATE (`40`) - Server invite was created - [Invite](https://discord.com/developers/docs/resources/invite#invite-object) and [Invite Metadata](https://discord.com/developers/docs/resources/invite#invite-metadata-object)*
        - INVITE_UPDATE (`41`) - Server invite was updated - [Invite](https://discord.com/developers/docs/resources/invite#invite-object) and [Invite Metadata](https://discord.com/developers/docs/resources/invite#invite-metadata-object)*
        - INVITE_DELETE (`42`) - Server invite was deleted - [Invite](https://discord.com/developers/docs/resources/invite#invite-object) and [Invite Metadata](https://discord.com/developers/docs/resources/invite#invite-metadata-object)*
        - WEBHOOK_CREATE (`50`) - Webhook was created - [Webhook](https://discord.com/developers/docs/resources/webhook#webhook-object)\*
        - WEBHOOK_UPDATE (`51`) - Webhook properties or channel were updated - [Webhook](https://discord.com/developers/docs/resources/webhook#webhook-object)\*
        - WEBHOOK_DELETE (`52`) - Webhook was deleted - [Webhook](https://discord.com/developers/docs/resources/webhook#webhook-object)\*
        - EMOJI_CREATE (`60`) - Emoji was created - [Emoji](https://discord.com/developers/docs/resources/emoji#emoji-object)
        - EMOJI_UPDATE (`61`) - Emoji name was updated - [Emoji](https://discord.com/developers/docs/resources/emoji#emoji-object)
        - EMOJI_DELETE (`62`) - Emoji was deleted - [Emoji](https://discord.com/developers/docs/resources/emoji#emoji-object)
        - MESSAGE_DELETE (`72`) - Single message was deleted
        - MESSAGE_BULK_DELETE (`73`) - Multiple messages were deleted
        - MESSAGE_PIN (`74`) - Message was pinned to a channel
        - MESSAGE_UNPIN (`75`) - Message was unpinned from a channel
        - INTEGRATION_CREATE (`80`) - App was added to server - [Integration](https://discord.com/developers/docs/resources/guild#integration-object)
        - INTEGRATION_UPDATE (`81`) - App was updated (as an example, its scopes were updated) - [Integration](https://discord.com/developers/docs/resources/guild#integration-object)
        - INTEGRATION_DELETE (`82`) - App was removed from server - [Integration](https://discord.com/developers/docs/resources/guild#integration-object)
        - STAGE_INSTANCE_CREATE (`83`) - Stage instance was created (stage channel becomes live) - [Stage Instance](https://discord.com/developers/docs/resources/stage-instance#stage-instance-object)
        - STAGE_INSTANCE_UPDATE (`84`) - Stage instance details were updated - [Stage Instance](https://discord.com/developers/docs/resources/stage-instance#stage-instance-object)
        - STAGE_INSTANCE_DELETE (`85`) - Stage instance was deleted (stage channel no longer live) - [Stage Instance](https://discord.com/developers/docs/resources/stage-instance#stage-instance-object)
        - STICKER_CREATE (`90`) - Sticker was created - [Sticker](https://discord.com/developers/docs/resources/sticker#sticker-object)
        - STICKER_UPDATE (`91`) - Sticker details were updated - [Sticker](https://discord.com/developers/docs/resources/sticker#sticker-object)
        - STICKER_DELETE (`92`) - Sticker was deleted - [Sticker](https://discord.com/developers/docs/resources/sticker#sticker-object)
        - GUILD_SCHEDULED_EVENT_CREATE (`100`) - Event was created - [Guild Scheduled Event](https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object)
        - GUILD_SCHEDULED_EVENT_UPDATE (`101`) - Event was updated - [Guild Scheduled Event](https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object)
        - GUILD_SCHEDULED_EVENT_DELETE (`102`) - Event was cancelled - [Guild Scheduled Event](https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object)
        - THREAD_CREATE (`110`) - Thread was created in a channel - [Thread](https://discord.com/developers/docs/resources/channel#thread-metadata-object)
        - THREAD_UPDATE (`111`) - Thread was updated - [Thread](https://discord.com/developers/docs/resources/channel#thread-metadata-object)
        - THREAD_DELETE (`112`) - Thread was deleted - [Thread](https://discord.com/developers/docs/resources/channel#thread-metadata-object)
        - APPLICATION_COMMAND_PERMISSION_UPDATE (`121`) - Permissions were updated for a command - [Command Permission](https://discord.com/developers/docs/interactions/application-commands#application-command-permissions-object-application-command-permissions-structure)\*
        - AUTO_MODERATION_RULE_CREATE (`140`) - Auto Moderation rule was created - [Auto Moderation Rule](https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object)
        - AUTO_MODERATION_RULE_UPDATE (`141`) - Auto Moderation rule was updated - [Auto Moderation Rule](https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object)
        - AUTO_MODERATION_RULE_DELETE (`142`) - Auto Moderation rule was deleted - [Auto Moderation Rule](https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object)
        - AUTO_MODERATION_BLOCK_MESSAGE (`143`) - Message was blocked by AutoMod (according to a rule)
      externalDocs:
        url: https://discord.com/developers/docs/resources/audit-log#audit-log-entry-object-audit-log-events
    EventTypes:
      type: integer
      enum:
        - 1
      x-enumNames:
        - MESSAGE_SEND
      x-enum-varnames:
        - MESSAGE_SEND
      x-ms-enum:
        - MESSAGE_SEND
      description: "- MESSAGE_SEND (`1`) - when a member sends or edits a message in the guild"
      externalDocs:
        url: https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object-event-types
    TriggerTypes:
      type: integer
      enum:
        - 1
        - 3
        - 4
        - 5
      x-enumNames:
        - KEYWORD
        - SPAM
        - KEYWORD_PRESET
        - MENTION_SPAM
      x-enum-varnames:
        - KEYWORD
        - SPAM
        - KEYWORD_PRESET
        - MENTION_SPAM
      x-ms-enum:
        - KEYWORD
        - SPAM
        - KEYWORD_PRESET
        - MENTION_SPAM
      description: |-
        - KEYWORD (`1`) - check if content contains words from a user defined list of keywords
        - SPAM (`3`) - check if content represents generic spam
        - KEYWORD_PRESET (`4`) - check if content contains words from internal pre-defined wordsets
        - MENTION_SPAM (`5`) - check if content contains more mentions than allowed
      externalDocs:
        url: https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object-trigger-types
    ActionTypes:
      type: integer
      enum:
        - 1
        - 2
        - 3
      x-enumNames:
        - BLOCK_MESSAGE
        - SEND_ALERT_MESSAGE
        - TIMEOUT
      x-enum-varnames:
        - BLOCK_MESSAGE
        - SEND_ALERT_MESSAGE
        - TIMEOUT
      x-ms-enum:
        - BLOCK_MESSAGE
        - SEND_ALERT_MESSAGE
        - TIMEOUT
      description: |-
        - BLOCK_MESSAGE (`1`) - blocks the content of a message according to the rule
        - SEND_ALERT_MESSAGE (`2`) - logs user content to a specified channel
        - TIMEOUT (`3`) - timeout user for a specified duration *
      externalDocs:
        url: https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-action-object-action-types
    ActionMetadata:
      type: object
      properties:
        channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: SEND_ALERT_MESSAGE - channel to which user content should be logged
        duration_seconds:
          type: integer
          description: TIMEOUT - timeout duration in seconds *
      externalDocs:
        url: https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-action-object-action-metadata
    AutoModerationAction:
      type: object
      properties:
        type:
          allOf:
            - $ref: "#/components/schemas/ActionTypes"
          description: the type of action
        metadata:
          allOf:
            - $ref: "#/components/schemas/ActionMetadata"
          description: additional metadata needed during execution for this specific action type
      required:
        - type
      externalDocs:
        url: https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-action-object-auto-moderation-action-structure
    AutoModerationRule:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of this rule
        guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the guild which this rule belongs to
        name:
          type: string
          description: the rule name
        creator_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the user which first created this rule
        event_type:
          allOf:
            - $ref: "#/components/schemas/EventTypes"
          description: the rule [event type](https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object-event-types)
        trigger_type:
          allOf:
            - $ref: "#/components/schemas/TriggerTypes"
          description: the rule [trigger type](https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object-trigger-types)
        trigger_metadata:
          type: object
          additionalProperties: true
          description: the rule [trigger metadata](https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object-trigger-metadata)
        actions:
          type: array
          items:
            $ref: "#/components/schemas/AutoModerationAction"
          description: the actions which will execute when the rule is triggered
        enabled:
          type: boolean
          description: whether the rule is enabled
        exempt_roles:
          type: array
          items:
            $ref: "#/components/schemas/Snowflake"
          description: the role ids that should not be affected by the rule (Maximum of 20)
        exempt_channels:
          type: array
          items:
            $ref: "#/components/schemas/Snowflake"
          description: the channel ids that should not be affected by the rule (Maximum of 50)
      required:
        - id
        - guild_id
        - name
        - creator_id
        - event_type
        - trigger_type
        - trigger_metadata
        - actions
        - enabled
        - exempt_roles
        - exempt_channels
      externalDocs:
        url: https://discord.com/developers/docs/resources/auto-moderation#auto-moderation-rule-object-auto-moderation-rule-structure
    Overwrite:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: role or user id
        type:
          type: integer
          description: either 0 (role) or 1 (member)
        allow:
          type: string
          description: permission bit set
        deny:
          type: string
          description: permission bit set
      required:
        - id
        - type
        - allow
        - deny
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#overwrite-object-overwrite-structure
    ISO8601DateTime:
      type: string
      format: date-time
      externalDocs:
        url: https://discord.com/developers/docs/reference#iso8601-datetime
    VideoQualityModes:
      type: integer
      enum:
        - 1
        - 2
      x-enumNames:
        - AUTO
        - FULL
      x-enum-varnames:
        - AUTO
        - FULL
      x-ms-enum:
        - AUTO
        - FULL
      description: |-
        - AUTO (`1`) - Discord chooses the quality for optimal performance
        - FULL (`2`) - 720p
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#channel-object-video-quality-modes
    ThreadMetadata:
      type: object
      properties:
        archived:
          type: boolean
          description: whether the thread is archived
        auto_archive_duration:
          type: integer
          description: "the thread will stop showing in the channel list after `auto_archive_duration` minutes of inactivity, can be set to: 60, 1440, 4320, 10080"
        archive_timestamp:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          description: timestamp when the thread's archive status was last changed, used for calculating recent activity
        locked:
          type: boolean
          description: whether the thread is locked; when a thread is locked, only users with MANAGE_THREADS can unarchive it
        invitable:
          type: boolean
          description: whether non-moderators can add other non-moderators to a thread; only available on private threads
        create_timestamp:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          nullable: true
          description: timestamp when the thread was created; only populated for threads created after 2022-01-09
      required:
        - archived
        - auto_archive_duration
        - archive_timestamp
        - locked
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#thread-metadata-object-thread-metadata-structure
    ThreadMember:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the thread
        user_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the user
        join_timestamp:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          description: the time the current user last joined the thread
        flags:
          type: integer
          description: any user-thread settings, currently only used for notifications
      required:
        - join_timestamp
        - flags
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#thread-member-object-thread-member-structure
    ChannelFlags:
      type: integer
      enum:
        - 2
        - 16
      x-enumNames:
        - PINNED
        - REQUIRE_TAG
      x-enum-varnames:
        - PINNED
        - REQUIRE_TAG
      x-ms-enum:
        - PINNED
        - REQUIRE_TAG
      description: |-
        - PINNED (`2`) - this thread is pinned to the top of its parent `GUILD_FORUM` channel
        - REQUIRE_TAG (`16`) - whether a tag is required to be specified when creating a thread in a `GUILD_FORUM` channel. Tags are specified in the `applied_tags` field.
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#channel-object-channel-flags
    ForumTag:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the tag
        name:
          type: string
          description: the name of the tag (0-20 characters)
        moderated:
          type: boolean
          description: whether this tag can only be added to or removed from threads by a member with the `MANAGE_THREADS` permission
        emoji_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of a guild's custom emoji \*
        emoji_name:
          type: string
          nullable: true
          description: the unicode character of the emoji \*
      required:
        - id
        - name
        - moderated
        - emoji_id
        - emoji_name
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#forum-tag-object-forum-tag-structure
    DefaultReaction:
      type: object
      properties:
        emoji_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of a guild's custom emoji
        emoji_name:
          type: string
          nullable: true
          description: the unicode character of the emoji
      required:
        - emoji_id
        - emoji_name
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#default-reaction-object-default-reaction-structure
    Channel:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of this channel
        type:
          allOf:
            - $ref: "#/components/schemas/ChannelTypes"
          description: the [type of channel](https://discord.com/developers/docs/resources/channel#channel-object-channel-types)
        guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the guild (may be missing for some channel objects received over gateway guild dispatches)
        position:
          type: integer
          description: sorting position of the channel
        permission_overwrites:
          type: array
          items:
            $ref: "#/components/schemas/Overwrite"
          description: explicit permission overwrites for members and roles
        name:
          type: string
          nullable: true
          description: the name of the channel (1-100 characters)
        topic:
          type: string
          nullable: true
          description: the channel topic (0-4096 characters for `GUILD_FORUM` channels, 0-1024 characters for all others)
        nsfw:
          type: boolean
          description: whether the channel is nsfw
        last_message_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the last message sent in this channel (or thread for `GUILD_FORUM` channels) (may not point to an existing or valid message or thread)
        bitrate:
          type: integer
          description: the bitrate (in bits) of the voice channel
        user_limit:
          type: integer
          description: the user limit of the voice channel
        rate_limit_per_user:
          type: integer
          description: amount of seconds a user has to wait before sending another message (0-21600); bots, as well as users with the permission `manage_messages` or `manage_channel`, are unaffected
        recipients:
          type: array
          items:
            $ref: "#/components/schemas/User"
          description: the recipients of the DM
        icon:
          type: string
          nullable: true
          description: icon hash of the group DM
        owner_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of the creator of the group DM or thread
        application_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: application id of the group DM creator if it is bot-created
        parent_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: "for guild channels: id of the parent category for a channel (each parent category can contain up to 50 channels), for threads: id of the text channel this thread was created"
        last_pin_timestamp:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          nullable: true
          description: when the last pinned message was pinned. This may be `null` in events such as `GUILD_CREATE` when a message is not pinned.
        rtc_region:
          type: string
          nullable: true
          description: "[voice region](https://discord.com/developers/docs/resources/voice#voice-region-object) id for the voice channel, automatic when set to null"
        video_quality_mode:
          allOf:
            - $ref: "#/components/schemas/VideoQualityModes"
          description: the camera [video quality mode](https://discord.com/developers/docs/resources/channel#channel-object-video-quality-modes) of the voice channel, 1 when not present
        message_count:
          type: integer
          description: number of messages (not including the initial message or deleted messages) in a thread (if the thread was created before July 1, 2022, it stops counting at 50)
        member_count:
          type: integer
          description: an approximate count of users in a thread, stops counting at 50
        thread_metadata:
          allOf:
            - $ref: "#/components/schemas/ThreadMetadata"
          description: thread-specific fields not needed by other channels
        member:
          allOf:
            - $ref: "#/components/schemas/ThreadMember"
          description: thread member object for the current user, if they have joined the thread, only included on certain API endpoints
        default_auto_archive_duration:
          type: integer
          description: "default duration, copied onto newly created threads, in minutes, threads will stop showing in the channel list after the specified period of inactivity, can be set to: 60, 1440, 4320, 10080"
        permissions:
          type: string
          description: computed permissions for the invoking user in the channel, including overwrites, only included when part of the `resolved` data received on a slash command interaction
        flags:
          type: integer
          description: "[channel flags](https://discord.com/developers/docs/resources/channel#channel-object-channel-flags) combined as a [bitfield](https://en.wikipedia.org/wiki/Bit_field)"
        total_message_sent:
          type: integer
          description: number of messages ever sent in a thread, it's similar to `message_count` on message creation, but will not decrement the number when a message is deleted
        available_tags:
          type: array
          items:
            $ref: "#/components/schemas/ForumTag"
          description: the set of tags that can be used in a `GUILD_FORUM` channel
        applied_tags:
          type: array
          items:
            $ref: "#/components/schemas/Snowflake"
          description: the IDs of the set of tags that have been applied to a thread in a `GUILD_FORUM` channel
        default_reaction_emoji:
          allOf:
            - $ref: "#/components/schemas/DefaultReaction"
          nullable: true
          description: the emoji to show in the add reaction button on a thread in a `GUILD_FORUM` channel
        default_thread_rate_limit_per_user:
          type: integer
          description: the initial `rate_limit_per_user` to set on newly created threads in a channel. this field is copied to the thread at creation time and does not live update.
      required:
        - id
        - type
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#channel-object-channel-structure
    ChannelMention:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of the channel
        guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of the guild containing the channel
        type:
          allOf:
            - $ref: "#/components/schemas/ChannelTypes"
          description: the [type of channel](https://discord.com/developers/docs/resources/channel#channel-object-channel-types)
        name:
          type: string
          description: the name of the channel
      required:
        - id
        - guild_id
        - type
        - name
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#channel-mention-object-channel-mention-structure
    Attachment:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: attachment id
        filename:
          type: string
          description: name of file attached
        description:
          type: string
          description: description for the file (max 1024 characters)
        content_type:
          type: string
          description: the attachment's [media type](https://en.wikipedia.org/wiki/Media_type)
        size:
          type: integer
          description: size of file in bytes
        url:
          type: string
          description: source url of file
        proxy_url:
          type: string
          description: a proxied url of file
        height:
          type: integer
          nullable: true
          description: height of file (if image)
        width:
          type: integer
          nullable: true
          description: width of file (if image)
        ephemeral:
          type: boolean
          description: whether this attachment is ephemeral
      required:
        - id
        - filename
        - size
        - url
        - proxy_url
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#attachment-object-attachment-structure
    EmbedTypes:
      type: string
      enum:
        - rich
        - image
        - video
        - gifv
        - article
        - link
      x-enumNames:
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
      x-enum-varnames:
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
      x-ms-enum:
        - ""
        - ""
        - ""
        - ""
        - ""
        - ""
      description: |-
        - "rich" - generic embed rendered from embed attributes
        - "image" - image embed
        - "video" - video embed
        - "gifv" - animated gif image embed rendered as a video embed
        - "article" - article embed
        - "link" - link embed
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#embed-object-embed-types
    EmbedFooter:
      type: object
      properties:
        text:
          type: string
          description: footer text
        icon_url:
          type: string
          description: url of footer icon (only supports http(s) and attachments)
        proxy_icon_url:
          type: string
          description: a proxied url of footer icon
      required:
        - text
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#embed-object-embed-footer-structure
    EmbedImage:
      type: object
      properties:
        url:
          type: string
          description: source url of image (only supports http(s) and attachments)
        proxy_url:
          type: string
          description: a proxied url of the image
        height:
          type: integer
          description: height of image
        width:
          type: integer
          description: width of image
      required:
        - url
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#embed-object-embed-image-structure
    EmbedThumbnail:
      type: object
      properties:
        url:
          type: string
          description: source url of thumbnail (only supports http(s) and attachments)
        proxy_url:
          type: string
          description: a proxied url of the thumbnail
        height:
          type: integer
          description: height of thumbnail
        width:
          type: integer
          description: width of thumbnail
      required:
        - url
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#embed-object-embed-thumbnail-structure
    EmbedVideo:
      type: object
      properties:
        url:
          type: string
          description: source url of video
        proxy_url:
          type: string
          description: a proxied url of the video
        height:
          type: integer
          description: height of video
        width:
          type: integer
          description: width of video
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#embed-object-embed-video-structure
    EmbedProvider:
      type: object
      properties:
        name:
          type: string
          description: name of provider
        url:
          type: string
          description: url of provider
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#embed-object-embed-provider-structure
    EmbedAuthor:
      type: object
      properties:
        name:
          type: string
          description: name of author
        url:
          type: string
          description: url of author
        icon_url:
          type: string
          description: url of author icon (only supports http(s) and attachments)
        proxy_icon_url:
          type: string
          description: a proxied url of author icon
      required:
        - name
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#embed-object-embed-author-structure
    EmbedField:
      type: object
      properties:
        name:
          type: string
          description: name of the field
        value:
          type: string
          description: value of the field
        inline:
          type: boolean
          description: whether or not this field should display inline
      required:
        - name
        - value
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#embed-object-embed-field-structure
    Embed:
      type: object
      properties:
        title:
          type: string
          description: title of embed
        type:
          allOf:
            - $ref: "#/components/schemas/EmbedTypes"
          description: '[type of embed](https://discord.com/developers/docs/resources/channel#embed-object-embed-types) (always "rich" for webhook embeds)'
        description:
          type: string
          description: description of embed
        url:
          type: string
          description: url of embed
        timestamp:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          description: timestamp of embed content
        color:
          type: integer
          description: color code of the embed
        footer:
          allOf:
            - $ref: "#/components/schemas/EmbedFooter"
          description: footer information
        image:
          allOf:
            - $ref: "#/components/schemas/EmbedImage"
          description: image information
        thumbnail:
          allOf:
            - $ref: "#/components/schemas/EmbedThumbnail"
          description: thumbnail information
        video:
          allOf:
            - $ref: "#/components/schemas/EmbedVideo"
          description: video information
        provider:
          allOf:
            - $ref: "#/components/schemas/EmbedProvider"
          description: provider information
        author:
          allOf:
            - $ref: "#/components/schemas/EmbedAuthor"
          description: author information
        fields:
          type: array
          items:
            $ref: "#/components/schemas/EmbedField"
          description: fields information
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#embed-object-embed-structure
    ReactionEmoji:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: "[emoji id](https://discord.com/developers/docs/reference#image-formatting)"
        name:
          type: string
          nullable: true
          description: emoji name
        roles:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Snowflake"
            description: role id
          description: roles allowed to use this emoji
        user:
          allOf:
            - $ref: "#/components/schemas/User"
          description: user that created this emoji
        require_colons:
          type: boolean
          description: whether this emoji must be wrapped in colons
        managed:
          type: boolean
          description: whether this emoji is managed
        animated:
          type: boolean
          description: whether this emoji is animated
        available:
          type: boolean
          description: whether this emoji can be used, may be false due to loss of Server Boosts
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#reaction-object-reaction-structure
    Reaction:
      type: object
      properties:
        count:
          type: integer
          description: times this emoji has been used to react
        me:
          type: boolean
          description: whether the current user reacted using this emoji
        emoji:
          allOf:
            - $ref: "#/components/schemas/ReactionEmoji"
          description: emoji information
      required:
        - count
        - me
        - emoji
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#reaction-object-reaction-structure
    MessageTypes:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
      x-enumNames:
        - DEFAULT
        - RECIPIENT_ADD
        - RECIPIENT_REMOVE
        - CALL
        - CHANNEL_NAME_CHANGE
        - CHANNEL_ICON_CHANGE
        - CHANNEL_PINNED_MESSAGE
        - USER_JOIN
        - GUILD_BOOST
        - GUILD_BOOST_TIER_1
        - GUILD_BOOST_TIER_2
        - GUILD_BOOST_TIER_3
        - CHANNEL_FOLLOW_ADD
        - GUILD_DISCOVERY_DISQUALIFIED
        - GUILD_DISCOVERY_REQUALIFIED
        - GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING
        - GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING
        - THREAD_CREATED
        - REPLY
        - CHAT_INPUT_COMMAND
        - THREAD_STARTER_MESSAGE
        - GUILD_INVITE_REMINDER
        - CONTEXT_MENU_COMMAND
        - AUTO_MODERATION_ACTION
      x-enum-varnames:
        - DEFAULT
        - RECIPIENT_ADD
        - RECIPIENT_REMOVE
        - CALL
        - CHANNEL_NAME_CHANGE
        - CHANNEL_ICON_CHANGE
        - CHANNEL_PINNED_MESSAGE
        - USER_JOIN
        - GUILD_BOOST
        - GUILD_BOOST_TIER_1
        - GUILD_BOOST_TIER_2
        - GUILD_BOOST_TIER_3
        - CHANNEL_FOLLOW_ADD
        - GUILD_DISCOVERY_DISQUALIFIED
        - GUILD_DISCOVERY_REQUALIFIED
        - GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING
        - GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING
        - THREAD_CREATED
        - REPLY
        - CHAT_INPUT_COMMAND
        - THREAD_STARTER_MESSAGE
        - GUILD_INVITE_REMINDER
        - CONTEXT_MENU_COMMAND
        - AUTO_MODERATION_ACTION
      x-ms-enum:
        - DEFAULT
        - RECIPIENT_ADD
        - RECIPIENT_REMOVE
        - CALL
        - CHANNEL_NAME_CHANGE
        - CHANNEL_ICON_CHANGE
        - CHANNEL_PINNED_MESSAGE
        - USER_JOIN
        - GUILD_BOOST
        - GUILD_BOOST_TIER_1
        - GUILD_BOOST_TIER_2
        - GUILD_BOOST_TIER_3
        - CHANNEL_FOLLOW_ADD
        - GUILD_DISCOVERY_DISQUALIFIED
        - GUILD_DISCOVERY_REQUALIFIED
        - GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING
        - GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING
        - THREAD_CREATED
        - REPLY
        - CHAT_INPUT_COMMAND
        - THREAD_STARTER_MESSAGE
        - GUILD_INVITE_REMINDER
        - CONTEXT_MENU_COMMAND
        - AUTO_MODERATION_ACTION
      description: |-
        - DEFAULT (`0`)
        - RECIPIENT_ADD (`1`)
        - RECIPIENT_REMOVE (`2`)
        - CALL (`3`)
        - CHANNEL_NAME_CHANGE (`4`)
        - CHANNEL_ICON_CHANGE (`5`)
        - CHANNEL_PINNED_MESSAGE (`6`)
        - USER_JOIN (`7`)
        - GUILD_BOOST (`8`)
        - GUILD_BOOST_TIER_1 (`9`)
        - GUILD_BOOST_TIER_2 (`10`)
        - GUILD_BOOST_TIER_3 (`11`)
        - CHANNEL_FOLLOW_ADD (`12`)
        - GUILD_DISCOVERY_DISQUALIFIED (`14`)
        - GUILD_DISCOVERY_REQUALIFIED (`15`)
        - GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING (`16`)
        - GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING (`17`)
        - THREAD_CREATED (`18`)
        - REPLY (`19`)
        - CHAT_INPUT_COMMAND (`20`)
        - THREAD_STARTER_MESSAGE (`21`)
        - GUILD_INVITE_REMINDER (`22`)
        - CONTEXT_MENU_COMMAND (`23`)
        - AUTO_MODERATION_ACTION (`24`)
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#message-object-message-types
    MessageActivityTypes:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 5
      x-enumNames:
        - JOIN
        - SPECTATE
        - LISTEN
        - JOIN_REQUEST
      x-enum-varnames:
        - JOIN
        - SPECTATE
        - LISTEN
        - JOIN_REQUEST
      x-ms-enum:
        - JOIN
        - SPECTATE
        - LISTEN
        - JOIN_REQUEST
      description: |-
        - JOIN (`1`)
        - SPECTATE (`2`)
        - LISTEN (`3`)
        - JOIN_REQUEST (`5`)
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#message-object-message-activity-types
    MessageActivity:
      type: object
      properties:
        type:
          allOf:
            - $ref: "#/components/schemas/MessageActivityTypes"
          description: "[type of message activity](https://discord.com/developers/docs/resources/channel#message-object-message-activity-types)"
        party_id:
          type: string
          description: party_id from a [Rich Presence event](https://discord.com/developers/docs/rich-presence/how-to#updating-presence-update-presence-payload-fields)
      required:
        - type
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#message-object-message-activity-structure
    MessageApplication:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the app
        name:
          type: string
          description: the name of the app
        icon:
          type: string
          nullable: true
          description: the [icon hash](https://discord.com/developers/docs/reference#image-formatting) of the app
        description:
          type: string
          description: the description of the app
        rpc_origins:
          type: array
          items:
            type: string
          description: an array of rpc origin urls, if rpc is enabled
        bot_public:
          type: boolean
          description: when false only app owner can join the app's bot to guilds
        bot_require_code_grant:
          type: boolean
          description: when true the app's bot will only join upon completion of the full oauth2 code grant flow
        terms_of_service_url:
          type: string
          description: the url of the app's terms of service
        privacy_policy_url:
          type: string
          description: the url of the app's privacy policy
        owner:
          allOf:
            - $ref: "#/components/schemas/ApplicationOwner"
          description: partial user object containing info on the owner of the application
        summary:
          type: string
          deprecated: true
          description: "**deprecated and will be removed in v11.** An empty string."
        verify_key:
          type: string
          description: the hex encoded key for verification in interactions and the GameSDK's [GetTicket](https://discord.com/developers/docs/game-sdk/applications#getticket)
        team:
          allOf:
            - $ref: "#/components/schemas/Team"
          nullable: true
          description: if the application belongs to a team, this will be a list of the members of that team
        guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: if this application is a game sold on Discord, this field will be the guild to which it has been linked
        primary_sku_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: if this application is a game sold on Discord, this field will be the id of the "Game SKU" that is created, if exists
        slug:
          type: string
          description: if this application is a game sold on Discord, this field will be the URL slug that links to the store page
        cover_image:
          type: string
          description: the application's default rich presence invite [cover image hash](https://discord.com/developers/docs/reference#image-formatting)
        flags:
          type: integer
          description: the application's public [flags](https://discord.com/developers/docs/resources/application#application-object-application-flags)
        tags:
          type: array
          items:
            type: string
          description: up to 5 tags describing the content and functionality of the application
        install_params:
          allOf:
            - $ref: "#/components/schemas/InstallParams"
          description: settings for the application's default in-app authorization link, if enabled
        custom_install_url:
          type: string
          description: the application's default custom authorization link, if enabled
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#message-object-message-structure
    MessageReference:
      type: object
      properties:
        message_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of the originating message
        channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of the originating message's channel
        guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of the originating message's guild
        fail_if_not_exists:
          type: boolean
          description: when sending, whether to error if the referenced message doesn't exist instead of sending as a normal (non-reply) message, default true
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#message-reference-object-message-reference-structure
    MessageFlags:
      type: integer
      enum:
        - 1
        - 2
        - 4
        - 8
        - 16
        - 32
        - 64
        - 128
        - 256
      x-enumNames:
        - CROSSPOSTED
        - IS_CROSSPOST
        - SUPPRESS_EMBEDS
        - SOURCE_MESSAGE_DELETED
        - URGENT
        - HAS_THREAD
        - EPHEMERAL
        - LOADING
        - FAILED_TO_MENTION_SOME_ROLES_IN_THREAD
      x-enum-varnames:
        - CROSSPOSTED
        - IS_CROSSPOST
        - SUPPRESS_EMBEDS
        - SOURCE_MESSAGE_DELETED
        - URGENT
        - HAS_THREAD
        - EPHEMERAL
        - LOADING
        - FAILED_TO_MENTION_SOME_ROLES_IN_THREAD
      x-ms-enum:
        - CROSSPOSTED
        - IS_CROSSPOST
        - SUPPRESS_EMBEDS
        - SOURCE_MESSAGE_DELETED
        - URGENT
        - HAS_THREAD
        - EPHEMERAL
        - LOADING
        - FAILED_TO_MENTION_SOME_ROLES_IN_THREAD
      description: |-
        - CROSSPOSTED (`1`) - this message has been published to subscribed channels (via Channel Following)
        - IS_CROSSPOST (`2`) - this message originated from a message in another channel (via Channel Following)
        - SUPPRESS_EMBEDS (`4`) - do not include any embeds when serializing this message
        - SOURCE_MESSAGE_DELETED (`8`) - the source message for this crosspost has been deleted (via Channel Following)
        - URGENT (`16`) - this message came from the urgent message system
        - HAS_THREAD (`32`) - this message has an associated thread, with the same id as the message
        - EPHEMERAL (`64`) - this message is only visible to the user who invoked the Interaction
        - LOADING (`128`) - this message is an Interaction Response and the bot is "thinking"
        - FAILED_TO_MENTION_SOME_ROLES_IN_THREAD (`256`) - this message failed to mention some roles and add their members to the thread
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#message-object-message-flags
    Message:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of the message
        channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of the channel the message was sent in
        author:
          allOf:
            - $ref: "#/components/schemas/User"
          description: the author of this message (not guaranteed to be a valid user, see below)
        content:
          type: string
          description: contents of the message
        timestamp:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          description: when this message was sent
        edited_timestamp:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          nullable: true
          description: when this message was edited (or null if never)
        tts:
          type: boolean
          description: whether this was a TTS message
        mention_everyone:
          type: boolean
          description: whether this message mentions everyone
        mentions:
          type: array
          items:
            $ref: "#/components/schemas/User"
          description: users specifically mentioned in the message
        mention_roles:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Snowflake"
            description: role id
          description: roles specifically mentioned in this message
        mention_channels:
          type: array
          items:
            $ref: "#/components/schemas/ChannelMention"
          description: channels specifically mentioned in this message
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/Attachment"
          description: any attached files
        embeds:
          type: array
          items:
            $ref: "#/components/schemas/Embed"
          description: any embedded content
        reactions:
          type: array
          items:
            $ref: "#/components/schemas/Reaction"
          description: reactions to the message
        nonce:
          oneOf:
            - type: integer
            - type: string
          description: used for validating a message was sent
        pinned:
          type: boolean
          description: whether this message is pinned
        webhook_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: if the message is generated by a webhook, this is the webhook's id
        type:
          allOf:
            - $ref: "#/components/schemas/MessageTypes"
          description: "[type of message](https://discord.com/developers/docs/resources/channel#message-object-message-types)"
        activity:
          allOf:
            - $ref: "#/components/schemas/MessageActivity"
          description: sent with Rich Presence-related chat embeds
        application:
          allOf:
            - $ref: "#/components/schemas/MessageApplication"
          description: sent with Rich Presence-related chat embeds
        application_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: if the message is an [Interaction](#DOCS_INTERACTIONS_RECEIVING_AND_RESPONDING/) or application-owned webhook, this is the id of the application
        message_reference:
          allOf:
            - $ref: "#/components/schemas/MessageReference"
          description: data showing the source of a crosspost, channel follow add, pin, or reply message
        flags:
          type: integer
          description: "[message flags](https://discord.com/developers/docs/resources/channel#message-object-message-flags) combined as a [bitfield](https://en.wikipedia.org/wiki/Bit_field)"
        referenced_message:
          allOf:
            - $ref: "#/components/schemas/Message"
          nullable: true
          description: the message associated with the message_reference
        interaction:
          allOf:
            - $ref: "#/components/schemas/MessageInteraction"
          description: sent if the message is a response to an [Interaction](#DOCS_INTERACTIONS_RECEIVING_AND_RESPONDING/)
        thread:
          allOf:
            - $ref: "#/components/schemas/Channel"
          description: the thread that was started from this message, includes [thread member](https://discord.com/developers/docs/resources/channel#thread-member-object) object
        components:
          type: array
          items:
            $ref: "#/components/schemas/ActionRow"
          description: sent if the message contains components like buttons, action rows, or other interactive components
        sticker_items:
          type: array
          items:
            $ref: "#/components/schemas/StickerItem"
          description: sent if the message contains stickers
        stickers:
          type: array
          items:
            $ref: "#/components/schemas/Sticker"
          description: "**Deprecated** the stickers sent with the message"
        position:
          type: integer
          description: A generally increasing integer (there may be gaps or duplicates) that represents the approximate position of the message in a thread, it can be used to estimate the relative position of the messsage in a thread in company with `total_message_sent` on parent thread
      required:
        - id
        - channel_id
        - author
        - content
        - timestamp
        - edited_timestamp
        - tts
        - mention_everyone
        - mentions
        - mention_roles
        - attachments
        - embeds
        - pinned
        - type
      externalDocs:
        url: https://discord.com/developers/docs/resources/channel#message-object-message-structure
    InteractionType:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
      x-enumNames:
        - PING
        - APPLICATION_COMMAND
        - MESSAGE_COMPONENT
        - APPLICATION_COMMAND_AUTOCOMPLETE
        - MODAL_SUBMIT
      x-enum-varnames:
        - PING
        - APPLICATION_COMMAND
        - MESSAGE_COMPONENT
        - APPLICATION_COMMAND_AUTOCOMPLETE
        - MODAL_SUBMIT
      x-ms-enum:
        - PING
        - APPLICATION_COMMAND
        - MESSAGE_COMPONENT
        - APPLICATION_COMMAND_AUTOCOMPLETE
        - MODAL_SUBMIT
      description: |-
        - PING (`1`)
        - APPLICATION_COMMAND (`2`)
        - MESSAGE_COMPONENT (`3`)
        - APPLICATION_COMMAND_AUTOCOMPLETE (`4`)
        - MODAL_SUBMIT (`5`)
      externalDocs:
        url: https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object-interaction-type
    GuildMember:
      type: object
      properties:
        user:
          allOf:
            - $ref: "#/components/schemas/User"
          description: the user this guild member represents
        nick:
          type: string
          nullable: true
          description: this user's guild nickname
        avatar:
          type: string
          nullable: true
          description: the member's [guild avatar hash](https://discord.com/developers/docs/reference#image-formatting)
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Snowflake"
          description: array of [role](https://discord.com/developers/docs/topics/permissions#role-object) object ids
        joined_at:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          description: when the user joined the guild
        premium_since:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          nullable: true
          description: when the user started [boosting](https://support.discord.com/hc/en-us/articles/360028038352-Server-Boosting-) the guild
        deaf:
          type: boolean
          description: whether the user is deafened in voice channels
        mute:
          type: boolean
          description: whether the user is muted in voice channels
        pending:
          type: boolean
          description: whether the user has not yet passed the guild's [Membership Screening](https://discord.com/developers/docs/resources/guild#membership-screening-object) requirements
        permissions:
          type: string
          description: total permissions of the member in the channel, including overwrites, returned when in the interaction object
        communication_disabled_until:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          nullable: true
          description: when the user's [timeout](https://support.discord.com/hc/en-us/articles/4413305239191-Time-Out-FAQ) will expire and the user will be able to communicate in the guild again, null or a time in the past if the user is not timed out
      required:
        - roles
        - joined_at
        - deaf
        - mute
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#guild-member-object-guild-member-structure
    MessageInteraction:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: ID of the interaction
        type:
          allOf:
            - $ref: "#/components/schemas/InteractionType"
          description: Type of interaction
        name:
          type: string
          description: Name of the [application command](https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-structure), including subcommands and subcommand groups
        user:
          allOf:
            - $ref: "#/components/schemas/User"
          description: User who invoked the interaction
        member:
          allOf:
            - $ref: "#/components/schemas/GuildMember"
          description: Member who invoked the interaction in the guild
      required:
        - id
        - type
        - name
        - user
      externalDocs:
        url: https://discord.com/developers/docs/interactions/receiving-and-responding#message-interaction-object-message-interaction-structure
    ButtonStyles:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
      x-enumNames:
        - Primary
        - Secondary
        - Success
        - Danger
        - Link
      x-enum-varnames:
        - Primary
        - Secondary
        - Success
        - Danger
        - Link
      x-ms-enum:
        - Primary
        - Secondary
        - Success
        - Danger
        - Link
      description: |-
        - Primary (`1`) - blurple
        - Secondary (`2`) - grey
        - Success (`3`) - green
        - Danger (`4`) - red
        - Link (`5`) - grey, navigates to a URL
      externalDocs:
        url: https://discord.com/developers/docs/interactions/message-components#button-object-button-styles
    ButtonEmoji:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: "[emoji id](https://discord.com/developers/docs/reference#image-formatting)"
        name:
          type: string
          nullable: true
          description: emoji name
        animated:
          type: boolean
          description: whether this emoji is animated
      externalDocs:
        url: https://discord.com/developers/docs/interactions/message-components#button-object-button-structure
    Button:
      type: object
      properties:
        type:
          type: integer
          description: "`2` for a button"
        style:
          allOf:
            - $ref: "#/components/schemas/ButtonStyles"
          description: one of [button styles](https://discord.com/developers/docs/interactions/message-components#button-object-button-styles)
        label:
          type: string
          description: text that appears on the button, max 80 characters
        emoji:
          allOf:
            - $ref: "#/components/schemas/ButtonEmoji"
          description: "`name`, `id`, and `animated`"
        custom_id:
          type: string
          description: a developer-defined identifier for the button, max 100 characters
        url:
          type: string
          description: a url for link-style buttons
        disabled:
          type: boolean
          description: whether the button is disabled (default `false`)
      required:
        - type
        - style
      externalDocs:
        url: https://discord.com/developers/docs/interactions/message-components#button-object-button-structure
    SelectOptionEmoji:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: "[emoji id](https://discord.com/developers/docs/reference#image-formatting)"
        name:
          type: string
          nullable: true
          description: emoji name
        animated:
          type: boolean
          description: whether this emoji is animated
      externalDocs:
        url: https://discord.com/developers/docs/interactions/message-components#select-menu-object-select-option-structure
    SelectOption:
      type: object
      properties:
        label:
          type: string
          description: the user-facing name of the option, max 100 characters
        value:
          type: string
          description: the dev-defined value of the option, max 100 characters
        description:
          type: string
          description: an additional description of the option, max 100 characters
        emoji:
          allOf:
            - $ref: "#/components/schemas/SelectOptionEmoji"
          description: "`id`, `name`, and `animated`"
        default:
          type: boolean
          description: will render this option as selected by default
      required:
        - label
        - value
      externalDocs:
        url: https://discord.com/developers/docs/interactions/message-components#select-menu-object-select-option-structure
    SelectMenu:
      type: object
      properties:
        type:
          type: integer
          description: "`3` for a select menu"
        custom_id:
          type: string
          description: a developer-defined identifier for the select menu, max 100 characters
        options:
          type: array
          items:
            $ref: "#/components/schemas/SelectOption"
          description: the choices in the select, max 25
        placeholder:
          type: string
          description: custom placeholder text if nothing is selected, max 150 characters
        min_values:
          type: integer
          description: the minimum number of items that must be chosen; default 1, min 0, max 25
        max_values:
          type: integer
          description: the maximum number of items that can be chosen; default 1, max 25
        disabled:
          type: boolean
          description: disable the select, default false
      required:
        - type
        - custom_id
        - options
      externalDocs:
        url: https://discord.com/developers/docs/interactions/message-components#select-menu-object-select-menu-structure
    TextInputStyles:
      type: integer
      enum:
        - 1
        - 2
      x-enumNames:
        - Short
        - Paragraph
      x-enum-varnames:
        - Short
        - Paragraph
      x-ms-enum:
        - Short
        - Paragraph
      description: |-
        - Short (`1`) - A single-line input
        - Paragraph (`2`) - A multi-line input
      externalDocs:
        url: https://discord.com/developers/docs/interactions/message-components#text-inputs-text-input-styles
    TextInput:
      type: object
      properties:
        type:
          type: integer
          description: "`4` for a text input"
        custom_id:
          type: string
          description: a developer-defined identifier for the input, max 100 characters
        style:
          allOf:
            - $ref: "#/components/schemas/TextInputStyles"
          description: the [Text Input Style](https://discord.com/developers/docs/interactions/message-components#text-inputs-text-input-styles)
        label:
          type: string
          description: the label for this component, max 45 characters
        min_length:
          type: integer
          description: the minimum input length for a text input, min 0, max 4000
        max_length:
          type: integer
          description: the maximum input length for a text input, min 1, max 4000
        required:
          type: boolean
          description: whether this component is required to be filled, default true
        value:
          type: string
          description: a pre-filled value for this component, max 4000 characters
        placeholder:
          type: string
          description: custom placeholder text if the input is empty, max 100 characters
      required:
        - type
        - custom_id
        - style
        - label
      externalDocs:
        url: https://discord.com/developers/docs/interactions/message-components#text-inputs-text-input-structure
    ActionRow:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 1
        components:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/Button"
              - $ref: "#/components/schemas/SelectMenu"
              - $ref: "#/components/schemas/TextInput"
      externalDocs:
        url: https://discord.com/developers/docs/interactions/message-components#component-object
    StickerItem:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of the sticker
        name:
          type: string
          description: name of the sticker
        format_type:
          allOf:
            - $ref: "#/components/schemas/StickerFormatTypes"
          description: "[type of sticker format](https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-format-types)"
      required:
        - id
        - name
        - format_type
      externalDocs:
        url: https://discord.com/developers/docs/resources/sticker#sticker-item-object-sticker-item-structure
    IntegrationExpireBehaviors:
      type: integer
      enum:
        - 0
        - 1
      x-enumNames:
        - Remove role
        - Kick
      x-enum-varnames:
        - Remove role
        - Kick
      x-ms-enum:
        - Remove role
        - Kick
      description: |-
        - Removerole (`0`)
        - Kick (`1`)
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#integration-object-integration-expire-behaviors
    IntegrationAccount:
      type: object
      properties:
        id:
          type: string
          description: id of the account
        name:
          type: string
          description: name of the account
      required:
        - id
        - name
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#integration-account-object-integration-account-structure
    IntegrationApplication:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the app
        name:
          type: string
          description: the name of the app
        icon:
          type: string
          nullable: true
          description: the [icon hash](https://discord.com/developers/docs/reference#image-formatting) of the app
        description:
          type: string
          description: the description of the app
        bot:
          allOf:
            - $ref: "#/components/schemas/User"
          description: the bot associated with this application
      required:
        - id
        - name
        - icon
        - description
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#integration-application-object-integration-application-structure
    Integration:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: integration id
        name:
          type: string
          description: integration name
        type:
          type: string
          description: integration type (twitch, youtube, or discord)
        enabled:
          type: boolean
          description: is this integration enabled
        syncing:
          type: boolean
          description: is this integration syncing
        role_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id that this integration uses for "subscribers"
        enable_emoticons:
          type: boolean
          description: whether emoticons should be synced for this integration (twitch only currently)
        expire_behavior:
          allOf:
            - $ref: "#/components/schemas/IntegrationExpireBehaviors"
          description: the behavior of expiring subscribers
        expire_grace_period:
          type: integer
          description: the grace period (in days) before expiring subscribers
        user:
          allOf:
            - $ref: "#/components/schemas/User"
          description: user for this integration
        account:
          allOf:
            - $ref: "#/components/schemas/IntegrationAccount"
          description: integration account information
        synced_at:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          description: when this integration was last synced
        subscriber_count:
          type: integer
          description: how many subscribers this integration has
        revoked:
          type: boolean
          description: has this integration been revoked
        application:
          allOf:
            - $ref: "#/components/schemas/IntegrationApplication"
          description: The bot/OAuth2 application for discord integrations
        scopes:
          type: array
          items:
            $ref: "#/components/schemas/OAuth2Scopes"
          description: the scopes the application has been authorized for
      required:
        - id
        - name
        - type
        - account
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild#integration-object-integration-structure
    GuildScheduledEventPrivacyLevel:
      type: integer
      enum:
        - 2
      x-enumNames:
        - GUILD_ONLY
      x-enum-varnames:
        - GUILD_ONLY
      x-ms-enum:
        - GUILD_ONLY
      description: "- GUILD_ONLY (`2`) - the scheduled event is only accessible to guild members"
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object-guild-scheduled-event-privacy-level
    GuildScheduledEventStatus:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
      x-enumNames:
        - SCHEDULED
        - ACTIVE
        - COMPLETED *
        - CANCELED  *
      x-enum-varnames:
        - SCHEDULED
        - ACTIVE
        - COMPLETED *
        - CANCELED  *
      x-ms-enum:
        - SCHEDULED
        - ACTIVE
        - COMPLETED *
        - CANCELED  *
      description: |-
        - SCHEDULED (`1`)
        - ACTIVE (`2`)
        - COMPLETED (`3`)
        - CANCELED (`4`)
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object-guild-scheduled-event-status
    GuildScheduledEventEntityTypes:
      type: integer
      enum:
        - 1
        - 2
        - 3
      x-enumNames:
        - STAGE_INSTANCE
        - VOICE
        - EXTERNAL
      x-enum-varnames:
        - STAGE_INSTANCE
        - VOICE
        - EXTERNAL
      x-ms-enum:
        - STAGE_INSTANCE
        - VOICE
        - EXTERNAL
      description: |-
        - STAGE_INSTANCE (`1`)
        - VOICE (`2`)
        - EXTERNAL (`3`)
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object-guild-scheduled-event-entity-types
    GuildScheduledEventEntityMetadata:
      type: object
      properties:
        location:
          type: string
          description: location of the event (1-100 characters)
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object-guild-scheduled-event-entity-metadata
    GuildScheduledEvent:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the scheduled event
        guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the guild id which the scheduled event belongs to
        channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the channel id in which the scheduled event will be hosted, or `null` if [scheduled entity type](https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object-guild-scheduled-event-entity-types) is `EXTERNAL`
        creator_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the user that created the scheduled event *
        name:
          type: string
          description: the name of the scheduled event (1-100 characters)
        description:
          type: string
          nullable: true
          description: the description of the scheduled event (1-1000 characters)
        scheduled_start_time:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          description: the time the scheduled event will start
        scheduled_end_time:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          nullable: true
          description: the time the scheduled event will end, required if entity_type is `EXTERNAL`
        privacy_level:
          allOf:
            - $ref: "#/components/schemas/GuildScheduledEventPrivacyLevel"
          description: the privacy level of the scheduled event
        status:
          allOf:
            - $ref: "#/components/schemas/GuildScheduledEventStatus"
          description: the status of the scheduled event
        entity_type:
          allOf:
            - $ref: "#/components/schemas/GuildScheduledEventEntityTypes"
          description: the type of the scheduled event
        entity_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of an entity associated with a guild scheduled event
        entity_metadata:
          allOf:
            - $ref: "#/components/schemas/GuildScheduledEventEntityMetadata"
          nullable: true
          description: additional metadata for the guild scheduled event
        creator:
          allOf:
            - $ref: "#/components/schemas/User"
          description: the user that created the scheduled event
        user_count:
          type: integer
          description: the number of users subscribed to the scheduled event
        image:
          type: string
          nullable: true
          description: the [cover image hash](https://discord.com/developers/docs/reference#image-formatting) of the scheduled event
      required:
        - id
        - guild_id
        - channel_id
        - name
        - scheduled_start_time
        - scheduled_end_time
        - privacy_level
        - status
        - entity_type
        - entity_id
        - entity_metadata
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object-guild-scheduled-event-structure
    GuildTemplateSerializedSourceGuild:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: guild id
        name:
          type: string
          description: guild name (2-100 characters, excluding trailing and leading whitespace)
        icon:
          type: string
          nullable: true
          description: "[icon hash](https://discord.com/developers/docs/reference#image-formatting)"
        icon_hash:
          type: string
          nullable: true
          description: "[icon hash](https://discord.com/developers/docs/reference#image-formatting), returned when in the template object"
        splash:
          type: string
          nullable: true
          description: "[splash hash](https://discord.com/developers/docs/reference#image-formatting)"
        discovery_splash:
          type: string
          nullable: true
          description: '[discovery splash hash](https://discord.com/developers/docs/reference#image-formatting); only present for guilds with the "DISCOVERABLE" feature'
        owner:
          type: boolean
          description: true if [the user](https://discord.com/developers/docs/resources/user#get-current-user-guilds) is the owner of the guild
        owner_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of owner
        permissions:
          type: string
          description: total permissions for [the user](https://discord.com/developers/docs/resources/user#get-current-user-guilds) in the guild (excludes overwrites)
        region:
          type: string
          nullable: true
          deprecated: true
          description: "[voice region](https://discord.com/developers/docs/resources/voice#voice-region-object) id for the guild (deprecated)"
        afk_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: id of afk channel
        afk_timeout:
          type: integer
          description: afk timeout in seconds
        widget_enabled:
          type: boolean
          description: true if the server widget is enabled
        widget_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the channel id that the widget will generate an invite to, or `null` if set to no invite
        verification_level:
          allOf:
            - $ref: "#/components/schemas/VerificationLevel"
          description: "[verification level](https://discord.com/developers/docs/resources/guild#guild-object-verification-level) required for the guild"
        default_message_notifications:
          allOf:
            - $ref: "#/components/schemas/DefaultMessageNotificationLevel"
          description: default [message notifications level](https://discord.com/developers/docs/resources/guild#guild-object-default-message-notification-level)
        explicit_content_filter:
          allOf:
            - $ref: "#/components/schemas/ExplicitContentFilterLevel"
          description: "[explicit content filter level](https://discord.com/developers/docs/resources/guild#guild-object-explicit-content-filter-level)"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
          description: roles in the guild
        emojis:
          type: array
          items:
            $ref: "#/components/schemas/Emoji"
          description: custom guild emojis
        features:
          type: array
          items:
            $ref: "#/components/schemas/GuildFeatures"
          description: enabled guild features
        mfa_level:
          allOf:
            - $ref: "#/components/schemas/MFALevel"
          description: required [MFA level](https://discord.com/developers/docs/resources/guild#guild-object-mfa-level) for the guild
        application_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: application id of the guild creator if it is bot-created
        system_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the channel where guild notices such as welcome messages and boost events are posted
        system_channel_flags:
          type: integer
          description: "[system channel flags](https://discord.com/developers/docs/resources/guild#guild-object-system-channel-flags)"
        rules_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the channel where Community guilds can display rules and/or guidelines
        max_presences:
          type: integer
          nullable: true
          description: the maximum number of presences for the guild (`null` is always returned, apart from the largest of guilds)
        max_members:
          type: integer
          description: the maximum number of members for the guild
        vanity_url_code:
          type: string
          nullable: true
          description: the vanity url code for the guild
        description:
          type: string
          nullable: true
          description: the description of a guild
        banner:
          type: string
          nullable: true
          description: "[banner hash](https://discord.com/developers/docs/reference#image-formatting)"
        premium_tier:
          allOf:
            - $ref: "#/components/schemas/PremiumTier"
          description: "[premium tier](https://discord.com/developers/docs/resources/guild#guild-object-premium-tier) (Server Boost level)"
        premium_subscription_count:
          type: integer
          description: the number of boosts this guild currently has
        preferred_locale:
          allOf:
            - $ref: "#/components/schemas/Locales"
          description: the preferred [locale](https://discord.com/developers/docs/reference#locales) of a Community guild; used in server discovery and notices from Discord, and sent in interactions; defaults to "en-US"
        public_updates_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the channel where admins and moderators of Community guilds receive notices from Discord
        max_video_channel_users:
          type: integer
          description: the maximum amount of users in a video channel
        approximate_member_count:
          type: integer
          description: approximate number of members in this guild, returned from the `GET /guilds/<id>` endpoint when `with_counts` is `true`
        approximate_presence_count:
          type: integer
          description: approximate number of non-offline members in this guild, returned from the `GET /guilds/<id>` endpoint when `with_counts` is `true`
        welcome_screen:
          allOf:
            - $ref: "#/components/schemas/WelcomeScreen"
          description: the welcome screen of a Community guild, shown to new members, returned in an [Invite](https://discord.com/developers/docs/resources/invite#invite-object)'s guild object
        nsfw_level:
          allOf:
            - $ref: "#/components/schemas/GuildNSFWLevel"
          description: "[guild NSFW level](https://discord.com/developers/docs/resources/guild#guild-object-guild-nsfw-level)"
        stickers:
          type: array
          items:
            $ref: "#/components/schemas/Sticker"
          description: custom guild stickers
        premium_progress_bar_enabled:
          type: boolean
          description: whether the guild has the boost progress bar enabled
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild-template#guild-template-object-guild-template-structure
    GuildTemplate:
      type: object
      properties:
        code:
          type: string
          description: the template code (unique ID)
        name:
          type: string
          description: template name
        description:
          type: string
          nullable: true
          description: the description for the template
        usage_count:
          type: integer
          description: number of times this template has been used
        creator_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the ID of the user who created the template
        creator:
          allOf:
            - $ref: "#/components/schemas/User"
          description: the user who created the template
        created_at:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          description: when this template was created
        updated_at:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          description: when this template was last synced to the source guild
        source_guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the ID of the guild this template is based on
        serialized_source_guild:
          allOf:
            - $ref: "#/components/schemas/GuildTemplateSerializedSourceGuild"
          description: the guild snapshot this template contains
        is_dirty:
          type: boolean
          nullable: true
          description: whether the template has unsynced changes
      required:
        - code
        - name
        - description
        - usage_count
        - creator_id
        - creator
        - created_at
        - updated_at
        - source_guild_id
        - serialized_source_guild
        - is_dirty
      externalDocs:
        url: https://discord.com/developers/docs/resources/guild-template#guild-template-object-guild-template-structure
    InviteGuild:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: guild id
        name:
          type: string
          description: guild name (2-100 characters, excluding trailing and leading whitespace)
        icon:
          type: string
          nullable: true
          description: "[icon hash](https://discord.com/developers/docs/reference#image-formatting)"
        icon_hash:
          type: string
          nullable: true
          description: "[icon hash](https://discord.com/developers/docs/reference#image-formatting), returned when in the template object"
        splash:
          type: string
          nullable: true
          description: "[splash hash](https://discord.com/developers/docs/reference#image-formatting)"
        discovery_splash:
          type: string
          nullable: true
          description: '[discovery splash hash](https://discord.com/developers/docs/reference#image-formatting); only present for guilds with the "DISCOVERABLE" feature'
        owner:
          type: boolean
          description: true if [the user](https://discord.com/developers/docs/resources/user#get-current-user-guilds) is the owner of the guild
        owner_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of owner
        permissions:
          type: string
          description: total permissions for [the user](https://discord.com/developers/docs/resources/user#get-current-user-guilds) in the guild (excludes overwrites)
        region:
          type: string
          nullable: true
          deprecated: true
          description: "[voice region](https://discord.com/developers/docs/resources/voice#voice-region-object) id for the guild (deprecated)"
        afk_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: id of afk channel
        afk_timeout:
          type: integer
          description: afk timeout in seconds
        widget_enabled:
          type: boolean
          description: true if the server widget is enabled
        widget_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the channel id that the widget will generate an invite to, or `null` if set to no invite
        verification_level:
          allOf:
            - $ref: "#/components/schemas/VerificationLevel"
          description: "[verification level](https://discord.com/developers/docs/resources/guild#guild-object-verification-level) required for the guild"
        default_message_notifications:
          allOf:
            - $ref: "#/components/schemas/DefaultMessageNotificationLevel"
          description: default [message notifications level](https://discord.com/developers/docs/resources/guild#guild-object-default-message-notification-level)
        explicit_content_filter:
          allOf:
            - $ref: "#/components/schemas/ExplicitContentFilterLevel"
          description: "[explicit content filter level](https://discord.com/developers/docs/resources/guild#guild-object-explicit-content-filter-level)"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
          description: roles in the guild
        emojis:
          type: array
          items:
            $ref: "#/components/schemas/Emoji"
          description: custom guild emojis
        features:
          type: array
          items:
            $ref: "#/components/schemas/GuildFeatures"
          description: enabled guild features
        mfa_level:
          allOf:
            - $ref: "#/components/schemas/MFALevel"
          description: required [MFA level](https://discord.com/developers/docs/resources/guild#guild-object-mfa-level) for the guild
        application_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: application id of the guild creator if it is bot-created
        system_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the channel where guild notices such as welcome messages and boost events are posted
        system_channel_flags:
          type: integer
          description: "[system channel flags](https://discord.com/developers/docs/resources/guild#guild-object-system-channel-flags)"
        rules_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the channel where Community guilds can display rules and/or guidelines
        max_presences:
          type: integer
          nullable: true
          description: the maximum number of presences for the guild (`null` is always returned, apart from the largest of guilds)
        max_members:
          type: integer
          description: the maximum number of members for the guild
        vanity_url_code:
          type: string
          nullable: true
          description: the vanity url code for the guild
        description:
          type: string
          nullable: true
          description: the description of a guild
        banner:
          type: string
          nullable: true
          description: "[banner hash](https://discord.com/developers/docs/reference#image-formatting)"
        premium_tier:
          allOf:
            - $ref: "#/components/schemas/PremiumTier"
          description: "[premium tier](https://discord.com/developers/docs/resources/guild#guild-object-premium-tier) (Server Boost level)"
        premium_subscription_count:
          type: integer
          description: the number of boosts this guild currently has
        preferred_locale:
          allOf:
            - $ref: "#/components/schemas/Locales"
          description: the preferred [locale](https://discord.com/developers/docs/reference#locales) of a Community guild; used in server discovery and notices from Discord, and sent in interactions; defaults to "en-US"
        public_updates_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the channel where admins and moderators of Community guilds receive notices from Discord
        max_video_channel_users:
          type: integer
          description: the maximum amount of users in a video channel
        approximate_member_count:
          type: integer
          description: approximate number of members in this guild, returned from the `GET /guilds/<id>` endpoint when `with_counts` is `true`
        approximate_presence_count:
          type: integer
          description: approximate number of non-offline members in this guild, returned from the `GET /guilds/<id>` endpoint when `with_counts` is `true`
        welcome_screen:
          allOf:
            - $ref: "#/components/schemas/WelcomeScreen"
          description: the welcome screen of a Community guild, shown to new members, returned in an [Invite](https://discord.com/developers/docs/resources/invite#invite-object)'s guild object
        nsfw_level:
          allOf:
            - $ref: "#/components/schemas/GuildNSFWLevel"
          description: "[guild NSFW level](https://discord.com/developers/docs/resources/guild#guild-object-guild-nsfw-level)"
        stickers:
          type: array
          items:
            $ref: "#/components/schemas/Sticker"
          description: custom guild stickers
        premium_progress_bar_enabled:
          type: boolean
          description: whether the guild has the boost progress bar enabled
      externalDocs:
        url: https://discord.com/developers/docs/resources/invite#invite-object-invite-structure
    InviteChannel:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of this channel
        type:
          allOf:
            - $ref: "#/components/schemas/ChannelTypes"
          description: the [type of channel](https://discord.com/developers/docs/resources/channel#channel-object-channel-types)
        guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the guild (may be missing for some channel objects received over gateway guild dispatches)
        position:
          type: integer
          description: sorting position of the channel
        permission_overwrites:
          type: array
          items:
            $ref: "#/components/schemas/Overwrite"
          description: explicit permission overwrites for members and roles
        name:
          type: string
          nullable: true
          description: the name of the channel (1-100 characters)
        topic:
          type: string
          nullable: true
          description: the channel topic (0-4096 characters for `GUILD_FORUM` channels, 0-1024 characters for all others)
        nsfw:
          type: boolean
          description: whether the channel is nsfw
        last_message_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the last message sent in this channel (or thread for `GUILD_FORUM` channels) (may not point to an existing or valid message or thread)
        bitrate:
          type: integer
          description: the bitrate (in bits) of the voice channel
        user_limit:
          type: integer
          description: the user limit of the voice channel
        rate_limit_per_user:
          type: integer
          description: amount of seconds a user has to wait before sending another message (0-21600); bots, as well as users with the permission `manage_messages` or `manage_channel`, are unaffected
        recipients:
          type: array
          items:
            $ref: "#/components/schemas/User"
          description: the recipients of the DM
        icon:
          type: string
          nullable: true
          description: icon hash of the group DM
        owner_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of the creator of the group DM or thread
        application_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: application id of the group DM creator if it is bot-created
        parent_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: "for guild channels: id of the parent category for a channel (each parent category can contain up to 50 channels), for threads: id of the text channel this thread was created"
        last_pin_timestamp:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          nullable: true
          description: when the last pinned message was pinned. This may be `null` in events such as `GUILD_CREATE` when a message is not pinned.
        rtc_region:
          type: string
          nullable: true
          description: "[voice region](https://discord.com/developers/docs/resources/voice#voice-region-object) id for the voice channel, automatic when set to null"
        video_quality_mode:
          allOf:
            - $ref: "#/components/schemas/VideoQualityModes"
          description: the camera [video quality mode](https://discord.com/developers/docs/resources/channel#channel-object-video-quality-modes) of the voice channel, 1 when not present
        message_count:
          type: integer
          description: number of messages (not including the initial message or deleted messages) in a thread (if the thread was created before July 1, 2022, it stops counting at 50)
        member_count:
          type: integer
          description: an approximate count of users in a thread, stops counting at 50
        thread_metadata:
          allOf:
            - $ref: "#/components/schemas/ThreadMetadata"
          description: thread-specific fields not needed by other channels
        member:
          allOf:
            - $ref: "#/components/schemas/ThreadMember"
          description: thread member object for the current user, if they have joined the thread, only included on certain API endpoints
        default_auto_archive_duration:
          type: integer
          description: "default duration, copied onto newly created threads, in minutes, threads will stop showing in the channel list after the specified period of inactivity, can be set to: 60, 1440, 4320, 10080"
        permissions:
          type: string
          description: computed permissions for the invoking user in the channel, including overwrites, only included when part of the `resolved` data received on a slash command interaction
        flags:
          type: integer
          description: "[channel flags](https://discord.com/developers/docs/resources/channel#channel-object-channel-flags) combined as a [bitfield](https://en.wikipedia.org/wiki/Bit_field)"
        total_message_sent:
          type: integer
          description: number of messages ever sent in a thread, it's similar to `message_count` on message creation, but will not decrement the number when a message is deleted
        available_tags:
          type: array
          items:
            $ref: "#/components/schemas/ForumTag"
          description: the set of tags that can be used in a `GUILD_FORUM` channel
        applied_tags:
          type: array
          items:
            $ref: "#/components/schemas/Snowflake"
          description: the IDs of the set of tags that have been applied to a thread in a `GUILD_FORUM` channel
        default_reaction_emoji:
          allOf:
            - $ref: "#/components/schemas/DefaultReaction"
          nullable: true
          description: the emoji to show in the add reaction button on a thread in a `GUILD_FORUM` channel
        default_thread_rate_limit_per_user:
          type: integer
          description: the initial `rate_limit_per_user` to set on newly created threads in a channel. this field is copied to the thread at creation time and does not live update.
      externalDocs:
        url: https://discord.com/developers/docs/resources/invite#invite-object-invite-structure
    InviteTargetTypes:
      type: integer
      enum:
        - 1
        - 2
      x-enumNames:
        - STREAM
        - EMBEDDED_APPLICATION
      x-enum-varnames:
        - STREAM
        - EMBEDDED_APPLICATION
      x-ms-enum:
        - STREAM
        - EMBEDDED_APPLICATION
      description: |-
        - STREAM (`1`)
        - EMBEDDED_APPLICATION (`2`)
      externalDocs:
        url: https://discord.com/developers/docs/resources/invite#invite-object-invite-target-types
    InviteTargetApplication:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the app
        name:
          type: string
          description: the name of the app
        icon:
          type: string
          nullable: true
          description: the [icon hash](https://discord.com/developers/docs/reference#image-formatting) of the app
        description:
          type: string
          description: the description of the app
        rpc_origins:
          type: array
          items:
            type: string
          description: an array of rpc origin urls, if rpc is enabled
        bot_public:
          type: boolean
          description: when false only app owner can join the app's bot to guilds
        bot_require_code_grant:
          type: boolean
          description: when true the app's bot will only join upon completion of the full oauth2 code grant flow
        terms_of_service_url:
          type: string
          description: the url of the app's terms of service
        privacy_policy_url:
          type: string
          description: the url of the app's privacy policy
        owner:
          allOf:
            - $ref: "#/components/schemas/ApplicationOwner"
          description: partial user object containing info on the owner of the application
        summary:
          type: string
          deprecated: true
          description: "**deprecated and will be removed in v11.** An empty string."
        verify_key:
          type: string
          description: the hex encoded key for verification in interactions and the GameSDK's [GetTicket](https://discord.com/developers/docs/game-sdk/applications#getticket)
        team:
          allOf:
            - $ref: "#/components/schemas/Team"
          nullable: true
          description: if the application belongs to a team, this will be a list of the members of that team
        guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: if this application is a game sold on Discord, this field will be the guild to which it has been linked
        primary_sku_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: if this application is a game sold on Discord, this field will be the id of the "Game SKU" that is created, if exists
        slug:
          type: string
          description: if this application is a game sold on Discord, this field will be the URL slug that links to the store page
        cover_image:
          type: string
          description: the application's default rich presence invite [cover image hash](https://discord.com/developers/docs/reference#image-formatting)
        flags:
          type: integer
          description: the application's public [flags](https://discord.com/developers/docs/resources/application#application-object-application-flags)
        tags:
          type: array
          items:
            type: string
          description: up to 5 tags describing the content and functionality of the application
        install_params:
          allOf:
            - $ref: "#/components/schemas/InstallParams"
          description: settings for the application's default in-app authorization link, if enabled
        custom_install_url:
          type: string
          description: the application's default custom authorization link, if enabled
      externalDocs:
        url: https://discord.com/developers/docs/resources/invite#invite-object-invite-structure
    InviteStageInstanceMembers:
      type: object
      properties:
        user:
          allOf:
            - $ref: "#/components/schemas/User"
          description: the user this guild member represents
        nick:
          type: string
          nullable: true
          description: this user's guild nickname
        avatar:
          type: string
          nullable: true
          description: the member's [guild avatar hash](https://discord.com/developers/docs/reference#image-formatting)
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Snowflake"
          description: array of [role](https://discord.com/developers/docs/topics/permissions#role-object) object ids
        joined_at:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          description: when the user joined the guild
        premium_since:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          nullable: true
          description: when the user started [boosting](https://support.discord.com/hc/en-us/articles/360028038352-Server-Boosting-) the guild
        deaf:
          type: boolean
          description: whether the user is deafened in voice channels
        mute:
          type: boolean
          description: whether the user is muted in voice channels
        pending:
          type: boolean
          description: whether the user has not yet passed the guild's [Membership Screening](https://discord.com/developers/docs/resources/guild#membership-screening-object) requirements
        permissions:
          type: string
          description: total permissions of the member in the channel, including overwrites, returned when in the interaction object
        communication_disabled_until:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          nullable: true
          description: when the user's [timeout](https://support.discord.com/hc/en-us/articles/4413305239191-Time-Out-FAQ) will expire and the user will be able to communicate in the guild again, null or a time in the past if the user is not timed out
      externalDocs:
        url: https://discord.com/developers/docs/resources/invite#invite-stage-instance-object-invite-stage-instance-structure
    InviteStageInstance:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: "#/components/schemas/InviteStageInstanceMembers"
          description: the members speaking in the Stage
        participant_count:
          type: integer
          description: the number of users in the Stage
        speaker_count:
          type: integer
          description: the number of users speaking in the Stage
        topic:
          type: string
          description: the topic of the Stage instance (1-120 characters)
      required:
        - members
        - participant_count
        - speaker_count
        - topic
      externalDocs:
        url: https://discord.com/developers/docs/resources/invite#invite-stage-instance-object-invite-stage-instance-structure
    Invite:
      type: object
      properties:
        code:
          type: string
          description: the invite code (unique ID)
        guild:
          allOf:
            - $ref: "#/components/schemas/InviteGuild"
          description: the guild this invite is for
        channel:
          allOf:
            - $ref: "#/components/schemas/InviteChannel"
          nullable: true
          description: the channel this invite is for
        inviter:
          allOf:
            - $ref: "#/components/schemas/User"
          description: the user who created the invite
        target_type:
          allOf:
            - $ref: "#/components/schemas/InviteTargetTypes"
          description: the [type of target](https://discord.com/developers/docs/resources/invite#invite-object-invite-target-types) for this voice channel invite
        target_user:
          allOf:
            - $ref: "#/components/schemas/User"
          description: the user whose stream to display for this voice channel stream invite
        target_application:
          allOf:
            - $ref: "#/components/schemas/InviteTargetApplication"
          description: the embedded application to open for this voice channel embedded application invite
        approximate_presence_count:
          type: integer
          description: approximate count of online members, returned from the `GET /invites/<code>` endpoint when `with_counts` is `true`
        approximate_member_count:
          type: integer
          description: approximate count of total members, returned from the `GET /invites/<code>` endpoint when `with_counts` is `true`
        expires_at:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          nullable: true
          description: the expiration date of this invite, returned from the `GET /invites/<code>` endpoint when `with_expiration` is `true`
        stage_instance:
          allOf:
            - $ref: "#/components/schemas/InviteStageInstance"
          deprecated: true
          description: stage instance data if there is a [public Stage instance](https://discord.com/developers/docs/resources/stage-instance) in the Stage channel this invite is for (deprecated)
        guild_scheduled_event:
          allOf:
            - $ref: "#/components/schemas/GuildScheduledEvent"
          description: guild scheduled event data, only included if `guild_scheduled_event_id` contains a valid guild scheduled event id
      required:
        - code
        - channel
      externalDocs:
        url: https://discord.com/developers/docs/resources/invite#invite-object-invite-structure
    LobbyType:
      type: integer
      enum:
        - 1
        - 2
      x-enumNames:
        - Private
        - Public
      x-enum-varnames:
        - Private
        - Public
      x-ms-enum:
        - Private
        - Public
      description: |-
        - Private (`1`)
        - Public (`2`)
      externalDocs:
        url: https://discord.com/developers/docs/game-sdk/lobbies#data-models-lobbytype-enum
    Lobby:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the unique id of the lobby
        Type:
          allOf:
            - $ref: "#/components/schemas/LobbyType"
          description: if the lobby is public or private
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the userId of the lobby owner
        Secret:
          type: string
          description: the password to the lobby
        Capacity:
          type: integer
          description: the max capacity of the lobby
        Locked:
          type: boolean
          description: whether or not the lobby can be joined
      required:
        - Id
        - Type
        - OwnerId
        - Secret
        - Capacity
        - Locked
      externalDocs:
        url: https://discord.com/developers/docs/game-sdk/lobbies#data-models-lobby-struct
    ResolvedData:
      type: object
      properties:
        users:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/User"
          description: the ids and User objects
        members:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/GuildMember"
          description: the ids and partial Member objects
        roles:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Role"
          description: the ids and Role objects
        channels:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Channel"
          description: the ids and partial Channel objects
        messages:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Message"
          description: the ids and partial Message objects
        attachments:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Attachment"
          description: the ids and attachment objects
      externalDocs:
        url: https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object-resolved-data-structure
    ApplicationCommandInteractionDataOption:
      type: object
      properties:
        name:
          type: string
          description: Name of the parameter
        type:
          allOf:
            - $ref: "#/components/schemas/ApplicationCommandOptionType"
          description: Value of [application command option type](https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-option-type)
        value:
          oneOf:
            - type: string
            - type: integer
            - type: number
          description: Value of the option resulting from user input
        options:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationCommandInteractionDataOption"
          description: Present if this option is a group or subcommand
        focused:
          type: boolean
          description: "`true` if this option is the currently focused option for autocomplete"
      required:
        - name
        - type
      externalDocs:
        url: https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object-application-command-interaction-data-option-structure
    ApplicationCommandData:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the [`ID`](https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-structure) of the invoked command
        name:
          type: string
          description: the [`name`](https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-structure) of the invoked command
        type:
          type: integer
          description: the [`type`](https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-structure) of the invoked command
        resolved:
          allOf:
            - $ref: "#/components/schemas/ResolvedData"
          description: converted users + roles + channels + attachments
        options:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationCommandInteractionDataOption"
          description: the params + values from the user
        guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the guild the command is registered to
        target_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of the user or message targeted by a [user](https://discord.com/developers/docs/interactions/application-commands#user-commands) or [message](https://discord.com/developers/docs/interactions/application-commands#message-commands) command
      required:
        - id
        - name
        - type
      externalDocs:
        url: https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object-application-command-data-structure
    Interaction:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: ID of the interaction
        application_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: ID of the application this interaction is for
        type:
          allOf:
            - $ref: "#/components/schemas/InteractionType"
          description: Type of interaction
        data:
          allOf:
            - $ref: "#/components/schemas/ApplicationCommandData"
          description: Interaction data payload
        guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: Guild that the interaction was sent from
        channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: Channel that the interaction was sent from
        member:
          allOf:
            - $ref: "#/components/schemas/GuildMember"
          description: Guild member data for the invoking user, including permissions
        user:
          allOf:
            - $ref: "#/components/schemas/User"
          description: User object for the invoking user, if invoked in a DM
        token:
          type: string
          description: Continuation token for responding to the interaction
        version:
          type: integer
          description: Read-only property, always `1`
        message:
          allOf:
            - $ref: "#/components/schemas/Message"
          description: For components, the message they were attached to
        app_permissions:
          type: string
          description: Bitwise set of permissions the app or bot has within the channel the interaction was sent from
        locale:
          allOf:
            - $ref: "#/components/schemas/Locales"
          description: Selected [language](https://discord.com/developers/docs/reference#locales) of the invoking user
        guild_locale:
          type: string
          description: "[Guild's preferred locale](https://discord.com/developers/docs/resources/guild#guild-object), if invoked in a guild"
      required:
        - id
        - application_id
        - type
        - token
        - version
      externalDocs:
        url: https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object-interaction-structure
    EntitlementType:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
      x-enumNames:
        - Purchase
        - PremiumSubscription
        - DeveloperGift
        - TestModePurchase
        - FreePurchase
        - UserGift
        - PremiumPurchase
      x-enum-varnames:
        - Purchase
        - PremiumSubscription
        - DeveloperGift
        - TestModePurchase
        - FreePurchase
        - UserGift
        - PremiumPurchase
      x-ms-enum:
        - Purchase
        - PremiumSubscription
        - DeveloperGift
        - TestModePurchase
        - FreePurchase
        - UserGift
        - PremiumPurchase
      description: |-
        - Purchase (`1`) - entitlement was purchased
        - PremiumSubscription (`2`) - entitlement for a Discord Nitro subscription
        - DeveloperGift (`3`) - entitlement was gifted by a developer
        - TestModePurchase (`4`) - entitlement was purchased by a dev in application test mode
        - FreePurchase (`5`) - entitlement was granted when the SKU was free
        - UserGift (`6`) - entitlement was gifted by another user
        - PremiumPurchase (`7`) - entitlement was claimed by user for free as a Nitro Subscriber
      externalDocs:
        url: https://discord.com/developers/docs/game-sdk/store#data-models-entitlementtype-enum
    Entitlement:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the unique ID of the entitlement
        Type:
          allOf:
            - $ref: "#/components/schemas/EntitlementType"
          description: the kind of entitlement it is
        SkuId:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the ID of the SKU to which the user is entitled
      required:
        - Id
        - Type
        - SkuId
      externalDocs:
        url: https://discord.com/developers/docs/game-sdk/store#data-models-entitlement-struct
    SkuType:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
      x-enumNames:
        - Application
        - DLC
        - Consumable
        - Bundle
      x-enum-varnames:
        - Application
        - DLC
        - Consumable
        - Bundle
      x-ms-enum:
        - Application
        - DLC
        - Consumable
        - Bundle
      description: |-
        - Application (`1`) - SKU is a game
        - DLC (`2`) - SKU is a DLC
        - Consumable (`3`) - SKU is a consumable (in-app purchase)
        - Bundle (`4`) - SKU is a bundle (comprising the other 3 types)
      externalDocs:
        url: https://discord.com/developers/docs/game-sdk/store#data-models-skutype-enum
    SkuPrice:
      type: object
      properties:
        Amount:
          type: integer
          description: the amount of money the SKU costs
        Currency:
          type: string
          description: the currency the amount is in
      required:
        - Amount
        - Currency
      externalDocs:
        url: https://discord.com/developers/docs/game-sdk/store#data-models-skuprice-struct
    SKU:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the unique ID of the SKU
        Type:
          allOf:
            - $ref: "#/components/schemas/SkuType"
          description: what sort of SKU it is
        Name:
          type: string
          description: the name of the SKU
        Price:
          allOf:
            - $ref: "#/components/schemas/SkuPrice"
          description: the price of the SKU
      required:
        - Id
        - Type
        - Name
        - Price
      externalDocs:
        url: https://discord.com/developers/docs/game-sdk/store#data-models-sku-struct
    WebhookTypes:
      type: integer
      enum:
        - 1
        - 2
        - 3
      x-enumNames:
        - Incoming
        - Channel Follower
        - Application
      x-enum-varnames:
        - Incoming
        - Channel Follower
        - Application
      x-ms-enum:
        - Incoming
        - Channel Follower
        - Application
      description: |-
        - Incoming (`1`) - Incoming Webhooks can post messages to channels with a generated token
        - ChannelFollower (`2`) - Channel Follower Webhooks are internal webhooks used with Channel Following to post new messages into channels
        - Application (`3`) - Application webhooks are webhooks used with Interactions
      externalDocs:
        url: https://discord.com/developers/docs/resources/webhook#webhook-object-webhook-types
    WebhookSourceGuild:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: guild id
        name:
          type: string
          description: guild name (2-100 characters, excluding trailing and leading whitespace)
        icon:
          type: string
          nullable: true
          description: "[icon hash](https://discord.com/developers/docs/reference#image-formatting)"
        icon_hash:
          type: string
          nullable: true
          description: "[icon hash](https://discord.com/developers/docs/reference#image-formatting), returned when in the template object"
        splash:
          type: string
          nullable: true
          description: "[splash hash](https://discord.com/developers/docs/reference#image-formatting)"
        discovery_splash:
          type: string
          nullable: true
          description: '[discovery splash hash](https://discord.com/developers/docs/reference#image-formatting); only present for guilds with the "DISCOVERABLE" feature'
        owner:
          type: boolean
          description: true if [the user](https://discord.com/developers/docs/resources/user#get-current-user-guilds) is the owner of the guild
        owner_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of owner
        permissions:
          type: string
          description: total permissions for [the user](https://discord.com/developers/docs/resources/user#get-current-user-guilds) in the guild (excludes overwrites)
        region:
          type: string
          nullable: true
          deprecated: true
          description: "[voice region](https://discord.com/developers/docs/resources/voice#voice-region-object) id for the guild (deprecated)"
        afk_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: id of afk channel
        afk_timeout:
          type: integer
          description: afk timeout in seconds
        widget_enabled:
          type: boolean
          description: true if the server widget is enabled
        widget_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the channel id that the widget will generate an invite to, or `null` if set to no invite
        verification_level:
          allOf:
            - $ref: "#/components/schemas/VerificationLevel"
          description: "[verification level](https://discord.com/developers/docs/resources/guild#guild-object-verification-level) required for the guild"
        default_message_notifications:
          allOf:
            - $ref: "#/components/schemas/DefaultMessageNotificationLevel"
          description: default [message notifications level](https://discord.com/developers/docs/resources/guild#guild-object-default-message-notification-level)
        explicit_content_filter:
          allOf:
            - $ref: "#/components/schemas/ExplicitContentFilterLevel"
          description: "[explicit content filter level](https://discord.com/developers/docs/resources/guild#guild-object-explicit-content-filter-level)"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
          description: roles in the guild
        emojis:
          type: array
          items:
            $ref: "#/components/schemas/Emoji"
          description: custom guild emojis
        features:
          type: array
          items:
            $ref: "#/components/schemas/GuildFeatures"
          description: enabled guild features
        mfa_level:
          allOf:
            - $ref: "#/components/schemas/MFALevel"
          description: required [MFA level](https://discord.com/developers/docs/resources/guild#guild-object-mfa-level) for the guild
        application_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: application id of the guild creator if it is bot-created
        system_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the channel where guild notices such as welcome messages and boost events are posted
        system_channel_flags:
          type: integer
          description: "[system channel flags](https://discord.com/developers/docs/resources/guild#guild-object-system-channel-flags)"
        rules_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the channel where Community guilds can display rules and/or guidelines
        max_presences:
          type: integer
          nullable: true
          description: the maximum number of presences for the guild (`null` is always returned, apart from the largest of guilds)
        max_members:
          type: integer
          description: the maximum number of members for the guild
        vanity_url_code:
          type: string
          nullable: true
          description: the vanity url code for the guild
        description:
          type: string
          nullable: true
          description: the description of a guild
        banner:
          type: string
          nullable: true
          description: "[banner hash](https://discord.com/developers/docs/reference#image-formatting)"
        premium_tier:
          allOf:
            - $ref: "#/components/schemas/PremiumTier"
          description: "[premium tier](https://discord.com/developers/docs/resources/guild#guild-object-premium-tier) (Server Boost level)"
        premium_subscription_count:
          type: integer
          description: the number of boosts this guild currently has
        preferred_locale:
          allOf:
            - $ref: "#/components/schemas/Locales"
          description: the preferred [locale](https://discord.com/developers/docs/reference#locales) of a Community guild; used in server discovery and notices from Discord, and sent in interactions; defaults to "en-US"
        public_updates_channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the channel where admins and moderators of Community guilds receive notices from Discord
        max_video_channel_users:
          type: integer
          description: the maximum amount of users in a video channel
        approximate_member_count:
          type: integer
          description: approximate number of members in this guild, returned from the `GET /guilds/<id>` endpoint when `with_counts` is `true`
        approximate_presence_count:
          type: integer
          description: approximate number of non-offline members in this guild, returned from the `GET /guilds/<id>` endpoint when `with_counts` is `true`
        welcome_screen:
          allOf:
            - $ref: "#/components/schemas/WelcomeScreen"
          description: the welcome screen of a Community guild, shown to new members, returned in an [Invite](https://discord.com/developers/docs/resources/invite#invite-object)'s guild object
        nsfw_level:
          allOf:
            - $ref: "#/components/schemas/GuildNSFWLevel"
          description: "[guild NSFW level](https://discord.com/developers/docs/resources/guild#guild-object-guild-nsfw-level)"
        stickers:
          type: array
          items:
            $ref: "#/components/schemas/Sticker"
          description: custom guild stickers
        premium_progress_bar_enabled:
          type: boolean
          description: whether the guild has the boost progress bar enabled
      externalDocs:
        url: https://discord.com/developers/docs/resources/webhook#webhook-object-webhook-structure
    WebhookSourceChannel:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of this channel
        type:
          allOf:
            - $ref: "#/components/schemas/ChannelTypes"
          description: the [type of channel](https://discord.com/developers/docs/resources/channel#channel-object-channel-types)
        guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the guild (may be missing for some channel objects received over gateway guild dispatches)
        position:
          type: integer
          description: sorting position of the channel
        permission_overwrites:
          type: array
          items:
            $ref: "#/components/schemas/Overwrite"
          description: explicit permission overwrites for members and roles
        name:
          type: string
          nullable: true
          description: the name of the channel (1-100 characters)
        topic:
          type: string
          nullable: true
          description: the channel topic (0-4096 characters for `GUILD_FORUM` channels, 0-1024 characters for all others)
        nsfw:
          type: boolean
          description: whether the channel is nsfw
        last_message_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the id of the last message sent in this channel (or thread for `GUILD_FORUM` channels) (may not point to an existing or valid message or thread)
        bitrate:
          type: integer
          description: the bitrate (in bits) of the voice channel
        user_limit:
          type: integer
          description: the user limit of the voice channel
        rate_limit_per_user:
          type: integer
          description: amount of seconds a user has to wait before sending another message (0-21600); bots, as well as users with the permission `manage_messages` or `manage_channel`, are unaffected
        recipients:
          type: array
          items:
            $ref: "#/components/schemas/User"
          description: the recipients of the DM
        icon:
          type: string
          nullable: true
          description: icon hash of the group DM
        owner_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: id of the creator of the group DM or thread
        application_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: application id of the group DM creator if it is bot-created
        parent_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: "for guild channels: id of the parent category for a channel (each parent category can contain up to 50 channels), for threads: id of the text channel this thread was created"
        last_pin_timestamp:
          allOf:
            - $ref: "#/components/schemas/ISO8601DateTime"
          nullable: true
          description: when the last pinned message was pinned. This may be `null` in events such as `GUILD_CREATE` when a message is not pinned.
        rtc_region:
          type: string
          nullable: true
          description: "[voice region](https://discord.com/developers/docs/resources/voice#voice-region-object) id for the voice channel, automatic when set to null"
        video_quality_mode:
          allOf:
            - $ref: "#/components/schemas/VideoQualityModes"
          description: the camera [video quality mode](https://discord.com/developers/docs/resources/channel#channel-object-video-quality-modes) of the voice channel, 1 when not present
        message_count:
          type: integer
          description: number of messages (not including the initial message or deleted messages) in a thread (if the thread was created before July 1, 2022, it stops counting at 50)
        member_count:
          type: integer
          description: an approximate count of users in a thread, stops counting at 50
        thread_metadata:
          allOf:
            - $ref: "#/components/schemas/ThreadMetadata"
          description: thread-specific fields not needed by other channels
        member:
          allOf:
            - $ref: "#/components/schemas/ThreadMember"
          description: thread member object for the current user, if they have joined the thread, only included on certain API endpoints
        default_auto_archive_duration:
          type: integer
          description: "default duration, copied onto newly created threads, in minutes, threads will stop showing in the channel list after the specified period of inactivity, can be set to: 60, 1440, 4320, 10080"
        permissions:
          type: string
          description: computed permissions for the invoking user in the channel, including overwrites, only included when part of the `resolved` data received on a slash command interaction
        flags:
          type: integer
          description: "[channel flags](https://discord.com/developers/docs/resources/channel#channel-object-channel-flags) combined as a [bitfield](https://en.wikipedia.org/wiki/Bit_field)"
        total_message_sent:
          type: integer
          description: number of messages ever sent in a thread, it's similar to `message_count` on message creation, but will not decrement the number when a message is deleted
        available_tags:
          type: array
          items:
            $ref: "#/components/schemas/ForumTag"
          description: the set of tags that can be used in a `GUILD_FORUM` channel
        applied_tags:
          type: array
          items:
            $ref: "#/components/schemas/Snowflake"
          description: the IDs of the set of tags that have been applied to a thread in a `GUILD_FORUM` channel
        default_reaction_emoji:
          allOf:
            - $ref: "#/components/schemas/DefaultReaction"
          nullable: true
          description: the emoji to show in the add reaction button on a thread in a `GUILD_FORUM` channel
        default_thread_rate_limit_per_user:
          type: integer
          description: the initial `rate_limit_per_user` to set on newly created threads in a channel. this field is copied to the thread at creation time and does not live update.
      externalDocs:
        url: https://discord.com/developers/docs/resources/webhook#webhook-object-webhook-structure
    Webhook:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          description: the id of the webhook
        type:
          allOf:
            - $ref: "#/components/schemas/WebhookTypes"
          description: the [type](https://discord.com/developers/docs/resources/webhook#webhook-object-webhook-types) of the webhook
        guild_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the guild id this webhook is for, if any
        channel_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the channel id this webhook is for, if any
        user:
          allOf:
            - $ref: "#/components/schemas/User"
          description: the user this webhook was created by (not returned when getting a webhook with its token)
        name:
          type: string
          nullable: true
          description: the default name of the webhook
        avatar:
          type: string
          nullable: true
          description: the default user avatar [hash](https://discord.com/developers/docs/reference#image-formatting) of the webhook
        token:
          type: string
          description: the secure token of the webhook (returned for Incoming Webhooks)
        application_id:
          allOf:
            - $ref: "#/components/schemas/Snowflake"
          nullable: true
          description: the bot/OAuth2 application that created this webhook
        source_guild:
          allOf:
            - $ref: "#/components/schemas/WebhookSourceGuild"
          description: the guild of the channel that this webhook is following (returned for Channel Follower Webhooks)
        source_channel:
          allOf:
            - $ref: "#/components/schemas/WebhookSourceChannel"
          description: the channel that this webhook is following (returned for Channel Follower Webhooks)
        url:
          type: string
          description: the url used for executing the webhook (returned by the [webhooks](#DOCS_TOPICS_OAUTH2/webhooks) OAuth2 flow)
      required:
        - id
        - type
        - channel_id
        - name
        - avatar
        - application_id
      externalDocs:
        url: https://discord.com/developers/docs/resources/webhook#webhook-object-webhook-structure
